"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@uniswap";
exports.ids = ["vendor-chunks/@uniswap"];
exports.modules = {

/***/ "(rsc)/./node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ARGENT_WALLET_DETECTOR_ADDRESS: () => (/* binding */ ARGENT_WALLET_DETECTOR_ADDRESS),\n/* harmony export */   CHAIN_TO_ADDRESSES_MAP: () => (/* binding */ CHAIN_TO_ADDRESSES_MAP),\n/* harmony export */   ChainId: () => (/* binding */ ChainId),\n/* harmony export */   CurrencyAmount: () => (/* binding */ CurrencyAmount),\n/* harmony export */   ENS_REGISTRAR_ADDRESSES: () => (/* binding */ ENS_REGISTRAR_ADDRESSES),\n/* harmony export */   Ether: () => (/* binding */ Ether),\n/* harmony export */   Fraction: () => (/* binding */ Fraction),\n/* harmony export */   GOVERNANCE_ALPHA_V0_ADDRESSES: () => (/* binding */ GOVERNANCE_ALPHA_V0_ADDRESSES),\n/* harmony export */   GOVERNANCE_ALPHA_V1_ADDRESSES: () => (/* binding */ GOVERNANCE_ALPHA_V1_ADDRESSES),\n/* harmony export */   GOVERNANCE_BRAVO_ADDRESSES: () => (/* binding */ GOVERNANCE_BRAVO_ADDRESSES),\n/* harmony export */   MERKLE_DISTRIBUTOR_ADDRESS: () => (/* binding */ MERKLE_DISTRIBUTOR_ADDRESS),\n/* harmony export */   MIXED_ROUTE_QUOTER_V1_ADDRESSES: () => (/* binding */ MIXED_ROUTE_QUOTER_V1_ADDRESSES),\n/* harmony export */   MULTICALL_ADDRESSES: () => (/* binding */ MULTICALL_ADDRESSES),\n/* harmony export */   MaxUint256: () => (/* binding */ MaxUint256),\n/* harmony export */   NONFUNGIBLE_POSITION_MANAGER_ADDRESSES: () => (/* binding */ NONFUNGIBLE_POSITION_MANAGER_ADDRESSES),\n/* harmony export */   NativeCurrency: () => (/* binding */ NativeCurrency),\n/* harmony export */   NativeCurrencyName: () => (/* binding */ NativeCurrencyName),\n/* harmony export */   Percent: () => (/* binding */ Percent),\n/* harmony export */   Price: () => (/* binding */ Price),\n/* harmony export */   QUOTER_ADDRESSES: () => (/* binding */ QUOTER_ADDRESSES),\n/* harmony export */   Rounding: () => (/* binding */ Rounding),\n/* harmony export */   SOCKS_CONTROLLER_ADDRESSES: () => (/* binding */ SOCKS_CONTROLLER_ADDRESSES),\n/* harmony export */   SUPPORTED_CHAINS: () => (/* binding */ SUPPORTED_CHAINS),\n/* harmony export */   SWAP_ROUTER_02_ADDRESSES: () => (/* binding */ SWAP_ROUTER_02_ADDRESSES),\n/* harmony export */   TICK_LENS_ADDRESSES: () => (/* binding */ TICK_LENS_ADDRESSES),\n/* harmony export */   TIMELOCK_ADDRESSES: () => (/* binding */ TIMELOCK_ADDRESSES),\n/* harmony export */   Token: () => (/* binding */ Token),\n/* harmony export */   TradeType: () => (/* binding */ TradeType),\n/* harmony export */   UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS: () => (/* binding */ UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS),\n/* harmony export */   UNI_ADDRESSES: () => (/* binding */ UNI_ADDRESSES),\n/* harmony export */   V2_FACTORY_ADDRESS: () => (/* binding */ V2_FACTORY_ADDRESS),\n/* harmony export */   V2_FACTORY_ADDRESSES: () => (/* binding */ V2_FACTORY_ADDRESSES),\n/* harmony export */   V2_ROUTER_ADDRESS: () => (/* binding */ V2_ROUTER_ADDRESS),\n/* harmony export */   V2_ROUTER_ADDRESSES: () => (/* binding */ V2_ROUTER_ADDRESSES),\n/* harmony export */   V3_CORE_FACTORY_ADDRESSES: () => (/* binding */ V3_CORE_FACTORY_ADDRESSES),\n/* harmony export */   V3_MIGRATOR_ADDRESSES: () => (/* binding */ V3_MIGRATOR_ADDRESSES),\n/* harmony export */   WETH9: () => (/* binding */ WETH9),\n/* harmony export */   computePriceImpact: () => (/* binding */ computePriceImpact),\n/* harmony export */   computeZksyncCreate2Address: () => (/* binding */ computeZksyncCreate2Address),\n/* harmony export */   sortedInsert: () => (/* binding */ sortedInsert),\n/* harmony export */   sqrt: () => (/* binding */ sqrt),\n/* harmony export */   validateAndParseAddress: () => (/* binding */ validateAndParseAddress)\n/* harmony export */ });\n/* harmony import */ var jsbi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsbi */ \"(rsc)/./node_modules/jsbi/dist/jsbi.mjs\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-invariant */ \"(rsc)/./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! decimal.js-light */ \"(rsc)/./node_modules/decimal.js-light/decimal.mjs\");\n/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! big.js */ \"(rsc)/./node_modules/big.js/big.mjs\");\n/* harmony import */ var toformat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! toformat */ \"(rsc)/./node_modules/toformat/toFormat.js\");\n/* harmony import */ var toformat__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(toformat__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/bignumber */ \"(rsc)/./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/address */ \"(rsc)/./node_modules/@ethersproject/address/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/bytes */ \"(rsc)/./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/keccak256 */ \"(rsc)/./node_modules/@ethersproject/keccak256/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/strings */ \"(rsc)/./node_modules/@ethersproject/strings/lib.esm/utf8.js\");\n\n\n\n\n\n\n\n\n\n\n\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);\n}\nfunction _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nvar ChainId;\n(function (ChainId) {\n  ChainId[ChainId[\"MAINNET\"] = 1] = \"MAINNET\";\n  ChainId[ChainId[\"GOERLI\"] = 5] = \"GOERLI\";\n  ChainId[ChainId[\"SEPOLIA\"] = 11155111] = \"SEPOLIA\";\n  ChainId[ChainId[\"OPTIMISM\"] = 10] = \"OPTIMISM\";\n  ChainId[ChainId[\"OPTIMISM_GOERLI\"] = 420] = \"OPTIMISM_GOERLI\";\n  ChainId[ChainId[\"OPTIMISM_SEPOLIA\"] = 11155420] = \"OPTIMISM_SEPOLIA\";\n  ChainId[ChainId[\"ARBITRUM_ONE\"] = 42161] = \"ARBITRUM_ONE\";\n  ChainId[ChainId[\"ARBITRUM_GOERLI\"] = 421613] = \"ARBITRUM_GOERLI\";\n  ChainId[ChainId[\"ARBITRUM_SEPOLIA\"] = 421614] = \"ARBITRUM_SEPOLIA\";\n  ChainId[ChainId[\"POLYGON\"] = 137] = \"POLYGON\";\n  ChainId[ChainId[\"POLYGON_MUMBAI\"] = 80001] = \"POLYGON_MUMBAI\";\n  ChainId[ChainId[\"CELO\"] = 42220] = \"CELO\";\n  ChainId[ChainId[\"CELO_ALFAJORES\"] = 44787] = \"CELO_ALFAJORES\";\n  ChainId[ChainId[\"GNOSIS\"] = 100] = \"GNOSIS\";\n  ChainId[ChainId[\"MOONBEAM\"] = 1284] = \"MOONBEAM\";\n  ChainId[ChainId[\"BNB\"] = 56] = \"BNB\";\n  ChainId[ChainId[\"AVALANCHE\"] = 43114] = \"AVALANCHE\";\n  ChainId[ChainId[\"BASE_GOERLI\"] = 84531] = \"BASE_GOERLI\";\n  ChainId[ChainId[\"BASE_SEPOLIA\"] = 84532] = \"BASE_SEPOLIA\";\n  ChainId[ChainId[\"BASE\"] = 8453] = \"BASE\";\n  ChainId[ChainId[\"ZORA\"] = 7777777] = \"ZORA\";\n  ChainId[ChainId[\"ZORA_SEPOLIA\"] = 999999999] = \"ZORA_SEPOLIA\";\n  ChainId[ChainId[\"ROOTSTOCK\"] = 30] = \"ROOTSTOCK\";\n  ChainId[ChainId[\"BLAST\"] = 81457] = \"BLAST\";\n  ChainId[ChainId[\"ZKSYNC\"] = 324] = \"ZKSYNC\";\n  ChainId[ChainId[\"WORLDCHAIN\"] = 480] = \"WORLDCHAIN\";\n  ChainId[ChainId[\"UNICHAIN_SEPOLIA\"] = 1301] = \"UNICHAIN_SEPOLIA\";\n  ChainId[ChainId[\"UNICHAIN\"] = 130] = \"UNICHAIN\";\n  ChainId[ChainId[\"MONAD_TESTNET\"] = 10143] = \"MONAD_TESTNET\";\n  ChainId[ChainId[\"SONEIUM\"] = 1868] = \"SONEIUM\";\n})(ChainId || (ChainId = {}));\nvar SUPPORTED_CHAINS = [ChainId.MAINNET, ChainId.OPTIMISM, ChainId.OPTIMISM_GOERLI, ChainId.OPTIMISM_SEPOLIA, ChainId.ARBITRUM_ONE, ChainId.ARBITRUM_GOERLI, ChainId.ARBITRUM_SEPOLIA, ChainId.POLYGON, ChainId.POLYGON_MUMBAI, ChainId.GOERLI, ChainId.SEPOLIA, ChainId.CELO_ALFAJORES, ChainId.CELO, ChainId.BNB, ChainId.AVALANCHE, ChainId.BASE, ChainId.BASE_GOERLI, ChainId.BASE_SEPOLIA, ChainId.ZORA, ChainId.ZORA_SEPOLIA, ChainId.ROOTSTOCK, ChainId.BLAST, ChainId.ZKSYNC, ChainId.WORLDCHAIN, ChainId.UNICHAIN_SEPOLIA, ChainId.UNICHAIN, ChainId.MONAD_TESTNET, ChainId.SONEIUM];\nvar NativeCurrencyName;\n(function (NativeCurrencyName) {\n  // Strings match input for CLI\n  NativeCurrencyName[\"ETHER\"] = \"ETH\";\n  NativeCurrencyName[\"MATIC\"] = \"MATIC\";\n  NativeCurrencyName[\"CELO\"] = \"CELO\";\n  NativeCurrencyName[\"GNOSIS\"] = \"XDAI\";\n  NativeCurrencyName[\"MOONBEAM\"] = \"GLMR\";\n  NativeCurrencyName[\"BNB\"] = \"BNB\";\n  NativeCurrencyName[\"AVAX\"] = \"AVAX\";\n  NativeCurrencyName[\"ROOTSTOCK\"] = \"RBTC\";\n})(NativeCurrencyName || (NativeCurrencyName = {}));\n\nvar _V2_FACTORY_ADDRESSES, _V2_ROUTER_ADDRESSES, _CHAIN_TO_ADDRESSES_M, _GOVERNANCE_ALPHA_V1_, _GOVERNANCE_BRAVO_ADD, _MERKLE_DISTRIBUTOR_A, _ARGENT_WALLET_DETECT, _SOCKS_CONTROLLER_ADD;\nvar DEFAULT_NETWORKS = [ChainId.MAINNET, ChainId.GOERLI, ChainId.SEPOLIA];\nfunction constructSameAddressMap(address, additionalNetworks) {\n  if (additionalNetworks === void 0) {\n    additionalNetworks = [];\n  }\n  return DEFAULT_NETWORKS.concat(additionalNetworks).reduce(function (memo, chainId) {\n    memo[chainId] = address;\n    return memo;\n  }, {});\n}\nvar UNI_ADDRESSES = /*#__PURE__*/constructSameAddressMap('0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984', [ChainId.OPTIMISM, ChainId.ARBITRUM_ONE, ChainId.POLYGON, ChainId.POLYGON_MUMBAI, ChainId.SEPOLIA]);\nvar UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS = '0x8B799381ac40b838BBA4131ffB26197C432AFe78';\n/**\r\n * @deprecated use V2_FACTORY_ADDRESSES instead\r\n */\nvar V2_FACTORY_ADDRESS = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f';\nvar V2_FACTORY_ADDRESSES = (_V2_FACTORY_ADDRESSES = {}, _V2_FACTORY_ADDRESSES[ChainId.MAINNET] = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', _V2_FACTORY_ADDRESSES[ChainId.GOERLI] = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', _V2_FACTORY_ADDRESSES[ChainId.SEPOLIA] = '0xF62c03E08ada871A0bEb309762E260a7a6a880E6', _V2_FACTORY_ADDRESSES[ChainId.OPTIMISM] = '0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf', _V2_FACTORY_ADDRESSES[ChainId.ARBITRUM_ONE] = '0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9', _V2_FACTORY_ADDRESSES[ChainId.AVALANCHE] = '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C', _V2_FACTORY_ADDRESSES[ChainId.BASE_SEPOLIA] = '0x7Ae58f10f7849cA6F5fB71b7f45CB416c9204b1e', _V2_FACTORY_ADDRESSES[ChainId.BASE] = '0x8909dc15e40173ff4699343b6eb8132c65e18ec6', _V2_FACTORY_ADDRESSES[ChainId.BNB] = '0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6', _V2_FACTORY_ADDRESSES[ChainId.POLYGON] = '0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C', _V2_FACTORY_ADDRESSES[ChainId.CELO] = '0x79a530c8e2fA8748B7B40dd3629C0520c2cCf03f', _V2_FACTORY_ADDRESSES[ChainId.BLAST] = '0x5C346464d33F90bABaf70dB6388507CC889C1070', _V2_FACTORY_ADDRESSES[ChainId.WORLDCHAIN] = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', _V2_FACTORY_ADDRESSES[ChainId.UNICHAIN_SEPOLIA] = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', _V2_FACTORY_ADDRESSES[ChainId.UNICHAIN] = '0x1f98400000000000000000000000000000000002', _V2_FACTORY_ADDRESSES[ChainId.MONAD_TESTNET] = '0x733e88f248b742db6c14c0b1713af5ad7fdd59d0', _V2_FACTORY_ADDRESSES[ChainId.SONEIUM] = '0x97febbc2adbd5644ba22736e962564b23f5828ce', _V2_FACTORY_ADDRESSES);\n/**\r\n * @deprecated use V2_ROUTER_ADDRESSES instead\r\n */\nvar V2_ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D';\nvar V2_ROUTER_ADDRESSES = (_V2_ROUTER_ADDRESSES = {}, _V2_ROUTER_ADDRESSES[ChainId.MAINNET] = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', _V2_ROUTER_ADDRESSES[ChainId.GOERLI] = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', _V2_ROUTER_ADDRESSES[ChainId.SEPOLIA] = '0xeE567Fe1712Faf6149d80dA1E6934E354124CfE3', _V2_ROUTER_ADDRESSES[ChainId.ARBITRUM_ONE] = '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24', _V2_ROUTER_ADDRESSES[ChainId.OPTIMISM] = '0x4a7b5da61326a6379179b40d00f57e5bbdc962c2', _V2_ROUTER_ADDRESSES[ChainId.BASE_SEPOLIA] = '0x1689E7B1F10000AE47eBfE339a4f69dECd19F602', _V2_ROUTER_ADDRESSES[ChainId.BASE] = '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24', _V2_ROUTER_ADDRESSES[ChainId.AVALANCHE] = '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24', _V2_ROUTER_ADDRESSES[ChainId.BNB] = '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24', _V2_ROUTER_ADDRESSES[ChainId.POLYGON] = '0xedf6066a2b290c185783862c7f4776a2c8077ad1', _V2_ROUTER_ADDRESSES[ChainId.BLAST] = '0xBB66Eb1c5e875933D44DAe661dbD80e5D9B03035', _V2_ROUTER_ADDRESSES[ChainId.WORLDCHAIN] = '0x541aB7c31A119441eF3575F6973277DE0eF460bd', _V2_ROUTER_ADDRESSES[ChainId.UNICHAIN_SEPOLIA] = '0x920b806E40A00E02E7D2b94fFc89860fDaEd3640', _V2_ROUTER_ADDRESSES[ChainId.UNICHAIN] = '0x284f11109359a7e1306c3e447ef14d38400063ff', _V2_ROUTER_ADDRESSES[ChainId.MONAD_TESTNET] = '0xfb8e1c3b833f9e67a71c859a132cf783b645e436', _V2_ROUTER_ADDRESSES[ChainId.SONEIUM] = '0x273f68c234fa55b550b40e563c4a488e0d334320', _V2_ROUTER_ADDRESSES);\n// Networks that share most of the same addresses i.e. Mainnet, Goerli, Optimism, Arbitrum, Polygon\nvar DEFAULT_ADDRESSES = {\n  v3CoreFactoryAddress: '0x1F98431c8aD98523631AE4a59f267346ea31F984',\n  multicallAddress: '0x1F98415757620B543A52E61c46B32eB19261F984',\n  quoterAddress: '0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6',\n  v3MigratorAddress: '0xA5644E29708357803b5A882D272c41cC0dF92B34',\n  nonfungiblePositionManagerAddress: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88'\n};\nvar MAINNET_ADDRESSES = /*#__PURE__*/_extends({}, DEFAULT_ADDRESSES, {\n  mixedRouteQuoterV1Address: '0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E',\n  v4PoolManagerAddress: '0x000000000004444c5dc75cB358380D2e3dE08A90',\n  v4PositionManagerAddress: '0xbd216513d74c8cf14cf4747e6aaa6420ff64ee9e',\n  v4StateView: '0x7ffe42c4a5deea5b0fec41c94c136cf115597227',\n  v4QuoterAddress: '0x52f0e24d1c21c8a0cb1e5a5dd6198556bd9e1203'\n});\nvar GOERLI_ADDRESSES = /*#__PURE__*/_extends({}, DEFAULT_ADDRESSES, {\n  mixedRouteQuoterV1Address: '0xBa60b6e6fF25488308789E6e0A65D838be34194e'\n});\nvar OPTIMISM_ADDRESSES = /*#__PURE__*/_extends({}, DEFAULT_ADDRESSES, {\n  v4PoolManagerAddress: '0x9a13f98cb987694c9f086b1f5eb990eea8264ec3',\n  v4PositionManagerAddress: '0x3c3ea4b57a46241e54610e5f022e5c45859a1017',\n  v4StateView: '0xc18a3169788f4f75a170290584eca6395c75ecdb',\n  v4QuoterAddress: '0x1f3131a13296fb91c90870043742c3cdbff1a8d7'\n});\nvar ARBITRUM_ONE_ADDRESSES = /*#__PURE__*/_extends({}, DEFAULT_ADDRESSES, {\n  multicallAddress: '0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB',\n  tickLensAddress: '0xbfd8137f7d1516D3ea5cA83523914859ec47F573',\n  v4PoolManagerAddress: '0x360e68faccca8ca495c1b759fd9eee466db9fb32',\n  v4PositionManagerAddress: '0xd88f38f930b7952f2db2432cb002e7abbf3dd869',\n  v4StateView: '0x76fd297e2d437cd7f76d50f01afe6160f86e9990',\n  v4QuoterAddress: '0x3972c00f7ed4885e145823eb7c655375d275a1c5'\n});\nvar POLYGON_ADDRESSES = /*#__PURE__*/_extends({}, DEFAULT_ADDRESSES, {\n  v4PoolManagerAddress: '0x67366782805870060151383f4bbff9dab53e5cd6',\n  v4PositionManagerAddress: '0x1ec2ebf4f37e7363fdfe3551602425af0b3ceef9',\n  v4StateView: '0x5ea1bd7974c8a611cbab0bdcafcb1d9cc9b3ba5a',\n  v4QuoterAddress: '0xb3d5c3dfc3a7aebff71895a7191796bffc2c81b9'\n});\n// celo v3 addresses\nvar CELO_ADDRESSES = {\n  v3CoreFactoryAddress: '0xAfE208a311B21f13EF87E33A90049fC17A7acDEc',\n  multicallAddress: '0x633987602DE5C4F337e3DbF265303A1080324204',\n  quoterAddress: '0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8',\n  v3MigratorAddress: '0x3cFd4d48EDfDCC53D3f173F596f621064614C582',\n  nonfungiblePositionManagerAddress: '0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A',\n  tickLensAddress: '0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D'\n};\n// BNB v3 addresses\nvar BNB_ADDRESSES = {\n  v3CoreFactoryAddress: '0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7',\n  multicallAddress: '0x963Df249eD09c358A4819E39d9Cd5736c3087184',\n  quoterAddress: '0x78D78E420Da98ad378D7799bE8f4AF69033EB077',\n  v3MigratorAddress: '0x32681814957e0C13117ddc0c2aba232b5c9e760f',\n  nonfungiblePositionManagerAddress: '0x7b8A01B39D58278b5DE7e48c8449c9f4F5170613',\n  tickLensAddress: '0xD9270014D396281579760619CCf4c3af0501A47C',\n  swapRouter02Address: '0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2',\n  v4PoolManagerAddress: '0x28e2ea090877bf75740558f6bfb36a5ffee9e9df',\n  v4PositionManagerAddress: '0x7a4a5c919ae2541aed11041a1aeee68f1287f95b',\n  v4StateView: '0xd13dd3d6e93f276fafc9db9e6bb47c1180aee0c4',\n  v4QuoterAddress: '0x9f75dd27d6664c475b90e105573e550ff69437b0'\n};\n// optimism goerli addresses\nvar OPTIMISM_GOERLI_ADDRESSES = {\n  v3CoreFactoryAddress: '0xB656dA17129e7EB733A557f4EBc57B76CFbB5d10',\n  multicallAddress: '0x07F2D8a2a02251B62af965f22fC4744A5f96BCCd',\n  quoterAddress: '0x9569CbA925c8ca2248772A9A4976A516743A246F',\n  v3MigratorAddress: '0xf6c55fBe84B1C8c3283533c53F51bC32F5C7Aba8',\n  nonfungiblePositionManagerAddress: '0x39Ca85Af2F383190cBf7d7c41ED9202D27426EF6',\n  tickLensAddress: '0xe6140Bd164b63E8BfCfc40D5dF952f83e171758e'\n};\n// optimism sepolia addresses\nvar OPTIMISM_SEPOLIA_ADDRESSES = {\n  v3CoreFactoryAddress: '0x8CE191193D15ea94e11d327b4c7ad8bbE520f6aF',\n  multicallAddress: '0x80e4e06841bb76AA9735E0448cB8d003C0EF009a',\n  quoterAddress: '0x0FBEa6cf957d95ee9313490050F6A0DA68039404',\n  v3MigratorAddress: '0xE7EcbAAaA54D007A00dbb6c1d2f150066D69dA07',\n  nonfungiblePositionManagerAddress: '0xdA75cEf1C93078e8b736FCA5D5a30adb97C8957d',\n  tickLensAddress: '0xCb7f54747F58F8944973cea5b8f4ac2209BadDC5',\n  swapRouter02Address: '0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4'\n};\n// arbitrum goerli v3 addresses\nvar ARBITRUM_GOERLI_ADDRESSES = {\n  v3CoreFactoryAddress: '0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6',\n  multicallAddress: '0x8260CB40247290317a4c062F3542622367F206Ee',\n  quoterAddress: '0x1dd92b83591781D0C6d98d07391eea4b9a6008FA',\n  v3MigratorAddress: '0xA815919D2584Ac3F76ea9CB62E6Fd40a43BCe0C3',\n  nonfungiblePositionManagerAddress: '0x622e4726a167799826d1E1D150b076A7725f5D81',\n  tickLensAddress: '0xb52429333da969a0C79a60930a4Bf0020E5D1DE8'\n};\n// arbitrum sepolia v3 addresses\nvar ARBITRUM_SEPOLIA_ADDRESSES = {\n  v3CoreFactoryAddress: '0x248AB79Bbb9bC29bB72f7Cd42F17e054Fc40188e',\n  multicallAddress: '0x2B718b475e385eD29F56775a66aAB1F5cC6B2A0A',\n  quoterAddress: '0x2779a0CC1c3e0E44D2542EC3e79e3864Ae93Ef0B',\n  v3MigratorAddress: '0x398f43ef2c67B941147157DA1c5a868E906E043D',\n  nonfungiblePositionManagerAddress: '0x6b2937Bde17889EDCf8fbD8dE31C3C2a70Bc4d65',\n  tickLensAddress: '0x0fd18587734e5C2dcE2dccDcC7DD1EC89ba557d9',\n  swapRouter02Address: '0x101F443B4d1b059569D643917553c771E1b9663E',\n  v4PoolManagerAddress: '0xFB3e0C6F74eB1a21CC1Da29aeC80D2Dfe6C9a317',\n  v4PositionManagerAddress: '0xAc631556d3d4019C95769033B5E719dD77124BAc',\n  v4StateView: '0x9d467fa9062b6e9b1a46e26007ad82db116c67cb',\n  v4QuoterAddress: '0x7de51022d70a725b508085468052e25e22b5c4c9'\n};\n// sepolia v3 addresses\nvar SEPOLIA_ADDRESSES = {\n  v3CoreFactoryAddress: '0x0227628f3F023bb0B980b67D528571c95c6DaC1c',\n  multicallAddress: '0xD7F33bCdb21b359c8ee6F0251d30E94832baAd07',\n  quoterAddress: '0xEd1f6473345F45b75F8179591dd5bA1888cf2FB3',\n  v3MigratorAddress: '0x729004182cF005CEC8Bd85df140094b6aCbe8b15',\n  nonfungiblePositionManagerAddress: '0x1238536071E1c677A632429e3655c799b22cDA52',\n  tickLensAddress: '0xd7f33bcdb21b359c8ee6f0251d30e94832baad07',\n  swapRouter02Address: '0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E',\n  // TODO: update mixedRouteQuoterV2Address once v4 on sepolia redeployed\n  mixedRouteQuoterV2Address: '0x4745f77b56a0e2294426e3936dc4fab68d9543cd',\n  // TODO: update all below once v4 on sepolia redeployed\n  v4PoolManagerAddress: '0xE03A1074c86CFeDd5C142C4F04F1a1536e203543',\n  v4PositionManagerAddress: '0x429ba70129df741B2Ca2a85BC3A2a3328e5c09b4',\n  v4StateView: '0xe1dd9c3fa50edb962e442f60dfbc432e24537e4c',\n  v4QuoterAddress: '0x61b3f2011a92d183c7dbadbda940a7555ccf9227'\n};\n// Avalanche v3 addresses\nvar AVALANCHE_ADDRESSES = {\n  v3CoreFactoryAddress: '0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD',\n  multicallAddress: '0x0139141Cd4Ee88dF3Cdb65881D411bAE271Ef0C2',\n  quoterAddress: '0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F',\n  v3MigratorAddress: '0x44f5f1f5E452ea8d29C890E8F6e893fC0f1f0f97',\n  nonfungiblePositionManagerAddress: '0x655C406EBFa14EE2006250925e54ec43AD184f8B',\n  tickLensAddress: '0xEB9fFC8bf81b4fFd11fb6A63a6B0f098c6e21950',\n  swapRouter02Address: '0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE',\n  v4PoolManagerAddress: '0x06380c0e0912312b5150364b9dc4542ba0dbbc85',\n  v4PositionManagerAddress: '0xb74b1f14d2754acfcbbe1a221023a5cf50ab8acd',\n  v4StateView: '0xc3c9e198c735a4b97e3e683f391ccbdd60b69286',\n  v4QuoterAddress: '0xbe40675bb704506a3c2ccfb762dcfd1e979845c2'\n};\nvar BASE_ADDRESSES = {\n  v3CoreFactoryAddress: '0x33128a8fC17869897dcE68Ed026d694621f6FDfD',\n  multicallAddress: '0x091e99cb1C49331a94dD62755D168E941AbD0693',\n  quoterAddress: '0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a',\n  v3MigratorAddress: '0x23cF10b1ee3AdfCA73B0eF17C07F7577e7ACd2d7',\n  nonfungiblePositionManagerAddress: '0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1',\n  tickLensAddress: '0x0CdeE061c75D43c82520eD998C23ac2991c9ac6d',\n  swapRouter02Address: '0x2626664c2603336E57B271c5C0b26F421741e481',\n  mixedRouteQuoterV1Address: '0xe544efae946f0008ae9a8d64493efa7886b73776',\n  v4PoolManagerAddress: '0x498581ff718922c3f8e6a244956af099b2652b2b',\n  v4PositionManagerAddress: '0x7c5f5a4bbd8fd63184577525326123b519429bdc',\n  v4StateView: '0xa3c0c9b65bad0b08107aa264b0f3db444b867a71',\n  v4QuoterAddress: '0x0d5e0f971ed27fbff6c2837bf31316121532048d'\n};\n// Base Goerli v3 addresses\nvar BASE_GOERLI_ADDRESSES = {\n  v3CoreFactoryAddress: '0x9323c1d6D800ed51Bd7C6B216cfBec678B7d0BC2',\n  multicallAddress: '0xB206027a9E0E13F05eBEFa5D2402Bab3eA716439',\n  quoterAddress: '0xedf539058e28E5937dAef3f69cEd0b25fbE66Ae9',\n  v3MigratorAddress: '0x3efe5d02a04b7351D671Db7008ec6eBA9AD9e3aE',\n  nonfungiblePositionManagerAddress: '0x3c61369ef0D1D2AFa70d8feC2F31C5D6Ce134F30',\n  tickLensAddress: '0x1acB873Ee909D0c98adB18e4474943249F931b92',\n  swapRouter02Address: '0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d'\n};\n// Base Sepolia v3 addresses\nvar BASE_SEPOLIA_ADDRESSES = {\n  v3CoreFactoryAddress: '0x4752ba5DBc23f44D87826276BF6Fd6b1C372aD24',\n  multicallAddress: '0xd867e273eAbD6c853fCd0Ca0bFB6a3aE6491d2C1',\n  quoterAddress: '0xC5290058841028F1614F3A6F0F5816cAd0df5E27',\n  v3MigratorAddress: '0xCbf8b7f80800bd4888Fbc7bf1713B80FE4E23E10',\n  nonfungiblePositionManagerAddress: '0x27F971cb582BF9E50F397e4d29a5C7A34f11faA2',\n  tickLensAddress: '0xedf6066a2b290C185783862C7F4776A2C8077AD1',\n  swapRouter02Address: '0x94cC0AaC535CCDB3C01d6787D6413C739ae12bc4',\n  // v4\n  v4PoolManagerAddress: '0x05E73354cFDd6745C338b50BcFDfA3Aa6fA03408',\n  v4PositionManagerAddress: '0x4b2c77d209d3405f41a037ec6c77f7f5b8e2ca80',\n  v4StateView: '0x571291b572ed32ce6751a2cb2486ebee8defb9b4',\n  v4QuoterAddress: '0x4a6513c898fe1b2d0e78d3b0e0a4a151589b1cba'\n};\nvar ZORA_ADDRESSES = {\n  v3CoreFactoryAddress: '0x7145F8aeef1f6510E92164038E1B6F8cB2c42Cbb',\n  multicallAddress: '0xA51c76bEE6746cB487a7e9312E43e2b8f4A37C15',\n  quoterAddress: '0x11867e1b3348F3ce4FcC170BC5af3d23E07E64Df',\n  v3MigratorAddress: '0x048352d8dCF13686982C799da63fA6426a9D0b60',\n  nonfungiblePositionManagerAddress: '0xbC91e8DfA3fF18De43853372A3d7dfe585137D78',\n  tickLensAddress: '0x209AAda09D74Ad3B8D0E92910Eaf85D2357e3044',\n  swapRouter02Address: '0x7De04c96BE5159c3b5CeffC82aa176dc81281557',\n  v4PoolManagerAddress: '0x0575338e4c17006ae181b47900a84404247ca30f',\n  v4PositionManagerAddress: '0xf66c7b99e2040f0d9b326b3b7c152e9663543d63',\n  v4StateView: '0x385785af07d63b50d0a0ea57c4ff89d06adf7328',\n  v4QuoterAddress: '0x5edaccc0660e0a2c44b06e07ce8b915e625dc2c6'\n};\nvar ZORA_SEPOLIA_ADDRESSES = {\n  v3CoreFactoryAddress: '0x4324A677D74764f46f33ED447964252441aA8Db6',\n  multicallAddress: '0xA1E7e3A69671C4494EC59Dbd442de930a93F911A',\n  quoterAddress: '0xC195976fEF0985886E37036E2DF62bF371E12Df0',\n  v3MigratorAddress: '0x65ef259b31bf1d977c37e9434658694267674897',\n  nonfungiblePositionManagerAddress: '0xB8458EaAe43292e3c1F7994EFd016bd653d23c20',\n  tickLensAddress: '0x23C0F71877a1Fc4e20A78018f9831365c85f3064'\n};\nvar ROOTSTOCK_ADDRESSES = {\n  v3CoreFactoryAddress: '0xaF37EC98A00FD63689CF3060BF3B6784E00caD82',\n  multicallAddress: '0x996a9858cDfa45Ad68E47c9A30a7201E29c6a386',\n  quoterAddress: '0xb51727c996C68E60F598A923a5006853cd2fEB31',\n  v3MigratorAddress: '0x16678977CA4ec3DAD5efc7b15780295FE5f56162',\n  nonfungiblePositionManagerAddress: '0x9d9386c042F194B460Ec424a1e57ACDE25f5C4b1',\n  tickLensAddress: '0x55B9dF5bF68ADe972191a91980459f48ecA16afC',\n  swapRouter02Address: '0x0B14ff67f0014046b4b99057Aec4509640b3947A'\n};\nvar BLAST_ADDRESSES = {\n  v3CoreFactoryAddress: '0x792edAdE80af5fC680d96a2eD80A44247D2Cf6Fd',\n  multicallAddress: '0xdC7f370de7631cE9e2c2e1DCDA6B3B5744Cf4705',\n  quoterAddress: '0x6Cdcd65e03c1CEc3730AeeCd45bc140D57A25C77',\n  v3MigratorAddress: '0x15CA7043CD84C5D21Ae76Ba0A1A967d42c40ecE0',\n  nonfungiblePositionManagerAddress: '0xB218e4f7cF0533d4696fDfC419A0023D33345F28',\n  tickLensAddress: '0x2E95185bCdD928a3e984B7e2D6560Ab1b17d7274',\n  swapRouter02Address: '0x549FEB8c9bd4c12Ad2AB27022dA12492aC452B66',\n  v4PoolManagerAddress: '0x1631559198a9e474033433b2958dabc135ab6446',\n  v4PositionManagerAddress: '0x4ad2f4cca2682cbb5b950d660dd458a1d3f1baad',\n  v4StateView: '0x12a88ae16f46dce4e8b15368008ab3380885df30',\n  v4QuoterAddress: '0x6f71cdcb0d119ff72c6eb501abceb576fbf62bcf'\n};\nvar ZKSYNC_ADDRESSES = {\n  v3CoreFactoryAddress: '0x8FdA5a7a8dCA67BBcDd10F02Fa0649A937215422',\n  multicallAddress: '0x0c68a7C72f074d1c45C16d41fa74eEbC6D16a65C',\n  quoterAddress: '0x8Cb537fc92E26d8EBBb760E632c95484b6Ea3e28',\n  v3MigratorAddress: '0x611841b24E43C4ACfd290B427a3D6cf1A59dac8E',\n  nonfungiblePositionManagerAddress: '0x0616e5762c1E7Dc3723c50663dF10a162D690a86',\n  tickLensAddress: '0xe10FF11b809f8EE07b056B452c3B2caa7FE24f89',\n  swapRouter02Address: '0x99c56385daBCE3E81d8499d0b8d0257aBC07E8A3'\n};\nvar WORLDCHAIN_ADDRESSES = {\n  v3CoreFactoryAddress: '0x7a5028BDa40e7B173C278C5342087826455ea25a',\n  multicallAddress: '0x0a22c04215c97E3F532F4eF30e0aD9458792dAB9',\n  quoterAddress: '0x10158D43e6cc414deE1Bd1eB0EfC6a5cBCfF244c',\n  v3MigratorAddress: '0x9EBDdCBa71C9027E1eB45135672a30bcFEec9de3',\n  nonfungiblePositionManagerAddress: '0xec12a9F9a09f50550686363766Cc153D03c27b5e',\n  tickLensAddress: '0xE61df0CaC9d85876aCE5E3037005D80943570623',\n  swapRouter02Address: '0x091AD9e2e6e5eD44c1c66dB50e49A601F9f36cF6',\n  v4PoolManagerAddress: '0xb1860d529182ac3bc1f51fa2abd56662b7d13f33',\n  v4PositionManagerAddress: '0xc585e0f504613b5fbf874f21af14c65260fb41fa',\n  v4StateView: '0x51d394718bc09297262e368c1a481217fdeb71eb',\n  v4QuoterAddress: '0x55d235b3ff2daf7c3ede0defc9521f1d6fe6c5c0'\n};\nvar UNICHAIN_SEPOLIA_ADDRESSES = {\n  v3CoreFactoryAddress: '0x1F98431c8aD98523631AE4a59f267346ea31F984',\n  multicallAddress: '0x9D0F15f2cf58655fDDcD1EE6129C547fDaeD01b1',\n  quoterAddress: '0x6Dd37329A1A225a6Fca658265D460423DCafBF89',\n  v3MigratorAddress: '0xb5FA244C9d6D04B2FBac84418b3c4910ED1Ae5f2',\n  nonfungiblePositionManagerAddress: '0xB7F724d6dDDFd008eFf5cc2834edDE5F9eF0d075',\n  tickLensAddress: '0x5f739c790a48E97eec0efb81bab5D152c0A0ecA0',\n  swapRouter02Address: '0xd1AAE39293221B77B0C71fBD6dCb7Ea29Bb5B166',\n  v4PoolManagerAddress: '0x00b036b58a818b1bc34d502d3fe730db729e62ac',\n  v4PositionManagerAddress: '0xf969aee60879c54baaed9f3ed26147db216fd664',\n  v4StateView: '0xc199f1072a74d4e905aba1a84d9a45e2546b6222',\n  v4QuoterAddress: '0x56dcd40a3f2d466f48e7f48bdbe5cc9b92ae4472'\n};\nvar UNICHAIN_ADDRESSES = {\n  v3CoreFactoryAddress: '0x1f98400000000000000000000000000000000003',\n  multicallAddress: '0xb7610f9b733e7d45184be3a1bc966960ccc54f0b',\n  quoterAddress: '0x565ac8c7863d9bb16d07e809ff49fe5cd467634c',\n  v3MigratorAddress: '0xb9d0c246f306b1aaf02ae6ba112d5ef25e5b60dc',\n  nonfungiblePositionManagerAddress: '0x943e6e07a7e8e791dafc44083e54041d743c46e9',\n  tickLensAddress: '0xd5d76fa166ab8d8ad4c9f61aaa81457b66cbe443',\n  swapRouter02Address: '0x73855d06de49d0fe4a9c42636ba96c62da12ff9c',\n  v4PoolManagerAddress: '0x1f98400000000000000000000000000000000004',\n  v4PositionManagerAddress: '0x4529a01c7a0410167c5740c487a8de60232617bf',\n  v4StateView: '0x86e8631a016f9068c3f085faf484ee3f5fdee8f2',\n  v4QuoterAddress: '0x333e3c607b141b18ff6de9f258db6e77fe7491e0'\n};\nvar MONAD_TESTNET_ADDRESSES = {\n  v3CoreFactoryAddress: '0x961235a9020b05c44df1026d956d1f4d78014276',\n  multicallAddress: '0xa707ceb989cc3728551ed0e6e44b718dd114cf44',\n  quoterAddress: '0x1ba215c17565de7b0cb7ecab971bcf540c24a862',\n  v3MigratorAddress: '0x0a78348b71f8ae8caff2f8f9d4d74a2f36516661',\n  nonfungiblePositionManagerAddress: '0x3dcc735c74f10fe2b9db2bb55c40fbbbf24490f7',\n  tickLensAddress: '0x337478eb6058455ecb3696184b30dd6a29e3a893',\n  swapRouter02Address: '0x4c4eabd5fb1d1a7234a48692551eaecff8194ca7'\n};\nvar SONEIUM_ADDRESSES = {\n  v3CoreFactoryAddress: '0x42ae7ec7ff020412639d443e245d936429fbe717',\n  multicallAddress: '0x8ad5ef2f2508288d2de66f04dd883ad5f4ef62b2',\n  quoterAddress: '0x3e6c707d0125226ff60f291b6bd1404634f00aba',\n  v3MigratorAddress: '0xa107580f73bd797bd8b87ff24e98346d99f93ddb',\n  nonfungiblePositionManagerAddress: '0x56c1205b0244332011c1e866f4ea5384eb6bfa2c',\n  tickLensAddress: '0xcd08eefb928c86499e6235ac155906bb7c4dc41a',\n  swapRouter02Address: '0x7e40db01736f88464e5f4e42394f3d5bbb6705b9',\n  v4PoolManagerAddress: '0x360e68faccca8ca495c1b759fd9eee466db9fb32',\n  v4PositionManagerAddress: '0x1b35d13a2e2528f192637f14b05f0dc0e7deb566',\n  v4StateView: '0x76fd297e2d437cd7f76d50f01afe6160f86e9990',\n  v4QuoterAddress: '0x3972c00f7ed4885e145823eb7c655375d275a1c5'\n};\nvar CHAIN_TO_ADDRESSES_MAP = (_CHAIN_TO_ADDRESSES_M = {}, _CHAIN_TO_ADDRESSES_M[ChainId.MAINNET] = MAINNET_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.OPTIMISM] = OPTIMISM_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ARBITRUM_ONE] = ARBITRUM_ONE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.POLYGON] = POLYGON_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.POLYGON_MUMBAI] = POLYGON_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.GOERLI] = GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.CELO] = CELO_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.CELO_ALFAJORES] = CELO_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.BNB] = BNB_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.OPTIMISM_GOERLI] = OPTIMISM_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.OPTIMISM_SEPOLIA] = OPTIMISM_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ARBITRUM_GOERLI] = ARBITRUM_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ARBITRUM_SEPOLIA] = ARBITRUM_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.SEPOLIA] = SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.AVALANCHE] = AVALANCHE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.BASE] = BASE_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.BASE_GOERLI] = BASE_GOERLI_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.BASE_SEPOLIA] = BASE_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ZORA] = ZORA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ZORA_SEPOLIA] = ZORA_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ROOTSTOCK] = ROOTSTOCK_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.BLAST] = BLAST_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.ZKSYNC] = ZKSYNC_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.WORLDCHAIN] = WORLDCHAIN_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.UNICHAIN_SEPOLIA] = UNICHAIN_SEPOLIA_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.UNICHAIN] = UNICHAIN_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.MONAD_TESTNET] = MONAD_TESTNET_ADDRESSES, _CHAIN_TO_ADDRESSES_M[ChainId.SONEIUM] = SONEIUM_ADDRESSES, _CHAIN_TO_ADDRESSES_M);\n/* V3 Contract Addresses */\nvar V3_CORE_FACTORY_ADDRESSES = /*#__PURE__*/_extends({}, /*#__PURE__*/SUPPORTED_CHAINS.reduce(function (memo, chainId) {\n  memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].v3CoreFactoryAddress;\n  return memo;\n}, {}));\nvar V3_MIGRATOR_ADDRESSES = /*#__PURE__*/_extends({}, /*#__PURE__*/SUPPORTED_CHAINS.reduce(function (memo, chainId) {\n  var v3MigratorAddress = CHAIN_TO_ADDRESSES_MAP[chainId].v3MigratorAddress;\n  if (v3MigratorAddress) {\n    memo[chainId] = v3MigratorAddress;\n  }\n  return memo;\n}, {}));\nvar MULTICALL_ADDRESSES = /*#__PURE__*/_extends({}, /*#__PURE__*/SUPPORTED_CHAINS.reduce(function (memo, chainId) {\n  memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].multicallAddress;\n  return memo;\n}, {}));\n/**\r\n * The oldest V0 governance address\r\n */\nvar GOVERNANCE_ALPHA_V0_ADDRESSES = /*#__PURE__*/constructSameAddressMap('0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F');\n/**\r\n * The older V1 governance address\r\n */\nvar GOVERNANCE_ALPHA_V1_ADDRESSES = (_GOVERNANCE_ALPHA_V1_ = {}, _GOVERNANCE_ALPHA_V1_[ChainId.MAINNET] = '0xC4e172459f1E7939D522503B81AFAaC1014CE6F6', _GOVERNANCE_ALPHA_V1_);\n/**\r\n * The latest governor bravo that is currently admin of timelock\r\n */\nvar GOVERNANCE_BRAVO_ADDRESSES = (_GOVERNANCE_BRAVO_ADD = {}, _GOVERNANCE_BRAVO_ADD[ChainId.MAINNET] = '0x408ED6354d4973f66138C91495F2f2FCbd8724C3', _GOVERNANCE_BRAVO_ADD);\nvar TIMELOCK_ADDRESSES = /*#__PURE__*/constructSameAddressMap('0x1a9C8182C09F50C8318d769245beA52c32BE35BC');\nvar MERKLE_DISTRIBUTOR_ADDRESS = (_MERKLE_DISTRIBUTOR_A = {}, _MERKLE_DISTRIBUTOR_A[ChainId.MAINNET] = '0x090D4613473dEE047c3f2706764f49E0821D256e', _MERKLE_DISTRIBUTOR_A);\nvar ARGENT_WALLET_DETECTOR_ADDRESS = (_ARGENT_WALLET_DETECT = {}, _ARGENT_WALLET_DETECT[ChainId.MAINNET] = '0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8', _ARGENT_WALLET_DETECT);\nvar QUOTER_ADDRESSES = /*#__PURE__*/_extends({}, /*#__PURE__*/SUPPORTED_CHAINS.reduce(function (memo, chainId) {\n  memo[chainId] = CHAIN_TO_ADDRESSES_MAP[chainId].quoterAddress;\n  return memo;\n}, {}));\nvar NONFUNGIBLE_POSITION_MANAGER_ADDRESSES = /*#__PURE__*/_extends({}, /*#__PURE__*/SUPPORTED_CHAINS.reduce(function (memo, chainId) {\n  var nonfungiblePositionManagerAddress = CHAIN_TO_ADDRESSES_MAP[chainId].nonfungiblePositionManagerAddress;\n  if (nonfungiblePositionManagerAddress) {\n    memo[chainId] = nonfungiblePositionManagerAddress;\n  }\n  return memo;\n}, {}));\nvar ENS_REGISTRAR_ADDRESSES = /*#__PURE__*/_extends({}, /*#__PURE__*/constructSameAddressMap('0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'));\nvar SOCKS_CONTROLLER_ADDRESSES = (_SOCKS_CONTROLLER_ADD = {}, _SOCKS_CONTROLLER_ADD[ChainId.MAINNET] = '0x65770b5283117639760beA3F867b69b3697a91dd', _SOCKS_CONTROLLER_ADD);\nvar TICK_LENS_ADDRESSES = /*#__PURE__*/_extends({}, /*#__PURE__*/SUPPORTED_CHAINS.reduce(function (memo, chainId) {\n  var tickLensAddress = CHAIN_TO_ADDRESSES_MAP[chainId].tickLensAddress;\n  if (tickLensAddress) {\n    memo[chainId] = tickLensAddress;\n  }\n  return memo;\n}, {}));\nvar MIXED_ROUTE_QUOTER_V1_ADDRESSES = /*#__PURE__*/SUPPORTED_CHAINS.reduce(function (memo, chainId) {\n  var mixedRouteQuoterV1Address = CHAIN_TO_ADDRESSES_MAP[chainId].mixedRouteQuoterV1Address;\n  if (mixedRouteQuoterV1Address) {\n    memo[chainId] = mixedRouteQuoterV1Address;\n  }\n  return memo;\n}, {});\nvar SWAP_ROUTER_02_ADDRESSES = function SWAP_ROUTER_02_ADDRESSES(chainId) {\n  if (SUPPORTED_CHAINS.includes(chainId)) {\n    var _CHAIN_TO_ADDRESSES_M2;\n    var id = chainId;\n    return (_CHAIN_TO_ADDRESSES_M2 = CHAIN_TO_ADDRESSES_MAP[id].swapRouter02Address) != null ? _CHAIN_TO_ADDRESSES_M2 : '0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45';\n  }\n  return '';\n};\n\nvar TradeType;\n(function (TradeType) {\n  TradeType[TradeType[\"EXACT_INPUT\"] = 0] = \"EXACT_INPUT\";\n  TradeType[TradeType[\"EXACT_OUTPUT\"] = 1] = \"EXACT_OUTPUT\";\n})(TradeType || (TradeType = {}));\nvar Rounding;\n(function (Rounding) {\n  Rounding[Rounding[\"ROUND_DOWN\"] = 0] = \"ROUND_DOWN\";\n  Rounding[Rounding[\"ROUND_HALF_UP\"] = 1] = \"ROUND_HALF_UP\";\n  Rounding[Rounding[\"ROUND_UP\"] = 2] = \"ROUND_UP\";\n})(Rounding || (Rounding = {}));\nvar MaxUint256 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\n\nvar _toSignificantRoundin, _toFixedRounding;\nvar Decimal = /*#__PURE__*/toformat__WEBPACK_IMPORTED_MODULE_4___default()(decimal_js_light__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\nvar Big = /*#__PURE__*/toformat__WEBPACK_IMPORTED_MODULE_4___default()(big_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\nvar toSignificantRounding = (_toSignificantRoundin = {}, _toSignificantRoundin[Rounding.ROUND_DOWN] = Decimal.ROUND_DOWN, _toSignificantRoundin[Rounding.ROUND_HALF_UP] = Decimal.ROUND_HALF_UP, _toSignificantRoundin[Rounding.ROUND_UP] = Decimal.ROUND_UP, _toSignificantRoundin);\nvar toFixedRounding = (_toFixedRounding = {}, _toFixedRounding[Rounding.ROUND_DOWN] = 0, _toFixedRounding[Rounding.ROUND_HALF_UP] = 1, _toFixedRounding[Rounding.ROUND_UP] = 3, _toFixedRounding);\nvar Fraction = /*#__PURE__*/function () {\n  function Fraction(numerator, denominator) {\n    if (denominator === void 0) {\n      denominator = jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(1);\n    }\n    this.numerator = jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(numerator);\n    this.denominator = jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(denominator);\n  }\n  Fraction.tryParseFraction = function tryParseFraction(fractionish) {\n    if (fractionish instanceof jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"] || typeof fractionish === 'number' || typeof fractionish === 'string') return new Fraction(fractionish);\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish;\n    throw new Error('Could not parse fraction');\n  }\n  // performs floor division\n  ;\n  var _proto = Fraction.prototype;\n  _proto.invert = function invert() {\n    return new Fraction(this.denominator, this.numerator);\n  };\n  _proto.add = function add(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    if (jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.numerator, otherParsed.numerator), this.denominator);\n    }\n    return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(this.numerator, otherParsed.denominator), jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(otherParsed.numerator, this.denominator)), jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(this.denominator, otherParsed.denominator));\n  };\n  _proto.subtract = function subtract(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    if (jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtract(this.numerator, otherParsed.numerator), this.denominator);\n    }\n    return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtract(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(this.numerator, otherParsed.denominator), jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(otherParsed.numerator, this.denominator)), jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(this.denominator, otherParsed.denominator));\n  };\n  _proto.lessThan = function lessThan(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lessThan(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(this.numerator, otherParsed.denominator), jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(otherParsed.numerator, this.denominator));\n  };\n  _proto.equalTo = function equalTo(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].equal(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(this.numerator, otherParsed.denominator), jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(otherParsed.numerator, this.denominator));\n  };\n  _proto.greaterThan = function greaterThan(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].greaterThan(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(this.numerator, otherParsed.denominator), jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(otherParsed.numerator, this.denominator));\n  };\n  _proto.multiply = function multiply(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(this.numerator, otherParsed.numerator), jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(this.denominator, otherParsed.denominator));\n  };\n  _proto.divide = function divide(other) {\n    var otherParsed = Fraction.tryParseFraction(other);\n    return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(this.numerator, otherParsed.denominator), jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(this.denominator, otherParsed.numerator));\n  };\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_HALF_UP;\n    }\n    !Number.isInteger(significantDigits) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, significantDigits + \" is not an integer.\") : 0 : void 0;\n    !(significantDigits > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, significantDigits + \" is not positive.\") : 0 : void 0;\n    Decimal.set({\n      precision: significantDigits + 1,\n      rounding: toSignificantRounding[rounding]\n    });\n    var quotient = new Decimal(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(significantDigits);\n    return quotient.toFormat(quotient.decimalPlaces(), format);\n  };\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_HALF_UP;\n    }\n    !Number.isInteger(decimalPlaces) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, decimalPlaces + \" is not an integer.\") : 0 : void 0;\n    !(decimalPlaces >= 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, decimalPlaces + \" is negative.\") : 0 : void 0;\n    Big.DP = decimalPlaces;\n    Big.RM = toFixedRounding[rounding];\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format);\n  }\n  /**\r\n   * Helper method for converting any super class back to a fraction\r\n   */;\n  return _createClass(Fraction, [{\n    key: \"quotient\",\n    get: function get() {\n      return jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].divide(this.numerator, this.denominator);\n    }\n    // remainder after floor division\n  }, {\n    key: \"remainder\",\n    get: function get() {\n      return new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remainder(this.numerator, this.denominator), this.denominator);\n    }\n  }, {\n    key: \"asFraction\",\n    get: function get() {\n      return new Fraction(this.numerator, this.denominator);\n    }\n  }]);\n}();\n\nvar Big$1 = /*#__PURE__*/toformat__WEBPACK_IMPORTED_MODULE_4___default()(big_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\nvar CurrencyAmount = /*#__PURE__*/function (_Fraction) {\n  function CurrencyAmount(currency, numerator, denominator) {\n    var _this;\n    _this = _Fraction.call(this, numerator, denominator) || this;\n    !jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lessThanOrEqual(_this.quotient, MaxUint256) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'AMOUNT') : 0 : void 0;\n    _this.currency = currency;\n    _this.decimalScale = jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].exponentiate(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(10), jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(currency.decimals));\n    return _this;\n  }\n  /**\r\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\r\n   * @param currency the currency in the amount\r\n   * @param rawAmount the raw token or ether amount\r\n   */\n  _inheritsLoose(CurrencyAmount, _Fraction);\n  CurrencyAmount.fromRawAmount = function fromRawAmount(currency, rawAmount) {\n    return new CurrencyAmount(currency, rawAmount);\n  }\n  /**\r\n   * Construct a currency amount with a denominator that is not equal to 1\r\n   * @param currency the currency\r\n   * @param numerator the numerator of the fractional token amount\r\n   * @param denominator the denominator of the fractional token amount\r\n   */;\n  CurrencyAmount.fromFractionalAmount = function fromFractionalAmount(currency, numerator, denominator) {\n    return new CurrencyAmount(currency, numerator, denominator);\n  };\n  var _proto = CurrencyAmount.prototype;\n  _proto.add = function add(other) {\n    !this.currency.equals(other.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'CURRENCY') : 0 : void 0;\n    var added = _Fraction.prototype.add.call(this, other);\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator);\n  };\n  _proto.subtract = function subtract(other) {\n    !this.currency.equals(other.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'CURRENCY') : 0 : void 0;\n    var subtracted = _Fraction.prototype.subtract.call(this, other);\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator);\n  };\n  _proto.multiply = function multiply(other) {\n    var multiplied = _Fraction.prototype.multiply.call(this, other);\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator);\n  };\n  _proto.divide = function divide(other) {\n    var divided = _Fraction.prototype.divide.call(this, other);\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator);\n  };\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 6;\n    }\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_DOWN;\n    }\n    return _Fraction.prototype.divide.call(this, this.decimalScale).toSignificant(significantDigits, format, rounding);\n  };\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = this.currency.decimals;\n    }\n    if (rounding === void 0) {\n      rounding = Rounding.ROUND_DOWN;\n    }\n    !(decimalPlaces <= this.currency.decimals) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'DECIMALS') : 0 : void 0;\n    return _Fraction.prototype.divide.call(this, this.decimalScale).toFixed(decimalPlaces, format, rounding);\n  };\n  _proto.toExact = function toExact(format) {\n    if (format === void 0) {\n      format = {\n        groupSeparator: ''\n      };\n    }\n    Big$1.DP = this.currency.decimals;\n    return new Big$1(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format);\n  };\n  return _createClass(CurrencyAmount, [{\n    key: \"wrapped\",\n    get: function get() {\n      if (this.currency.isToken) return this;\n      return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator);\n    }\n  }]);\n}(Fraction);\n\nvar ONE_HUNDRED = /*#__PURE__*/new Fraction(/*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(100));\n/**\r\n * Converts a fraction to a percent\r\n * @param fraction the fraction to convert\r\n */\nfunction toPercent(fraction) {\n  return new Percent(fraction.numerator, fraction.denominator);\n}\nvar Percent = /*#__PURE__*/function (_Fraction) {\n  function Percent() {\n    var _this;\n    _this = _Fraction.apply(this, arguments) || this;\n    /**\r\n     * This boolean prevents a fraction from being interpreted as a Percent\r\n     */\n    _this.isPercent = true;\n    return _this;\n  }\n  _inheritsLoose(Percent, _Fraction);\n  var _proto = Percent.prototype;\n  _proto.add = function add(other) {\n    return toPercent(_Fraction.prototype.add.call(this, other));\n  };\n  _proto.subtract = function subtract(other) {\n    return toPercent(_Fraction.prototype.subtract.call(this, other));\n  };\n  _proto.multiply = function multiply(other) {\n    return toPercent(_Fraction.prototype.multiply.call(this, other));\n  };\n  _proto.divide = function divide(other) {\n    return toPercent(_Fraction.prototype.divide.call(this, other));\n  };\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 5;\n    }\n    return _Fraction.prototype.multiply.call(this, ONE_HUNDRED).toSignificant(significantDigits, format, rounding);\n  };\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = 2;\n    }\n    return _Fraction.prototype.multiply.call(this, ONE_HUNDRED).toFixed(decimalPlaces, format, rounding);\n  };\n  return Percent;\n}(Fraction);\n\nvar Price = /*#__PURE__*/function (_Fraction) {\n  /**\r\n   * Construct a price, either with the base and quote currency amount, or the\r\n   * @param args\r\n   */\n  function Price() {\n    var _this;\n    var baseCurrency, quoteCurrency, denominator, numerator;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (args.length === 4) {\n      baseCurrency = args[0];\n      quoteCurrency = args[1];\n      denominator = args[2];\n      numerator = args[3];\n    } else {\n      var result = args[0].quoteAmount.divide(args[0].baseAmount);\n      var _ref = [args[0].baseAmount.currency, args[0].quoteAmount.currency, result.denominator, result.numerator];\n      baseCurrency = _ref[0];\n      quoteCurrency = _ref[1];\n      denominator = _ref[2];\n      numerator = _ref[3];\n    }\n    _this = _Fraction.call(this, numerator, denominator) || this;\n    _this.baseCurrency = baseCurrency;\n    _this.quoteCurrency = quoteCurrency;\n    _this.scalar = new Fraction(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].exponentiate(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(10), jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(baseCurrency.decimals)), jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].exponentiate(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(10), jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(quoteCurrency.decimals)));\n    return _this;\n  }\n  /**\r\n   * Flip the price, switching the base and quote currency\r\n   */\n  _inheritsLoose(Price, _Fraction);\n  var _proto = Price.prototype;\n  _proto.invert = function invert() {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator);\n  }\n  /**\r\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\r\n   * @param other the other price\r\n   */;\n  _proto.multiply = function multiply(other) {\n    !this.quoteCurrency.equals(other.baseCurrency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'TOKEN') : 0 : void 0;\n    var fraction = _Fraction.prototype.multiply.call(this, other);\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator);\n  }\n  /**\r\n   * Return the amount of quote currency corresponding to a given amount of the base currency\r\n   * @param currencyAmount the amount of base currency to quote against the price\r\n   */;\n  _proto.quote = function quote(currencyAmount) {\n    !currencyAmount.currency.equals(this.baseCurrency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'TOKEN') : 0 : void 0;\n    var result = _Fraction.prototype.multiply.call(this, currencyAmount);\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator);\n  }\n  /**\r\n   * Get the value scaled by decimals for formatting\r\n   * @private\r\n   */;\n  _proto.toSignificant = function toSignificant(significantDigits, format, rounding) {\n    if (significantDigits === void 0) {\n      significantDigits = 6;\n    }\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding);\n  };\n  _proto.toFixed = function toFixed(decimalPlaces, format, rounding) {\n    if (decimalPlaces === void 0) {\n      decimalPlaces = 4;\n    }\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding);\n  };\n  return _createClass(Price, [{\n    key: \"adjustedForDecimals\",\n    get: function get() {\n      return _Fraction.prototype.multiply.call(this, this.scalar);\n    }\n  }]);\n}(Fraction);\n\n/**\r\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\r\n */\nvar BaseCurrency =\n/**\r\n * Constructs an instance of the base class `BaseCurrency`.\r\n * @param chainId the chain ID on which this currency resides\r\n * @param decimals decimals of the currency\r\n * @param symbol symbol of the currency\r\n * @param name of the currency\r\n */\nfunction BaseCurrency(chainId, decimals, symbol, name) {\n  !Number.isSafeInteger(chainId) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'CHAIN_ID') : 0 : void 0;\n  !(decimals >= 0 && decimals < 255 && Number.isInteger(decimals)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'DECIMALS') : 0 : void 0;\n  this.chainId = chainId;\n  this.decimals = decimals;\n  this.symbol = symbol;\n  this.name = name;\n};\n\n/**\r\n * Represents the native currency of the chain on which it resides, e.g.\r\n */\nvar NativeCurrency = /*#__PURE__*/function (_BaseCurrency) {\n  function NativeCurrency() {\n    var _this;\n    _this = _BaseCurrency.apply(this, arguments) || this;\n    _this.isNative = true;\n    _this.isToken = false;\n    return _this;\n  }\n  _inheritsLoose(NativeCurrency, _BaseCurrency);\n  return NativeCurrency;\n}(BaseCurrency);\n\n/**\r\n * Validates an address and returns the parsed (checksummed) version of that address\r\n * @param address the unchecksummed hex address\r\n */\nfunction validateAndParseAddress(address) {\n  try {\n    return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_5__.getAddress)(address);\n  } catch (error) {\n    throw new Error(address + \" is not a valid address.\");\n  }\n}\n// Checks a string starts with 0x, is 42 characters long and contains only hex characters after 0x\nvar startsWith0xLen42HexRegex = /^0x[0-9a-fA-F]{40}$/;\n/**\r\n * Checks if an address is valid by checking 0x prefix, length === 42 and hex encoding.\r\n * @param address the unchecksummed hex address\r\n */\nfunction checkValidAddress(address) {\n  if (startsWith0xLen42HexRegex.test(address)) {\n    return address;\n  }\n  throw new Error(address + \" is not a valid address.\");\n}\n\n/**\r\n * Represents an ERC20 token with a unique address and some metadata.\r\n */\nvar Token = /*#__PURE__*/function (_BaseCurrency) {\n  /**\r\n   *\r\n   * @param chainId {@link BaseCurrency#chainId}\r\n   * @param address The contract address on the chain on which this token lives\r\n   * @param decimals {@link BaseCurrency#decimals}\r\n   * @param symbol {@link BaseCurrency#symbol}\r\n   * @param name {@link BaseCurrency#name}\r\n   * @param bypassChecksum If true it only checks for length === 42, startsWith 0x and contains only hex characters\r\n   * @param buyFeeBps Buy fee tax for FOT tokens, in basis points\r\n   * @param sellFeeBps Sell fee tax for FOT tokens, in basis points\r\n   */\n  function Token(chainId, address, decimals, symbol, name, bypassChecksum, buyFeeBps, sellFeeBps) {\n    var _this;\n    _this = _BaseCurrency.call(this, chainId, decimals, symbol, name) || this;\n    _this.isNative = false;\n    _this.isToken = true;\n    if (bypassChecksum) {\n      _this.address = checkValidAddress(address);\n    } else {\n      _this.address = validateAndParseAddress(address);\n    }\n    if (buyFeeBps) {\n      !buyFeeBps.gte(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(0)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'NON-NEGATIVE FOT FEES') : 0 : void 0;\n    }\n    if (sellFeeBps) {\n      !sellFeeBps.gte(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(0)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'NON-NEGATIVE FOT FEES') : 0 : void 0;\n    }\n    _this.buyFeeBps = buyFeeBps;\n    _this.sellFeeBps = sellFeeBps;\n    return _this;\n  }\n  /**\r\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\r\n   * @param other other token to compare\r\n   */\n  _inheritsLoose(Token, _BaseCurrency);\n  var _proto = Token.prototype;\n  _proto.equals = function equals(other) {\n    return other.isToken && this.chainId === other.chainId && this.address.toLowerCase() === other.address.toLowerCase();\n  }\n  /**\r\n   * Returns true if the address of this token sorts before the address of the other token\r\n   * @param other other token to compare\r\n   * @throws if the tokens have the same address\r\n   * @throws if the tokens are on different chains\r\n   */;\n  _proto.sortsBefore = function sortsBefore(other) {\n    !(this.chainId === other.chainId) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'CHAIN_IDS') : 0 : void 0;\n    !(this.address.toLowerCase() !== other.address.toLowerCase()) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'ADDRESSES') : 0 : void 0;\n    return this.address.toLowerCase() < other.address.toLowerCase();\n  }\n  /**\r\n   * Return this token, which does not need to be wrapped\r\n   */;\n  return _createClass(Token, [{\n    key: \"wrapped\",\n    get: function get() {\n      return this;\n    }\n  }]);\n}(BaseCurrency);\n\n/**\r\n * Known WETH9 implementation addresses, used in our implementation of Ether#wrapped\r\n */\nvar WETH9 = {\n  1: /*#__PURE__*/new Token(1, '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18, 'WETH', 'Wrapped Ether'),\n  11155111: /*#__PURE__*/new Token(11155111, '0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14', 18, 'WETH', 'Wrapped Ether'),\n  3: /*#__PURE__*/new Token(3, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  4: /*#__PURE__*/new Token(4, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  5: /*#__PURE__*/new Token(5, '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6', 18, 'WETH', 'Wrapped Ether'),\n  42: /*#__PURE__*/new Token(42, '0xd0A1E359811322d97991E03f863a0C30C2cF029C', 18, 'WETH', 'Wrapped Ether'),\n  10: /*#__PURE__*/new Token(10, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  69: /*#__PURE__*/new Token(69, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  11155420: /*#__PURE__*/new Token(11155420, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  42161: /*#__PURE__*/new Token(42161, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),\n  421611: /*#__PURE__*/new Token(421611, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'),\n  421614: /*#__PURE__*/new Token(421614, '0x980B62Da83eFf3D4576C647993b0c1D7faf17c73', 18, 'WETH', 'Wrapped Ether'),\n  8453: /*#__PURE__*/new Token(8453, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  84532: /*#__PURE__*/new Token(84532, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  56: /*#__PURE__*/new Token(56, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'),\n  137: /*#__PURE__*/new Token(137, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC'),\n  43114: /*#__PURE__*/new Token(43114, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18, 'WAVAX', 'Wrapped AVAX'),\n  7777777: /*#__PURE__*/new Token(7777777, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  81457: /*#__PURE__*/new Token(81457, '0x4300000000000000000000000000000000000004', 18, 'WETH', 'Wrapped Ether'),\n  324: /*#__PURE__*/new Token(324, '0x5AEa5775959fBC2557Cc8789bC1bf90A239D9a91', 18, 'WETH', 'Wrapped Ether'),\n  480: /*#__PURE__*/new Token(480, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  1301: /*#__PURE__*/new Token(1301, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  130: /*#__PURE__*/new Token(130, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  10143: /*#__PURE__*/new Token(10143, '0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701', 18, 'WMON', 'Wrapped Monad'),\n  1868: /*#__PURE__*/new Token(1868, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether')\n};\n\n/**\r\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\r\n */\nvar Ether = /*#__PURE__*/function (_NativeCurrency) {\n  function Ether(chainId) {\n    return _NativeCurrency.call(this, chainId, 18, 'ETH', 'Ether') || this;\n  }\n  _inheritsLoose(Ether, _NativeCurrency);\n  Ether.onChain = function onChain(chainId) {\n    var _this$_etherCache$cha;\n    return (_this$_etherCache$cha = this._etherCache[chainId]) != null ? _this$_etherCache$cha : this._etherCache[chainId] = new Ether(chainId);\n  };\n  var _proto = Ether.prototype;\n  _proto.equals = function equals(other) {\n    return other.isNative && other.chainId === this.chainId;\n  };\n  return _createClass(Ether, [{\n    key: \"wrapped\",\n    get: function get() {\n      var weth9 = WETH9[this.chainId];\n      !!!weth9 ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'WRAPPED') : 0 : void 0;\n      return weth9;\n    }\n  }]);\n}(NativeCurrency);\nEther._etherCache = {};\n\n/**\r\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\r\n * @param midPrice mid price before the trade\r\n * @param inputAmount the input amount of the trade\r\n * @param outputAmount the output amount of the trade\r\n */\nfunction computePriceImpact(midPrice, inputAmount, outputAmount) {\n  var quotedOutputAmount = midPrice.quote(inputAmount);\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\n  var priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount);\n  return new Percent(priceImpact.numerator, priceImpact.denominator);\n}\n\nfunction computeZksyncCreate2Address(sender, bytecodeHash, salt, input) {\n  if (input === void 0) {\n    input = '0x';\n  }\n  var prefix = (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__.keccak256)((0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_8__.toUtf8Bytes)('zksyncCreate2'));\n  var inputHash = (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__.keccak256)(input);\n  var addressBytes = (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_7__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_9__.concat)([prefix, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_9__.hexZeroPad)(sender, 32), salt, bytecodeHash, inputHash])).slice(26);\n  return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_5__.getAddress)(addressBytes);\n}\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nfunction sortedInsert(items, add, maxSize, comparator) {\n  !(maxSize > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'MAX_SIZE_ZERO') : 0 : void 0;\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  !(items.length <= maxSize) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'ITEMS_SIZE') : 0 : void 0;\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add);\n    return null;\n  } else {\n    var isFull = items.length === maxSize;\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add;\n    }\n    var lo = 0,\n      hi = items.length;\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1;\n      } else {\n        hi = mid;\n      }\n    }\n    items.splice(lo, 0, add);\n    return isFull ? items.pop() : null;\n  }\n}\n\nvar MAX_SAFE_INTEGER = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(Number.MAX_SAFE_INTEGER);\nvar ZERO = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(0);\nvar ONE = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(1);\nvar TWO = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(2);\n/**\r\n * Computes floor(sqrt(value))\r\n * @param value the value for which to compute the square root, rounded down\r\n */\nfunction sqrt(value) {\n  !jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].greaterThanOrEqual(value, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'NEGATIVE') : 0 : void 0;\n  // rely on built in sqrt if possible\n  if (jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lessThan(value, MAX_SAFE_INTEGER)) {\n    return jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].BigInt(Math.floor(Math.sqrt(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toNumber(value))));\n  }\n  var z;\n  var x;\n  z = value;\n  x = jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].divide(value, TWO), ONE);\n  while (jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lessThan(x, z)) {\n    z = x;\n    x = jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].divide(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(jsbi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].divide(value, x), x), TWO);\n  }\n  return z;\n}\n\n\n//# sourceMappingURL=sdk-core.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHVuaXN3YXAvc2RrLWNvcmUvZGlzdC9zZGstY29yZS5lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd0I7QUFDZTtBQUNDO0FBQ2Q7QUFDTTtBQUNxQjtBQUNEO0FBQ007QUFDTDtBQUNBOztBQUVyRDtBQUNBLGtCQUFrQixjQUFjO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixzQkFBc0I7QUFDMUM7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEJBQTBCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0RBQWdEOztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLElBQUk7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRDtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsK0NBQStDO0FBQy9DO0FBQ0EsQ0FBQztBQUNELGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdEO0FBQ3hEO0FBQ0Esd0RBQXdEO0FBQ3hEO0FBQ0E7QUFDQSxDQUFDLElBQUk7QUFDTCxvREFBb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsSUFBSTtBQUNMLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0EsQ0FBQyxJQUFJO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0Q7QUFDL0Q7QUFDQTtBQUNBO0FBQ0EsNERBQTREO0FBQzVEO0FBQ0EsNERBQTREO0FBQzVELGdFQUFnRTtBQUNoRSwrQ0FBK0M7QUFDL0M7QUFDQTtBQUNBLENBQUMsSUFBSTtBQUNMLHFFQUFxRTtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxJQUFJO0FBQ0wsc0RBQXNEO0FBQ3RELDREQUE0RDtBQUM1RCxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsSUFBSTtBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsSUFBSTtBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0QkFBNEI7QUFDN0IsOEJBQThCLDRDQUFJOztBQUVsQztBQUNBLDJCQUEyQiwrQ0FBUSxDQUFDLHdEQUFRO0FBQzVDLHVCQUF1QiwrQ0FBUSxDQUFDLDhDQUFJO0FBQ3BDLHVEQUF1RDtBQUN2RCw0Q0FBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDRDQUFJO0FBQ3hCO0FBQ0EscUJBQXFCLDRDQUFJO0FBQ3pCLHVCQUF1Qiw0Q0FBSTtBQUMzQjtBQUNBO0FBQ0EsK0JBQStCLDRDQUFJO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDRDQUFJO0FBQ1osMEJBQTBCLDRDQUFJO0FBQzlCO0FBQ0Esd0JBQXdCLDRDQUFJLEtBQUssNENBQUksb0RBQW9ELDRDQUFJLHFEQUFxRCw0Q0FBSTtBQUN0SjtBQUNBO0FBQ0E7QUFDQSxRQUFRLDRDQUFJO0FBQ1osMEJBQTBCLDRDQUFJO0FBQzlCO0FBQ0Esd0JBQXdCLDRDQUFJLFVBQVUsNENBQUksb0RBQW9ELDRDQUFJLHFEQUFxRCw0Q0FBSTtBQUMzSjtBQUNBO0FBQ0E7QUFDQSxXQUFXLDRDQUFJLFVBQVUsNENBQUksb0RBQW9ELDRDQUFJO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNENBQUksT0FBTyw0Q0FBSSxvREFBb0QsNENBQUk7QUFDbEY7QUFDQTtBQUNBO0FBQ0EsV0FBVyw0Q0FBSSxhQUFhLDRDQUFJLG9EQUFvRCw0Q0FBSTtBQUN4RjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNENBQUksa0RBQWtELDRDQUFJO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw0Q0FBSSxvREFBb0QsNENBQUk7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsS0FBcUMsR0FBRywwREFBUyxxREFBcUQsQ0FBZ0I7QUFDakssK0JBQStCLEtBQXFDLEdBQUcsMERBQVMsbURBQW1ELENBQWdCO0FBQ25KO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsS0FBcUMsR0FBRywwREFBUyxpREFBaUQsQ0FBZ0I7QUFDekosNEJBQTRCLEtBQXFDLEdBQUcsMERBQVMsMkNBQTJDLENBQWdCO0FBQ3hJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw0Q0FBSTtBQUNqQjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSwwQkFBMEIsNENBQUk7QUFDOUI7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQzs7QUFFRCx5QkFBeUIsK0NBQVEsQ0FBQyw4Q0FBSTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssNENBQUksK0NBQStDLEtBQXFDLEdBQUcsMERBQVMsb0JBQW9CLENBQWdCO0FBQzdJO0FBQ0EseUJBQXlCLDRDQUFJLGNBQWMsNENBQUksYUFBYSw0Q0FBSTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxLQUFxQyxHQUFHLDBEQUFTLHNCQUFzQixDQUFnQjtBQUNuSTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxLQUFxQyxHQUFHLDBEQUFTLHNCQUFzQixDQUFnQjtBQUNuSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsS0FBcUMsR0FBRywwREFBUyxzQkFBc0IsQ0FBZ0I7QUFDeEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDOztBQUVELHlEQUF5RCw0Q0FBSTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLGFBQWE7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsNENBQUksY0FBYyw0Q0FBSSxhQUFhLDRDQUFJLGlDQUFpQyw0Q0FBSSxjQUFjLDRDQUFJLGFBQWEsNENBQUk7QUFDL0k7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELEtBQXFDLEdBQUcsMERBQVMsbUJBQW1CLENBQWdCO0FBQ3pJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsS0FBcUMsR0FBRywwREFBUyxtQkFBbUIsQ0FBZ0I7QUFDN0k7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLEtBQXFDLEdBQUcsMERBQVMsc0JBQXNCLENBQWdCO0FBQzFILHFFQUFxRSxLQUFxQyxHQUFHLDBEQUFTLHNCQUFzQixDQUFnQjtBQUM1SjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGtFQUFVO0FBQ3JCLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxHQUFHO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLHNCQUFzQjtBQUN0QixvQkFBb0I7QUFDcEIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EscUJBQXFCLCtEQUFTLFlBQVksS0FBcUMsR0FBRywwREFBUyxtQ0FBbUMsQ0FBZ0I7QUFDOUk7QUFDQTtBQUNBLHNCQUFzQiwrREFBUyxZQUFZLEtBQXFDLEdBQUcsMERBQVMsbUNBQW1DLENBQWdCO0FBQy9JO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxLQUFxQyxHQUFHLDBEQUFTLHVCQUF1QixDQUFnQjtBQUNoSSxvRUFBb0UsS0FBcUMsR0FBRywwREFBUyx1QkFBdUIsQ0FBZ0I7QUFDNUo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixLQUFxQyxHQUFHLDBEQUFTLHFCQUFxQixDQUFnQjtBQUN2RztBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1FQUFTLENBQUMsbUVBQVc7QUFDcEMsa0JBQWtCLG1FQUFTO0FBQzNCLHFCQUFxQixtRUFBUyxDQUFDLDREQUFNLFVBQVUsZ0VBQVU7QUFDekQsU0FBUyxrRUFBVTtBQUNuQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsS0FBcUMsR0FBRywwREFBUywyQkFBMkIsQ0FBZ0I7QUFDL0c7QUFDQSwrQkFBK0IsS0FBcUMsR0FBRywwREFBUyx3QkFBd0IsQ0FBZ0I7QUFDeEg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQ0FBb0MsNENBQUk7QUFDeEMsd0JBQXdCLDRDQUFJO0FBQzVCLHVCQUF1Qiw0Q0FBSTtBQUMzQix1QkFBdUIsNENBQUk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsNENBQUksbUNBQW1DLEtBQXFDLEdBQUcsMERBQVMsc0JBQXNCLENBQWdCO0FBQ2pJO0FBQ0EsTUFBTSw0Q0FBSTtBQUNWLFdBQVcsNENBQUksNkJBQTZCLDRDQUFJO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSw0Q0FBSSxLQUFLLDRDQUFJO0FBQ25CLFNBQVMsNENBQUk7QUFDYjtBQUNBLFFBQVEsNENBQUksUUFBUSw0Q0FBSSxLQUFLLDRDQUFJO0FBQ2pDO0FBQ0E7QUFDQTs7QUFFbTFCO0FBQ24xQiIsInNvdXJjZXMiOlsiL1VzZXJzL2FucWxlL3dlYjNyZXZpZXdlci9kZW1vcy9iYXNlLWFwcC1jb2lucy9ub2RlX21vZHVsZXMvQHVuaXN3YXAvc2RrLWNvcmUvZGlzdC9zZGstY29yZS5lc20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEpTQkkgZnJvbSAnanNiaSc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcbmltcG9ydCBfRGVjaW1hbCBmcm9tICdkZWNpbWFsLmpzLWxpZ2h0JztcbmltcG9ydCBfQmlnIGZyb20gJ2JpZy5qcyc7XG5pbXBvcnQgdG9Gb3JtYXQgZnJvbSAndG9mb3JtYXQnO1xuaW1wb3J0IHsgQmlnTnVtYmVyIH0gZnJvbSAnQGV0aGVyc3Byb2plY3QvYmlnbnVtYmVyJztcbmltcG9ydCB7IGdldEFkZHJlc3MgfSBmcm9tICdAZXRoZXJzcHJvamVjdC9hZGRyZXNzJztcbmltcG9ydCB7IGNvbmNhdCwgaGV4WmVyb1BhZCB9IGZyb20gJ0BldGhlcnNwcm9qZWN0L2J5dGVzJztcbmltcG9ydCB7IGtlY2NhazI1NiB9IGZyb20gJ0BldGhlcnNwcm9qZWN0L2tlY2NhazI1Nic7XG5pbXBvcnQgeyB0b1V0ZjhCeXRlcyB9IGZyb20gJ0BldGhlcnNwcm9qZWN0L3N0cmluZ3MnO1xuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyhlLCByKSB7XG4gIGZvciAodmFyIHQgPSAwOyB0IDwgci5sZW5ndGg7IHQrKykge1xuICAgIHZhciBvID0gclt0XTtcbiAgICBvLmVudW1lcmFibGUgPSBvLmVudW1lcmFibGUgfHwgITEsIG8uY29uZmlndXJhYmxlID0gITAsIFwidmFsdWVcIiBpbiBvICYmIChvLndyaXRhYmxlID0gITApLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgX3RvUHJvcGVydHlLZXkoby5rZXkpLCBvKTtcbiAgfVxufVxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKGUsIHIsIHQpIHtcbiAgcmV0dXJuIHIgJiYgX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsIHIpLCB0ICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHQpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJwcm90b3R5cGVcIiwge1xuICAgIHdyaXRhYmxlOiAhMVxuICB9KSwgZTtcbn1cbmZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICByZXR1cm4gX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduID8gT2JqZWN0LmFzc2lnbi5iaW5kKCkgOiBmdW5jdGlvbiAobikge1xuICAgIGZvciAodmFyIGUgPSAxOyBlIDwgYXJndW1lbnRzLmxlbmd0aDsgZSsrKSB7XG4gICAgICB2YXIgdCA9IGFyZ3VtZW50c1tlXTtcbiAgICAgIGZvciAodmFyIHIgaW4gdCkgKHt9KS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsIHIpICYmIChuW3JdID0gdFtyXSk7XG4gICAgfVxuICAgIHJldHVybiBuO1xuICB9LCBfZXh0ZW5kcy5hcHBseShudWxsLCBhcmd1bWVudHMpO1xufVxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2UodCwgbykge1xuICB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoby5wcm90b3R5cGUpLCB0LnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHQsIF9zZXRQcm90b3R5cGVPZih0LCBvKTtcbn1cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZih0LCBlKSB7XG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gKHQsIGUpIHtcbiAgICByZXR1cm4gdC5fX3Byb3RvX18gPSBlLCB0O1xuICB9LCBfc2V0UHJvdG90eXBlT2YodCwgZSk7XG59XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikge1xuICBpZiAoXCJvYmplY3RcIiAhPSB0eXBlb2YgdCB8fCAhdCkgcmV0dXJuIHQ7XG4gIHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdO1xuICBpZiAodm9pZCAwICE9PSBlKSB7XG4gICAgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7XG4gICAgaWYgKFwib2JqZWN0XCIgIT0gdHlwZW9mIGkpIHJldHVybiBpO1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTtcbiAgfVxuICByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpO1xufVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkge1xuICB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTtcbiAgcmV0dXJuIFwic3ltYm9sXCIgPT0gdHlwZW9mIGkgPyBpIDogaSArIFwiXCI7XG59XG5cbnZhciBDaGFpbklkO1xuKGZ1bmN0aW9uIChDaGFpbklkKSB7XG4gIENoYWluSWRbQ2hhaW5JZFtcIk1BSU5ORVRcIl0gPSAxXSA9IFwiTUFJTk5FVFwiO1xuICBDaGFpbklkW0NoYWluSWRbXCJHT0VSTElcIl0gPSA1XSA9IFwiR09FUkxJXCI7XG4gIENoYWluSWRbQ2hhaW5JZFtcIlNFUE9MSUFcIl0gPSAxMTE1NTExMV0gPSBcIlNFUE9MSUFcIjtcbiAgQ2hhaW5JZFtDaGFpbklkW1wiT1BUSU1JU01cIl0gPSAxMF0gPSBcIk9QVElNSVNNXCI7XG4gIENoYWluSWRbQ2hhaW5JZFtcIk9QVElNSVNNX0dPRVJMSVwiXSA9IDQyMF0gPSBcIk9QVElNSVNNX0dPRVJMSVwiO1xuICBDaGFpbklkW0NoYWluSWRbXCJPUFRJTUlTTV9TRVBPTElBXCJdID0gMTExNTU0MjBdID0gXCJPUFRJTUlTTV9TRVBPTElBXCI7XG4gIENoYWluSWRbQ2hhaW5JZFtcIkFSQklUUlVNX09ORVwiXSA9IDQyMTYxXSA9IFwiQVJCSVRSVU1fT05FXCI7XG4gIENoYWluSWRbQ2hhaW5JZFtcIkFSQklUUlVNX0dPRVJMSVwiXSA9IDQyMTYxM10gPSBcIkFSQklUUlVNX0dPRVJMSVwiO1xuICBDaGFpbklkW0NoYWluSWRbXCJBUkJJVFJVTV9TRVBPTElBXCJdID0gNDIxNjE0XSA9IFwiQVJCSVRSVU1fU0VQT0xJQVwiO1xuICBDaGFpbklkW0NoYWluSWRbXCJQT0xZR09OXCJdID0gMTM3XSA9IFwiUE9MWUdPTlwiO1xuICBDaGFpbklkW0NoYWluSWRbXCJQT0xZR09OX01VTUJBSVwiXSA9IDgwMDAxXSA9IFwiUE9MWUdPTl9NVU1CQUlcIjtcbiAgQ2hhaW5JZFtDaGFpbklkW1wiQ0VMT1wiXSA9IDQyMjIwXSA9IFwiQ0VMT1wiO1xuICBDaGFpbklkW0NoYWluSWRbXCJDRUxPX0FMRkFKT1JFU1wiXSA9IDQ0Nzg3XSA9IFwiQ0VMT19BTEZBSk9SRVNcIjtcbiAgQ2hhaW5JZFtDaGFpbklkW1wiR05PU0lTXCJdID0gMTAwXSA9IFwiR05PU0lTXCI7XG4gIENoYWluSWRbQ2hhaW5JZFtcIk1PT05CRUFNXCJdID0gMTI4NF0gPSBcIk1PT05CRUFNXCI7XG4gIENoYWluSWRbQ2hhaW5JZFtcIkJOQlwiXSA9IDU2XSA9IFwiQk5CXCI7XG4gIENoYWluSWRbQ2hhaW5JZFtcIkFWQUxBTkNIRVwiXSA9IDQzMTE0XSA9IFwiQVZBTEFOQ0hFXCI7XG4gIENoYWluSWRbQ2hhaW5JZFtcIkJBU0VfR09FUkxJXCJdID0gODQ1MzFdID0gXCJCQVNFX0dPRVJMSVwiO1xuICBDaGFpbklkW0NoYWluSWRbXCJCQVNFX1NFUE9MSUFcIl0gPSA4NDUzMl0gPSBcIkJBU0VfU0VQT0xJQVwiO1xuICBDaGFpbklkW0NoYWluSWRbXCJCQVNFXCJdID0gODQ1M10gPSBcIkJBU0VcIjtcbiAgQ2hhaW5JZFtDaGFpbklkW1wiWk9SQVwiXSA9IDc3Nzc3NzddID0gXCJaT1JBXCI7XG4gIENoYWluSWRbQ2hhaW5JZFtcIlpPUkFfU0VQT0xJQVwiXSA9IDk5OTk5OTk5OV0gPSBcIlpPUkFfU0VQT0xJQVwiO1xuICBDaGFpbklkW0NoYWluSWRbXCJST09UU1RPQ0tcIl0gPSAzMF0gPSBcIlJPT1RTVE9DS1wiO1xuICBDaGFpbklkW0NoYWluSWRbXCJCTEFTVFwiXSA9IDgxNDU3XSA9IFwiQkxBU1RcIjtcbiAgQ2hhaW5JZFtDaGFpbklkW1wiWktTWU5DXCJdID0gMzI0XSA9IFwiWktTWU5DXCI7XG4gIENoYWluSWRbQ2hhaW5JZFtcIldPUkxEQ0hBSU5cIl0gPSA0ODBdID0gXCJXT1JMRENIQUlOXCI7XG4gIENoYWluSWRbQ2hhaW5JZFtcIlVOSUNIQUlOX1NFUE9MSUFcIl0gPSAxMzAxXSA9IFwiVU5JQ0hBSU5fU0VQT0xJQVwiO1xuICBDaGFpbklkW0NoYWluSWRbXCJVTklDSEFJTlwiXSA9IDEzMF0gPSBcIlVOSUNIQUlOXCI7XG4gIENoYWluSWRbQ2hhaW5JZFtcIk1PTkFEX1RFU1RORVRcIl0gPSAxMDE0M10gPSBcIk1PTkFEX1RFU1RORVRcIjtcbiAgQ2hhaW5JZFtDaGFpbklkW1wiU09ORUlVTVwiXSA9IDE4NjhdID0gXCJTT05FSVVNXCI7XG59KShDaGFpbklkIHx8IChDaGFpbklkID0ge30pKTtcbnZhciBTVVBQT1JURURfQ0hBSU5TID0gW0NoYWluSWQuTUFJTk5FVCwgQ2hhaW5JZC5PUFRJTUlTTSwgQ2hhaW5JZC5PUFRJTUlTTV9HT0VSTEksIENoYWluSWQuT1BUSU1JU01fU0VQT0xJQSwgQ2hhaW5JZC5BUkJJVFJVTV9PTkUsIENoYWluSWQuQVJCSVRSVU1fR09FUkxJLCBDaGFpbklkLkFSQklUUlVNX1NFUE9MSUEsIENoYWluSWQuUE9MWUdPTiwgQ2hhaW5JZC5QT0xZR09OX01VTUJBSSwgQ2hhaW5JZC5HT0VSTEksIENoYWluSWQuU0VQT0xJQSwgQ2hhaW5JZC5DRUxPX0FMRkFKT1JFUywgQ2hhaW5JZC5DRUxPLCBDaGFpbklkLkJOQiwgQ2hhaW5JZC5BVkFMQU5DSEUsIENoYWluSWQuQkFTRSwgQ2hhaW5JZC5CQVNFX0dPRVJMSSwgQ2hhaW5JZC5CQVNFX1NFUE9MSUEsIENoYWluSWQuWk9SQSwgQ2hhaW5JZC5aT1JBX1NFUE9MSUEsIENoYWluSWQuUk9PVFNUT0NLLCBDaGFpbklkLkJMQVNULCBDaGFpbklkLlpLU1lOQywgQ2hhaW5JZC5XT1JMRENIQUlOLCBDaGFpbklkLlVOSUNIQUlOX1NFUE9MSUEsIENoYWluSWQuVU5JQ0hBSU4sIENoYWluSWQuTU9OQURfVEVTVE5FVCwgQ2hhaW5JZC5TT05FSVVNXTtcbnZhciBOYXRpdmVDdXJyZW5jeU5hbWU7XG4oZnVuY3Rpb24gKE5hdGl2ZUN1cnJlbmN5TmFtZSkge1xuICAvLyBTdHJpbmdzIG1hdGNoIGlucHV0IGZvciBDTElcbiAgTmF0aXZlQ3VycmVuY3lOYW1lW1wiRVRIRVJcIl0gPSBcIkVUSFwiO1xuICBOYXRpdmVDdXJyZW5jeU5hbWVbXCJNQVRJQ1wiXSA9IFwiTUFUSUNcIjtcbiAgTmF0aXZlQ3VycmVuY3lOYW1lW1wiQ0VMT1wiXSA9IFwiQ0VMT1wiO1xuICBOYXRpdmVDdXJyZW5jeU5hbWVbXCJHTk9TSVNcIl0gPSBcIlhEQUlcIjtcbiAgTmF0aXZlQ3VycmVuY3lOYW1lW1wiTU9PTkJFQU1cIl0gPSBcIkdMTVJcIjtcbiAgTmF0aXZlQ3VycmVuY3lOYW1lW1wiQk5CXCJdID0gXCJCTkJcIjtcbiAgTmF0aXZlQ3VycmVuY3lOYW1lW1wiQVZBWFwiXSA9IFwiQVZBWFwiO1xuICBOYXRpdmVDdXJyZW5jeU5hbWVbXCJST09UU1RPQ0tcIl0gPSBcIlJCVENcIjtcbn0pKE5hdGl2ZUN1cnJlbmN5TmFtZSB8fCAoTmF0aXZlQ3VycmVuY3lOYW1lID0ge30pKTtcblxudmFyIF9WMl9GQUNUT1JZX0FERFJFU1NFUywgX1YyX1JPVVRFUl9BRERSRVNTRVMsIF9DSEFJTl9UT19BRERSRVNTRVNfTSwgX0dPVkVSTkFOQ0VfQUxQSEFfVjFfLCBfR09WRVJOQU5DRV9CUkFWT19BREQsIF9NRVJLTEVfRElTVFJJQlVUT1JfQSwgX0FSR0VOVF9XQUxMRVRfREVURUNULCBfU09DS1NfQ09OVFJPTExFUl9BREQ7XG52YXIgREVGQVVMVF9ORVRXT1JLUyA9IFtDaGFpbklkLk1BSU5ORVQsIENoYWluSWQuR09FUkxJLCBDaGFpbklkLlNFUE9MSUFdO1xuZnVuY3Rpb24gY29uc3RydWN0U2FtZUFkZHJlc3NNYXAoYWRkcmVzcywgYWRkaXRpb25hbE5ldHdvcmtzKSB7XG4gIGlmIChhZGRpdGlvbmFsTmV0d29ya3MgPT09IHZvaWQgMCkge1xuICAgIGFkZGl0aW9uYWxOZXR3b3JrcyA9IFtdO1xuICB9XG4gIHJldHVybiBERUZBVUxUX05FVFdPUktTLmNvbmNhdChhZGRpdGlvbmFsTmV0d29ya3MpLnJlZHVjZShmdW5jdGlvbiAobWVtbywgY2hhaW5JZCkge1xuICAgIG1lbW9bY2hhaW5JZF0gPSBhZGRyZXNzO1xuICAgIHJldHVybiBtZW1vO1xuICB9LCB7fSk7XG59XG52YXIgVU5JX0FERFJFU1NFUyA9IC8qI19fUFVSRV9fKi9jb25zdHJ1Y3RTYW1lQWRkcmVzc01hcCgnMHgxZjk4NDBhODVkNWFGNWJmMUQxNzYyRjkyNUJEQURkQzQyMDFGOTg0JywgW0NoYWluSWQuT1BUSU1JU00sIENoYWluSWQuQVJCSVRSVU1fT05FLCBDaGFpbklkLlBPTFlHT04sIENoYWluSWQuUE9MWUdPTl9NVU1CQUksIENoYWluSWQuU0VQT0xJQV0pO1xudmFyIFVOSVNXQVBfTkZUX0FJUkRST1BfQ0xBSU1fQUREUkVTUyA9ICcweDhCNzk5MzgxYWM0MGI4MzhCQkE0MTMxZmZCMjYxOTdDNDMyQUZlNzgnO1xuLyoqXHJcbiAqIEBkZXByZWNhdGVkIHVzZSBWMl9GQUNUT1JZX0FERFJFU1NFUyBpbnN0ZWFkXHJcbiAqL1xudmFyIFYyX0ZBQ1RPUllfQUREUkVTUyA9ICcweDVDNjliRWU3MDFlZjgxNGEyQjZhM0VERDRCMTY1MkNCOWNjNWFBNmYnO1xudmFyIFYyX0ZBQ1RPUllfQUREUkVTU0VTID0gKF9WMl9GQUNUT1JZX0FERFJFU1NFUyA9IHt9LCBfVjJfRkFDVE9SWV9BRERSRVNTRVNbQ2hhaW5JZC5NQUlOTkVUXSA9ICcweDVDNjliRWU3MDFlZjgxNGEyQjZhM0VERDRCMTY1MkNCOWNjNWFBNmYnLCBfVjJfRkFDVE9SWV9BRERSRVNTRVNbQ2hhaW5JZC5HT0VSTEldID0gJzB4NUM2OWJFZTcwMWVmODE0YTJCNmEzRURENEIxNjUyQ0I5Y2M1YUE2ZicsIF9WMl9GQUNUT1JZX0FERFJFU1NFU1tDaGFpbklkLlNFUE9MSUFdID0gJzB4RjYyYzAzRTA4YWRhODcxQTBiRWIzMDk3NjJFMjYwYTdhNmE4ODBFNicsIF9WMl9GQUNUT1JZX0FERFJFU1NFU1tDaGFpbklkLk9QVElNSVNNXSA9ICcweDBjM2MxYzUzMkYxZTM5RWRGMzZCRTlGZTBiRTE0MTAzMTNFMDc0QmYnLCBfVjJfRkFDVE9SWV9BRERSRVNTRVNbQ2hhaW5JZC5BUkJJVFJVTV9PTkVdID0gJzB4ZjFEN0NDNjRGYjQ0NTJGMDVjNDk4MTI2MzEyZUJFMjlmMzBGYmNmOScsIF9WMl9GQUNUT1JZX0FERFJFU1NFU1tDaGFpbklkLkFWQUxBTkNIRV0gPSAnMHg5ZTVBNTJmNTdiMzAzOEYxQjhFZUU0NUYyOGIzQzE5NjdlMjI3OTlDJywgX1YyX0ZBQ1RPUllfQUREUkVTU0VTW0NoYWluSWQuQkFTRV9TRVBPTElBXSA9ICcweDdBZTU4ZjEwZjc4NDljQTZGNWZCNzFiN2Y0NUNCNDE2YzkyMDRiMWUnLCBfVjJfRkFDVE9SWV9BRERSRVNTRVNbQ2hhaW5JZC5CQVNFXSA9ICcweDg5MDlkYzE1ZTQwMTczZmY0Njk5MzQzYjZlYjgxMzJjNjVlMThlYzYnLCBfVjJfRkFDVE9SWV9BRERSRVNTRVNbQ2hhaW5JZC5CTkJdID0gJzB4ODkwOURjMTVlNDAxNzNGZjQ2OTkzNDNiNmVCODEzMmM2NWUxOGVDNicsIF9WMl9GQUNUT1JZX0FERFJFU1NFU1tDaGFpbklkLlBPTFlHT05dID0gJzB4OWU1QTUyZjU3YjMwMzhGMUI4RWVFNDVGMjhiM0MxOTY3ZTIyNzk5QycsIF9WMl9GQUNUT1JZX0FERFJFU1NFU1tDaGFpbklkLkNFTE9dID0gJzB4NzlhNTMwYzhlMmZBODc0OEI3QjQwZGQzNjI5QzA1MjBjMmNDZjAzZicsIF9WMl9GQUNUT1JZX0FERFJFU1NFU1tDaGFpbklkLkJMQVNUXSA9ICcweDVDMzQ2NDY0ZDMzRjkwYkFCYWY3MGRCNjM4ODUwN0NDODg5QzEwNzAnLCBfVjJfRkFDVE9SWV9BRERSRVNTRVNbQ2hhaW5JZC5XT1JMRENIQUlOXSA9ICcweDVDNjliRWU3MDFlZjgxNGEyQjZhM0VERDRCMTY1MkNCOWNjNWFBNmYnLCBfVjJfRkFDVE9SWV9BRERSRVNTRVNbQ2hhaW5JZC5VTklDSEFJTl9TRVBPTElBXSA9ICcweDVDNjliRWU3MDFlZjgxNGEyQjZhM0VERDRCMTY1MkNCOWNjNWFBNmYnLCBfVjJfRkFDVE9SWV9BRERSRVNTRVNbQ2hhaW5JZC5VTklDSEFJTl0gPSAnMHgxZjk4NDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAyJywgX1YyX0ZBQ1RPUllfQUREUkVTU0VTW0NoYWluSWQuTU9OQURfVEVTVE5FVF0gPSAnMHg3MzNlODhmMjQ4Yjc0MmRiNmMxNGMwYjE3MTNhZjVhZDdmZGQ1OWQwJywgX1YyX0ZBQ1RPUllfQUREUkVTU0VTW0NoYWluSWQuU09ORUlVTV0gPSAnMHg5N2ZlYmJjMmFkYmQ1NjQ0YmEyMjczNmU5NjI1NjRiMjNmNTgyOGNlJywgX1YyX0ZBQ1RPUllfQUREUkVTU0VTKTtcbi8qKlxyXG4gKiBAZGVwcmVjYXRlZCB1c2UgVjJfUk9VVEVSX0FERFJFU1NFUyBpbnN0ZWFkXHJcbiAqL1xudmFyIFYyX1JPVVRFUl9BRERSRVNTID0gJzB4N2EyNTBkNTYzMEI0Y0Y1Mzk3MzlkRjJDNWRBY2I0YzY1OUYyNDg4RCc7XG52YXIgVjJfUk9VVEVSX0FERFJFU1NFUyA9IChfVjJfUk9VVEVSX0FERFJFU1NFUyA9IHt9LCBfVjJfUk9VVEVSX0FERFJFU1NFU1tDaGFpbklkLk1BSU5ORVRdID0gJzB4N2EyNTBkNTYzMEI0Y0Y1Mzk3MzlkRjJDNWRBY2I0YzY1OUYyNDg4RCcsIF9WMl9ST1VURVJfQUREUkVTU0VTW0NoYWluSWQuR09FUkxJXSA9ICcweDdhMjUwZDU2MzBCNGNGNTM5NzM5ZEYyQzVkQWNiNGM2NTlGMjQ4OEQnLCBfVjJfUk9VVEVSX0FERFJFU1NFU1tDaGFpbklkLlNFUE9MSUFdID0gJzB4ZUU1NjdGZTE3MTJGYWY2MTQ5ZDgwZEExRTY5MzRFMzU0MTI0Q2ZFMycsIF9WMl9ST1VURVJfQUREUkVTU0VTW0NoYWluSWQuQVJCSVRSVU1fT05FXSA9ICcweDQ3NTJiYTVkYmMyM2Y0NGQ4NzgyNjI3NmJmNmZkNmIxYzM3MmFkMjQnLCBfVjJfUk9VVEVSX0FERFJFU1NFU1tDaGFpbklkLk9QVElNSVNNXSA9ICcweDRhN2I1ZGE2MTMyNmE2Mzc5MTc5YjQwZDAwZjU3ZTViYmRjOTYyYzInLCBfVjJfUk9VVEVSX0FERFJFU1NFU1tDaGFpbklkLkJBU0VfU0VQT0xJQV0gPSAnMHgxNjg5RTdCMUYxMDAwMEFFNDdlQmZFMzM5YTRmNjlkRUNkMTlGNjAyJywgX1YyX1JPVVRFUl9BRERSRVNTRVNbQ2hhaW5JZC5CQVNFXSA9ICcweDQ3NTJiYTVkYmMyM2Y0NGQ4NzgyNjI3NmJmNmZkNmIxYzM3MmFkMjQnLCBfVjJfUk9VVEVSX0FERFJFU1NFU1tDaGFpbklkLkFWQUxBTkNIRV0gPSAnMHg0NzUyYmE1ZGJjMjNmNDRkODc4MjYyNzZiZjZmZDZiMWMzNzJhZDI0JywgX1YyX1JPVVRFUl9BRERSRVNTRVNbQ2hhaW5JZC5CTkJdID0gJzB4NDc1MmJhNWRiYzIzZjQ0ZDg3ODI2Mjc2YmY2ZmQ2YjFjMzcyYWQyNCcsIF9WMl9ST1VURVJfQUREUkVTU0VTW0NoYWluSWQuUE9MWUdPTl0gPSAnMHhlZGY2MDY2YTJiMjkwYzE4NTc4Mzg2MmM3ZjQ3NzZhMmM4MDc3YWQxJywgX1YyX1JPVVRFUl9BRERSRVNTRVNbQ2hhaW5JZC5CTEFTVF0gPSAnMHhCQjY2RWIxYzVlODc1OTMzRDQ0REFlNjYxZGJEODBlNUQ5QjAzMDM1JywgX1YyX1JPVVRFUl9BRERSRVNTRVNbQ2hhaW5JZC5XT1JMRENIQUlOXSA9ICcweDU0MWFCN2MzMUExMTk0NDFlRjM1NzVGNjk3MzI3N0RFMGVGNDYwYmQnLCBfVjJfUk9VVEVSX0FERFJFU1NFU1tDaGFpbklkLlVOSUNIQUlOX1NFUE9MSUFdID0gJzB4OTIwYjgwNkU0MEEwMEUwMkU3RDJiOTRmRmM4OTg2MGZEYUVkMzY0MCcsIF9WMl9ST1VURVJfQUREUkVTU0VTW0NoYWluSWQuVU5JQ0hBSU5dID0gJzB4Mjg0ZjExMTA5MzU5YTdlMTMwNmMzZTQ0N2VmMTRkMzg0MDAwNjNmZicsIF9WMl9ST1VURVJfQUREUkVTU0VTW0NoYWluSWQuTU9OQURfVEVTVE5FVF0gPSAnMHhmYjhlMWMzYjgzM2Y5ZTY3YTcxYzg1OWExMzJjZjc4M2I2NDVlNDM2JywgX1YyX1JPVVRFUl9BRERSRVNTRVNbQ2hhaW5JZC5TT05FSVVNXSA9ICcweDI3M2Y2OGMyMzRmYTU1YjU1MGI0MGU1NjNjNGE0ODhlMGQzMzQzMjAnLCBfVjJfUk9VVEVSX0FERFJFU1NFUyk7XG4vLyBOZXR3b3JrcyB0aGF0IHNoYXJlIG1vc3Qgb2YgdGhlIHNhbWUgYWRkcmVzc2VzIGkuZS4gTWFpbm5ldCwgR29lcmxpLCBPcHRpbWlzbSwgQXJiaXRydW0sIFBvbHlnb25cbnZhciBERUZBVUxUX0FERFJFU1NFUyA9IHtcbiAgdjNDb3JlRmFjdG9yeUFkZHJlc3M6ICcweDFGOTg0MzFjOGFEOTg1MjM2MzFBRTRhNTlmMjY3MzQ2ZWEzMUY5ODQnLFxuICBtdWx0aWNhbGxBZGRyZXNzOiAnMHgxRjk4NDE1NzU3NjIwQjU0M0E1MkU2MWM0NkIzMmVCMTkyNjFGOTg0JyxcbiAgcXVvdGVyQWRkcmVzczogJzB4YjI3MzA4ZjlGOTBENjA3NDYzYmIzM2VBMUJlQmI0MUMyN0NFNUFCNicsXG4gIHYzTWlncmF0b3JBZGRyZXNzOiAnMHhBNTY0NEUyOTcwODM1NzgwM2I1QTg4MkQyNzJjNDFjQzBkRjkyQjM0JyxcbiAgbm9uZnVuZ2libGVQb3NpdGlvbk1hbmFnZXJBZGRyZXNzOiAnMHhDMzY0NDJiNGE0NTIyRTg3MTM5OUNENzE3YUJERDg0N0FiMTFGRTg4J1xufTtcbnZhciBNQUlOTkVUX0FERFJFU1NFUyA9IC8qI19fUFVSRV9fKi9fZXh0ZW5kcyh7fSwgREVGQVVMVF9BRERSRVNTRVMsIHtcbiAgbWl4ZWRSb3V0ZVF1b3RlclYxQWRkcmVzczogJzB4ODRFNDQwOTVlZUJmRUM3NzkzQ2Q3ZDViNTdCN2U0MDFEN2YxY0EyRScsXG4gIHY0UG9vbE1hbmFnZXJBZGRyZXNzOiAnMHgwMDAwMDAwMDAwMDQ0NDRjNWRjNzVjQjM1ODM4MEQyZTNkRTA4QTkwJyxcbiAgdjRQb3NpdGlvbk1hbmFnZXJBZGRyZXNzOiAnMHhiZDIxNjUxM2Q3NGM4Y2YxNGNmNDc0N2U2YWFhNjQyMGZmNjRlZTllJyxcbiAgdjRTdGF0ZVZpZXc6ICcweDdmZmU0MmM0YTVkZWVhNWIwZmVjNDFjOTRjMTM2Y2YxMTU1OTcyMjcnLFxuICB2NFF1b3RlckFkZHJlc3M6ICcweDUyZjBlMjRkMWMyMWM4YTBjYjFlNWE1ZGQ2MTk4NTU2YmQ5ZTEyMDMnXG59KTtcbnZhciBHT0VSTElfQUREUkVTU0VTID0gLyojX19QVVJFX18qL19leHRlbmRzKHt9LCBERUZBVUxUX0FERFJFU1NFUywge1xuICBtaXhlZFJvdXRlUXVvdGVyVjFBZGRyZXNzOiAnMHhCYTYwYjZlNmZGMjU0ODgzMDg3ODlFNmUwQTY1RDgzOGJlMzQxOTRlJ1xufSk7XG52YXIgT1BUSU1JU01fQUREUkVTU0VTID0gLyojX19QVVJFX18qL19leHRlbmRzKHt9LCBERUZBVUxUX0FERFJFU1NFUywge1xuICB2NFBvb2xNYW5hZ2VyQWRkcmVzczogJzB4OWExM2Y5OGNiOTg3Njk0YzlmMDg2YjFmNWViOTkwZWVhODI2NGVjMycsXG4gIHY0UG9zaXRpb25NYW5hZ2VyQWRkcmVzczogJzB4M2MzZWE0YjU3YTQ2MjQxZTU0NjEwZTVmMDIyZTVjNDU4NTlhMTAxNycsXG4gIHY0U3RhdGVWaWV3OiAnMHhjMThhMzE2OTc4OGY0Zjc1YTE3MDI5MDU4NGVjYTYzOTVjNzVlY2RiJyxcbiAgdjRRdW90ZXJBZGRyZXNzOiAnMHgxZjMxMzFhMTMyOTZmYjkxYzkwODcwMDQzNzQyYzNjZGJmZjFhOGQ3J1xufSk7XG52YXIgQVJCSVRSVU1fT05FX0FERFJFU1NFUyA9IC8qI19fUFVSRV9fKi9fZXh0ZW5kcyh7fSwgREVGQVVMVF9BRERSRVNTRVMsIHtcbiAgbXVsdGljYWxsQWRkcmVzczogJzB4YWRGODg1OTYwQjQ3ZUEyQ0Q5QjU1RTZEQWM2QjQyYjdDYjI4MDZkQicsXG4gIHRpY2tMZW5zQWRkcmVzczogJzB4YmZkODEzN2Y3ZDE1MTZEM2VhNWNBODM1MjM5MTQ4NTllYzQ3RjU3MycsXG4gIHY0UG9vbE1hbmFnZXJBZGRyZXNzOiAnMHgzNjBlNjhmYWNjY2E4Y2E0OTVjMWI3NTlmZDllZWU0NjZkYjlmYjMyJyxcbiAgdjRQb3NpdGlvbk1hbmFnZXJBZGRyZXNzOiAnMHhkODhmMzhmOTMwYjc5NTJmMmRiMjQzMmNiMDAyZTdhYmJmM2RkODY5JyxcbiAgdjRTdGF0ZVZpZXc6ICcweDc2ZmQyOTdlMmQ0MzdjZDdmNzZkNTBmMDFhZmU2MTYwZjg2ZTk5OTAnLFxuICB2NFF1b3RlckFkZHJlc3M6ICcweDM5NzJjMDBmN2VkNDg4NWUxNDU4MjNlYjdjNjU1Mzc1ZDI3NWExYzUnXG59KTtcbnZhciBQT0xZR09OX0FERFJFU1NFUyA9IC8qI19fUFVSRV9fKi9fZXh0ZW5kcyh7fSwgREVGQVVMVF9BRERSRVNTRVMsIHtcbiAgdjRQb29sTWFuYWdlckFkZHJlc3M6ICcweDY3MzY2NzgyODA1ODcwMDYwMTUxMzgzZjRiYmZmOWRhYjUzZTVjZDYnLFxuICB2NFBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweDFlYzJlYmY0ZjM3ZTczNjNmZGZlMzU1MTYwMjQyNWFmMGIzY2VlZjknLFxuICB2NFN0YXRlVmlldzogJzB4NWVhMWJkNzk3NGM4YTYxMWNiYWIwYmRjYWZjYjFkOWNjOWIzYmE1YScsXG4gIHY0UXVvdGVyQWRkcmVzczogJzB4YjNkNWMzZGZjM2E3YWViZmY3MTg5NWE3MTkxNzk2YmZmYzJjODFiOSdcbn0pO1xuLy8gY2VsbyB2MyBhZGRyZXNzZXNcbnZhciBDRUxPX0FERFJFU1NFUyA9IHtcbiAgdjNDb3JlRmFjdG9yeUFkZHJlc3M6ICcweEFmRTIwOGEzMTFCMjFmMTNFRjg3RTMzQTkwMDQ5ZkMxN0E3YWNERWMnLFxuICBtdWx0aWNhbGxBZGRyZXNzOiAnMHg2MzM5ODc2MDJERTVDNEYzMzdlM0RiRjI2NTMwM0ExMDgwMzI0MjA0JyxcbiAgcXVvdGVyQWRkcmVzczogJzB4ODI4MjVkMDU1NGZBMDdmN0ZDNTJBYjYzYzk2MUYzMzBmZEVGYThFOCcsXG4gIHYzTWlncmF0b3JBZGRyZXNzOiAnMHgzY0ZkNGQ0OEVEZkRDQzUzRDNmMTczRjU5NmY2MjEwNjQ2MTRDNTgyJyxcbiAgbm9uZnVuZ2libGVQb3NpdGlvbk1hbmFnZXJBZGRyZXNzOiAnMHgzZDc5RWRBYUJDMEVhQjZGMDhFRDg4NUMwNUZjMEIwMTQyOTBEOTVBJyxcbiAgdGlja0xlbnNBZGRyZXNzOiAnMHg1ZjExNUQ5MTEzRjg4ZTBhMERiMWI1MDMzRDkwRDRhOTY5MEFjRDNEJ1xufTtcbi8vIEJOQiB2MyBhZGRyZXNzZXNcbnZhciBCTkJfQUREUkVTU0VTID0ge1xuICB2M0NvcmVGYWN0b3J5QWRkcmVzczogJzB4ZEIxZDEwMDExQUQwRmY5MDc3NEQwQzZCYjkyZTVDNWM4YjQ0NjFGNycsXG4gIG11bHRpY2FsbEFkZHJlc3M6ICcweDk2M0RmMjQ5ZUQwOWMzNThBNDgxOUUzOWQ5Q2Q1NzM2YzMwODcxODQnLFxuICBxdW90ZXJBZGRyZXNzOiAnMHg3OEQ3OEU0MjBEYTk4YWQzNzhENzc5OWJFOGY0QUY2OTAzM0VCMDc3JyxcbiAgdjNNaWdyYXRvckFkZHJlc3M6ICcweDMyNjgxODE0OTU3ZTBDMTMxMTdkZGMwYzJhYmEyMzJiNWM5ZTc2MGYnLFxuICBub25mdW5naWJsZVBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweDdiOEEwMUIzOUQ1ODI3OGI1REU3ZTQ4Yzg0NDljOWY0RjUxNzA2MTMnLFxuICB0aWNrTGVuc0FkZHJlc3M6ICcweEQ5MjcwMDE0RDM5NjI4MTU3OTc2MDYxOUNDZjRjM2FmMDUwMUE0N0MnLFxuICBzd2FwUm91dGVyMDJBZGRyZXNzOiAnMHhCOTcxZUY4N2VkZTU2MzU1NmIyRUQ0YjFDMGIwMDE5MTExRGQ4NWQyJyxcbiAgdjRQb29sTWFuYWdlckFkZHJlc3M6ICcweDI4ZTJlYTA5MDg3N2JmNzU3NDA1NThmNmJmYjM2YTVmZmVlOWU5ZGYnLFxuICB2NFBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweDdhNGE1YzkxOWFlMjU0MWFlZDExMDQxYTFhZWVlNjhmMTI4N2Y5NWInLFxuICB2NFN0YXRlVmlldzogJzB4ZDEzZGQzZDZlOTNmMjc2ZmFmYzlkYjllNmJiNDdjMTE4MGFlZTBjNCcsXG4gIHY0UXVvdGVyQWRkcmVzczogJzB4OWY3NWRkMjdkNjY2NGM0NzViOTBlMTA1NTczZTU1MGZmNjk0MzdiMCdcbn07XG4vLyBvcHRpbWlzbSBnb2VybGkgYWRkcmVzc2VzXG52YXIgT1BUSU1JU01fR09FUkxJX0FERFJFU1NFUyA9IHtcbiAgdjNDb3JlRmFjdG9yeUFkZHJlc3M6ICcweEI2NTZkQTE3MTI5ZTdFQjczM0E1NTdmNEVCYzU3Qjc2Q0ZiQjVkMTAnLFxuICBtdWx0aWNhbGxBZGRyZXNzOiAnMHgwN0YyRDhhMmEwMjI1MUI2MmFmOTY1ZjIyZkM0NzQ0QTVmOTZCQ0NkJyxcbiAgcXVvdGVyQWRkcmVzczogJzB4OTU2OUNiQTkyNWM4Y2EyMjQ4NzcyQTlBNDk3NkE1MTY3NDNBMjQ2RicsXG4gIHYzTWlncmF0b3JBZGRyZXNzOiAnMHhmNmM1NWZCZTg0QjFDOGMzMjgzNTMzYzUzRjUxYkMzMkY1QzdBYmE4JyxcbiAgbm9uZnVuZ2libGVQb3NpdGlvbk1hbmFnZXJBZGRyZXNzOiAnMHgzOUNhODVBZjJGMzgzMTkwY0JmN2Q3YzQxRUQ5MjAyRDI3NDI2RUY2JyxcbiAgdGlja0xlbnNBZGRyZXNzOiAnMHhlNjE0MEJkMTY0YjYzRThCZkNmYzQwRDVkRjk1MmY4M2UxNzE3NThlJ1xufTtcbi8vIG9wdGltaXNtIHNlcG9saWEgYWRkcmVzc2VzXG52YXIgT1BUSU1JU01fU0VQT0xJQV9BRERSRVNTRVMgPSB7XG4gIHYzQ29yZUZhY3RvcnlBZGRyZXNzOiAnMHg4Q0UxOTExOTNEMTVlYTk0ZTExZDMyN2I0YzdhZDhiYkU1MjBmNmFGJyxcbiAgbXVsdGljYWxsQWRkcmVzczogJzB4ODBlNGUwNjg0MWJiNzZBQTk3MzVFMDQ0OGNCOGQwMDNDMEVGMDA5YScsXG4gIHF1b3RlckFkZHJlc3M6ICcweDBGQkVhNmNmOTU3ZDk1ZWU5MzEzNDkwMDUwRjZBMERBNjgwMzk0MDQnLFxuICB2M01pZ3JhdG9yQWRkcmVzczogJzB4RTdFY2JBQWFBNTREMDA3QTAwZGJiNmMxZDJmMTUwMDY2RDY5ZEEwNycsXG4gIG5vbmZ1bmdpYmxlUG9zaXRpb25NYW5hZ2VyQWRkcmVzczogJzB4ZEE3NWNFZjFDOTMwNzhlOGI3MzZGQ0E1RDVhMzBhZGI5N0M4OTU3ZCcsXG4gIHRpY2tMZW5zQWRkcmVzczogJzB4Q2I3ZjU0NzQ3RjU4Rjg5NDQ5NzNjZWE1YjhmNGFjMjIwOUJhZERDNScsXG4gIHN3YXBSb3V0ZXIwMkFkZHJlc3M6ICcweDk0Y0MwQWFDNTM1Q0NEQjNDMDFkNjc4N0Q2NDEzQzczOWFlMTJiYzQnXG59O1xuLy8gYXJiaXRydW0gZ29lcmxpIHYzIGFkZHJlc3Nlc1xudmFyIEFSQklUUlVNX0dPRVJMSV9BRERSRVNTRVMgPSB7XG4gIHYzQ29yZUZhY3RvcnlBZGRyZXNzOiAnMHg0ODkzMzc2MzQyZDVEN2IzZTMxZDQxODRjMDhiMjY1ZTVhQjJBM2Y2JyxcbiAgbXVsdGljYWxsQWRkcmVzczogJzB4ODI2MENCNDAyNDcyOTAzMTdhNGMwNjJGMzU0MjYyMjM2N0YyMDZFZScsXG4gIHF1b3RlckFkZHJlc3M6ICcweDFkZDkyYjgzNTkxNzgxRDBDNmQ5OGQwNzM5MWVlYTRiOWE2MDA4RkEnLFxuICB2M01pZ3JhdG9yQWRkcmVzczogJzB4QTgxNTkxOUQyNTg0QWMzRjc2ZWE5Q0I2MkU2RmQ0MGE0M0JDZTBDMycsXG4gIG5vbmZ1bmdpYmxlUG9zaXRpb25NYW5hZ2VyQWRkcmVzczogJzB4NjIyZTQ3MjZhMTY3Nzk5ODI2ZDFFMUQxNTBiMDc2QTc3MjVmNUQ4MScsXG4gIHRpY2tMZW5zQWRkcmVzczogJzB4YjUyNDI5MzMzZGE5NjlhMEM3OWE2MDkzMGE0QmYwMDIwRTVEMURFOCdcbn07XG4vLyBhcmJpdHJ1bSBzZXBvbGlhIHYzIGFkZHJlc3Nlc1xudmFyIEFSQklUUlVNX1NFUE9MSUFfQUREUkVTU0VTID0ge1xuICB2M0NvcmVGYWN0b3J5QWRkcmVzczogJzB4MjQ4QUI3OUJiYjliQzI5YkI3MmY3Q2Q0MkYxN2UwNTRGYzQwMTg4ZScsXG4gIG11bHRpY2FsbEFkZHJlc3M6ICcweDJCNzE4YjQ3NWUzODVlRDI5RjU2Nzc1YTY2YUFCMUY1Y0M2QjJBMEEnLFxuICBxdW90ZXJBZGRyZXNzOiAnMHgyNzc5YTBDQzFjM2UwRTQ0RDI1NDJFQzNlNzllMzg2NEFlOTNFZjBCJyxcbiAgdjNNaWdyYXRvckFkZHJlc3M6ICcweDM5OGY0M2VmMmM2N0I5NDExNDcxNTdEQTFjNWE4NjhFOTA2RTA0M0QnLFxuICBub25mdW5naWJsZVBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweDZiMjkzN0JkZTE3ODg5RURDZjhmYkQ4ZEUzMUMzQzJhNzBCYzRkNjUnLFxuICB0aWNrTGVuc0FkZHJlc3M6ICcweDBmZDE4NTg3NzM0ZTVDMmRjRTJkY2NEY0M3REQxRUM4OWJhNTU3ZDknLFxuICBzd2FwUm91dGVyMDJBZGRyZXNzOiAnMHgxMDFGNDQzQjRkMWIwNTk1NjlENjQzOTE3NTUzYzc3MUUxYjk2NjNFJyxcbiAgdjRQb29sTWFuYWdlckFkZHJlc3M6ICcweEZCM2UwQzZGNzRlQjFhMjFDQzFEYTI5YWVDODBEMkRmZTZDOWEzMTcnLFxuICB2NFBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweEFjNjMxNTU2ZDNkNDAxOUM5NTc2OTAzM0I1RTcxOWRENzcxMjRCQWMnLFxuICB2NFN0YXRlVmlldzogJzB4OWQ0NjdmYTkwNjJiNmU5YjFhNDZlMjYwMDdhZDgyZGIxMTZjNjdjYicsXG4gIHY0UXVvdGVyQWRkcmVzczogJzB4N2RlNTEwMjJkNzBhNzI1YjUwODA4NTQ2ODA1MmUyNWUyMmI1YzRjOSdcbn07XG4vLyBzZXBvbGlhIHYzIGFkZHJlc3Nlc1xudmFyIFNFUE9MSUFfQUREUkVTU0VTID0ge1xuICB2M0NvcmVGYWN0b3J5QWRkcmVzczogJzB4MDIyNzYyOGYzRjAyM2JiMEI5ODBiNjdENTI4NTcxYzk1YzZEYUMxYycsXG4gIG11bHRpY2FsbEFkZHJlc3M6ICcweEQ3RjMzYkNkYjIxYjM1OWM4ZWU2RjAyNTFkMzBFOTQ4MzJiYUFkMDcnLFxuICBxdW90ZXJBZGRyZXNzOiAnMHhFZDFmNjQ3MzM0NUY0NWI3NUY4MTc5NTkxZGQ1YkExODg4Y2YyRkIzJyxcbiAgdjNNaWdyYXRvckFkZHJlc3M6ICcweDcyOTAwNDE4MmNGMDA1Q0VDOEJkODVkZjE0MDA5NGI2YUNiZThiMTUnLFxuICBub25mdW5naWJsZVBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweDEyMzg1MzYwNzFFMWM2NzdBNjMyNDI5ZTM2NTVjNzk5YjIyY0RBNTInLFxuICB0aWNrTGVuc0FkZHJlc3M6ICcweGQ3ZjMzYmNkYjIxYjM1OWM4ZWU2ZjAyNTFkMzBlOTQ4MzJiYWFkMDcnLFxuICBzd2FwUm91dGVyMDJBZGRyZXNzOiAnMHgzYkZBNDc2OUZCMDllZWZDNWE4MGQ2RTg3YzNCOUM2NTBmN0FlNDhFJyxcbiAgLy8gVE9ETzogdXBkYXRlIG1peGVkUm91dGVRdW90ZXJWMkFkZHJlc3Mgb25jZSB2NCBvbiBzZXBvbGlhIHJlZGVwbG95ZWRcbiAgbWl4ZWRSb3V0ZVF1b3RlclYyQWRkcmVzczogJzB4NDc0NWY3N2I1NmEwZTIyOTQ0MjZlMzkzNmRjNGZhYjY4ZDk1NDNjZCcsXG4gIC8vIFRPRE86IHVwZGF0ZSBhbGwgYmVsb3cgb25jZSB2NCBvbiBzZXBvbGlhIHJlZGVwbG95ZWRcbiAgdjRQb29sTWFuYWdlckFkZHJlc3M6ICcweEUwM0ExMDc0Yzg2Q0ZlRGQ1QzE0MkM0RjA0RjFhMTUzNmUyMDM1NDMnLFxuICB2NFBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweDQyOWJhNzAxMjlkZjc0MUIyQ2EyYTg1QkMzQTJhMzMyOGU1YzA5YjQnLFxuICB2NFN0YXRlVmlldzogJzB4ZTFkZDljM2ZhNTBlZGI5NjJlNDQyZjYwZGZiYzQzMmUyNDUzN2U0YycsXG4gIHY0UXVvdGVyQWRkcmVzczogJzB4NjFiM2YyMDExYTkyZDE4M2M3ZGJhZGJkYTk0MGE3NTU1Y2NmOTIyNydcbn07XG4vLyBBdmFsYW5jaGUgdjMgYWRkcmVzc2VzXG52YXIgQVZBTEFOQ0hFX0FERFJFU1NFUyA9IHtcbiAgdjNDb3JlRmFjdG9yeUFkZHJlc3M6ICcweDc0MGIxYzFkZTI1MDMxQzMxRkY0ZkM5QTYyZjU1NEE1NWNkQzFiYUQnLFxuICBtdWx0aWNhbGxBZGRyZXNzOiAnMHgwMTM5MTQxQ2Q0RWU4OGRGM0NkYjY1ODgxRDQxMWJBRTI3MUVmMEMyJyxcbiAgcXVvdGVyQWRkcmVzczogJzB4YmUwRjU1NDRFQzY3ZTlCM2IyRDk3OWFhQTQzZjE4RmQ4N0U2MjU3RicsXG4gIHYzTWlncmF0b3JBZGRyZXNzOiAnMHg0NGY1ZjFmNUU0NTJlYThkMjlDODkwRThGNmU4OTNmQzBmMWYwZjk3JyxcbiAgbm9uZnVuZ2libGVQb3NpdGlvbk1hbmFnZXJBZGRyZXNzOiAnMHg2NTVDNDA2RUJGYTE0RUUyMDA2MjUwOTI1ZTU0ZWM0M0FEMTg0ZjhCJyxcbiAgdGlja0xlbnNBZGRyZXNzOiAnMHhFQjlmRkM4YmY4MWI0ZkZkMTFmYjZBNjNhNkIwZjA5OGM2ZTIxOTUwJyxcbiAgc3dhcFJvdXRlcjAyQWRkcmVzczogJzB4YmIwMEZGMDhkMDFEMzAwMDIzQzYyOUU4ZkZmRmNiNjVBNWE1NzhjRScsXG4gIHY0UG9vbE1hbmFnZXJBZGRyZXNzOiAnMHgwNjM4MGMwZTA5MTIzMTJiNTE1MDM2NGI5ZGM0NTQyYmEwZGJiYzg1JyxcbiAgdjRQb3NpdGlvbk1hbmFnZXJBZGRyZXNzOiAnMHhiNzRiMWYxNGQyNzU0YWNmY2JiZTFhMjIxMDIzYTVjZjUwYWI4YWNkJyxcbiAgdjRTdGF0ZVZpZXc6ICcweGMzYzllMTk4YzczNWE0Yjk3ZTNlNjgzZjM5MWNjYmRkNjBiNjkyODYnLFxuICB2NFF1b3RlckFkZHJlc3M6ICcweGJlNDA2NzViYjcwNDUwNmEzYzJjY2ZiNzYyZGNmZDFlOTc5ODQ1YzInXG59O1xudmFyIEJBU0VfQUREUkVTU0VTID0ge1xuICB2M0NvcmVGYWN0b3J5QWRkcmVzczogJzB4MzMxMjhhOGZDMTc4Njk4OTdkY0U2OEVkMDI2ZDY5NDYyMWY2RkRmRCcsXG4gIG11bHRpY2FsbEFkZHJlc3M6ICcweDA5MWU5OWNiMUM0OTMzMWE5NGRENjI3NTVEMTY4RTk0MUFiRDA2OTMnLFxuICBxdW90ZXJBZGRyZXNzOiAnMHgzZDRlNDRFYjEzNzQyNDBDRTVGMUI4NzFhYjI2MUNEMTYzMzVCNzZhJyxcbiAgdjNNaWdyYXRvckFkZHJlc3M6ICcweDIzY0YxMGIxZWUzQWRmQ0E3M0IwZUYxN0MwN0Y3NTc3ZTdBQ2QyZDcnLFxuICBub25mdW5naWJsZVBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweDAzYTUyMGIzMkMwNEJGM2JFRWY3QkViNzJFOTE5Y2Y4MjJFZDM0ZjEnLFxuICB0aWNrTGVuc0FkZHJlc3M6ICcweDBDZGVFMDYxYzc1RDQzYzgyNTIwZUQ5OThDMjNhYzI5OTFjOWFjNmQnLFxuICBzd2FwUm91dGVyMDJBZGRyZXNzOiAnMHgyNjI2NjY0YzI2MDMzMzZFNTdCMjcxYzVDMGIyNkY0MjE3NDFlNDgxJyxcbiAgbWl4ZWRSb3V0ZVF1b3RlclYxQWRkcmVzczogJzB4ZTU0NGVmYWU5NDZmMDAwOGFlOWE4ZDY0NDkzZWZhNzg4NmI3Mzc3NicsXG4gIHY0UG9vbE1hbmFnZXJBZGRyZXNzOiAnMHg0OTg1ODFmZjcxODkyMmMzZjhlNmEyNDQ5NTZhZjA5OWIyNjUyYjJiJyxcbiAgdjRQb3NpdGlvbk1hbmFnZXJBZGRyZXNzOiAnMHg3YzVmNWE0YmJkOGZkNjMxODQ1Nzc1MjUzMjYxMjNiNTE5NDI5YmRjJyxcbiAgdjRTdGF0ZVZpZXc6ICcweGEzYzBjOWI2NWJhZDBiMDgxMDdhYTI2NGIwZjNkYjQ0NGI4NjdhNzEnLFxuICB2NFF1b3RlckFkZHJlc3M6ICcweDBkNWUwZjk3MWVkMjdmYmZmNmMyODM3YmYzMTMxNjEyMTUzMjA0OGQnXG59O1xuLy8gQmFzZSBHb2VybGkgdjMgYWRkcmVzc2VzXG52YXIgQkFTRV9HT0VSTElfQUREUkVTU0VTID0ge1xuICB2M0NvcmVGYWN0b3J5QWRkcmVzczogJzB4OTMyM2MxZDZEODAwZWQ1MUJkN0M2QjIxNmNmQmVjNjc4QjdkMEJDMicsXG4gIG11bHRpY2FsbEFkZHJlc3M6ICcweEIyMDYwMjdhOUUwRTEzRjA1ZUJFRmE1RDI0MDJCYWIzZUE3MTY0MzknLFxuICBxdW90ZXJBZGRyZXNzOiAnMHhlZGY1MzkwNThlMjhFNTkzN2RBZWYzZjY5Y0VkMGIyNWZiRTY2QWU5JyxcbiAgdjNNaWdyYXRvckFkZHJlc3M6ICcweDNlZmU1ZDAyYTA0YjczNTFENjcxRGI3MDA4ZWM2ZUJBOUFEOWUzYUUnLFxuICBub25mdW5naWJsZVBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweDNjNjEzNjllZjBEMUQyQUZhNzBkOGZlQzJGMzFDNUQ2Q2UxMzRGMzAnLFxuICB0aWNrTGVuc0FkZHJlc3M6ICcweDFhY0I4NzNFZTkwOUQwYzk4YWRCMThlNDQ3NDk0MzI0OUY5MzFiOTInLFxuICBzd2FwUm91dGVyMDJBZGRyZXNzOiAnMHg4MzU3MjI3RDRlRGM3ODk5MURiNkZEQjliRDZBREUyNTA1MzZkRTFkJ1xufTtcbi8vIEJhc2UgU2Vwb2xpYSB2MyBhZGRyZXNzZXNcbnZhciBCQVNFX1NFUE9MSUFfQUREUkVTU0VTID0ge1xuICB2M0NvcmVGYWN0b3J5QWRkcmVzczogJzB4NDc1MmJhNURCYzIzZjQ0RDg3ODI2Mjc2QkY2RmQ2YjFDMzcyYUQyNCcsXG4gIG11bHRpY2FsbEFkZHJlc3M6ICcweGQ4NjdlMjczZUFiRDZjODUzZkNkMENhMGJGQjZhM2FFNjQ5MWQyQzEnLFxuICBxdW90ZXJBZGRyZXNzOiAnMHhDNTI5MDA1ODg0MTAyOEYxNjE0RjNBNkYwRjU4MTZjQWQwZGY1RTI3JyxcbiAgdjNNaWdyYXRvckFkZHJlc3M6ICcweENiZjhiN2Y4MDgwMGJkNDg4OEZiYzdiZjE3MTNCODBGRTRFMjNFMTAnLFxuICBub25mdW5naWJsZVBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweDI3Rjk3MWNiNTgyQkY5RTUwRjM5N2U0ZDI5YTVDN0EzNGYxMWZhQTInLFxuICB0aWNrTGVuc0FkZHJlc3M6ICcweGVkZjYwNjZhMmIyOTBDMTg1NzgzODYyQzdGNDc3NkEyQzgwNzdBRDEnLFxuICBzd2FwUm91dGVyMDJBZGRyZXNzOiAnMHg5NGNDMEFhQzUzNUNDREIzQzAxZDY3ODdENjQxM0M3MzlhZTEyYmM0JyxcbiAgLy8gdjRcbiAgdjRQb29sTWFuYWdlckFkZHJlc3M6ICcweDA1RTczMzU0Y0ZEZDY3NDVDMzM4YjUwQmNGRGZBM0FhNmZBMDM0MDgnLFxuICB2NFBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweDRiMmM3N2QyMDlkMzQwNWY0MWEwMzdlYzZjNzdmN2Y1YjhlMmNhODAnLFxuICB2NFN0YXRlVmlldzogJzB4NTcxMjkxYjU3MmVkMzJjZTY3NTFhMmNiMjQ4NmViZWU4ZGVmYjliNCcsXG4gIHY0UXVvdGVyQWRkcmVzczogJzB4NGE2NTEzYzg5OGZlMWIyZDBlNzhkM2IwZTBhNGExNTE1ODliMWNiYSdcbn07XG52YXIgWk9SQV9BRERSRVNTRVMgPSB7XG4gIHYzQ29yZUZhY3RvcnlBZGRyZXNzOiAnMHg3MTQ1RjhhZWVmMWY2NTEwRTkyMTY0MDM4RTFCNkY4Y0IyYzQyQ2JiJyxcbiAgbXVsdGljYWxsQWRkcmVzczogJzB4QTUxYzc2YkVFNjc0NmNCNDg3YTdlOTMxMkU0M2UyYjhmNEEzN0MxNScsXG4gIHF1b3RlckFkZHJlc3M6ICcweDExODY3ZTFiMzM0OEYzY2U0RmNDMTcwQkM1YWYzZDIzRTA3RTY0RGYnLFxuICB2M01pZ3JhdG9yQWRkcmVzczogJzB4MDQ4MzUyZDhkQ0YxMzY4Njk4MkM3OTlkYTYzZkE2NDI2YTlEMGI2MCcsXG4gIG5vbmZ1bmdpYmxlUG9zaXRpb25NYW5hZ2VyQWRkcmVzczogJzB4YkM5MWU4RGZBM2ZGMThEZTQzODUzMzcyQTNkN2RmZTU4NTEzN0Q3OCcsXG4gIHRpY2tMZW5zQWRkcmVzczogJzB4MjA5QUFkYTA5RDc0QWQzQjhEMEU5MjkxMEVhZjg1RDIzNTdlMzA0NCcsXG4gIHN3YXBSb3V0ZXIwMkFkZHJlc3M6ICcweDdEZTA0Yzk2QkU1MTU5YzNiNUNlZmZDODJhYTE3NmRjODEyODE1NTcnLFxuICB2NFBvb2xNYW5hZ2VyQWRkcmVzczogJzB4MDU3NTMzOGU0YzE3MDA2YWUxODFiNDc5MDBhODQ0MDQyNDdjYTMwZicsXG4gIHY0UG9zaXRpb25NYW5hZ2VyQWRkcmVzczogJzB4ZjY2YzdiOTllMjA0MGYwZDliMzI2YjNiN2MxNTJlOTY2MzU0M2Q2MycsXG4gIHY0U3RhdGVWaWV3OiAnMHgzODU3ODVhZjA3ZDYzYjUwZDBhMGVhNTdjNGZmODlkMDZhZGY3MzI4JyxcbiAgdjRRdW90ZXJBZGRyZXNzOiAnMHg1ZWRhY2NjMDY2MGUwYTJjNDRiMDZlMDdjZThiOTE1ZTYyNWRjMmM2J1xufTtcbnZhciBaT1JBX1NFUE9MSUFfQUREUkVTU0VTID0ge1xuICB2M0NvcmVGYWN0b3J5QWRkcmVzczogJzB4NDMyNEE2NzdENzQ3NjRmNDZmMzNFRDQ0Nzk2NDI1MjQ0MWFBOERiNicsXG4gIG11bHRpY2FsbEFkZHJlc3M6ICcweEExRTdlM0E2OTY3MUM0NDk0RUM1OURiZDQ0MmRlOTMwYTkzRjkxMUEnLFxuICBxdW90ZXJBZGRyZXNzOiAnMHhDMTk1OTc2ZkVGMDk4NTg4NkUzNzAzNkUyREY2MmJGMzcxRTEyRGYwJyxcbiAgdjNNaWdyYXRvckFkZHJlc3M6ICcweDY1ZWYyNTliMzFiZjFkOTc3YzM3ZTk0MzQ2NTg2OTQyNjc2NzQ4OTcnLFxuICBub25mdW5naWJsZVBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweEI4NDU4RWFBZTQzMjkyZTNjMUY3OTk0RUZkMDE2YmQ2NTNkMjNjMjAnLFxuICB0aWNrTGVuc0FkZHJlc3M6ICcweDIzQzBGNzE4NzdhMUZjNGUyMEE3ODAxOGY5ODMxMzY1Yzg1ZjMwNjQnXG59O1xudmFyIFJPT1RTVE9DS19BRERSRVNTRVMgPSB7XG4gIHYzQ29yZUZhY3RvcnlBZGRyZXNzOiAnMHhhRjM3RUM5OEEwMEZENjM2ODlDRjMwNjBCRjNCNjc4NEUwMGNhRDgyJyxcbiAgbXVsdGljYWxsQWRkcmVzczogJzB4OTk2YTk4NThjRGZhNDVBZDY4RTQ3YzlBMzBhNzIwMUUyOWM2YTM4NicsXG4gIHF1b3RlckFkZHJlc3M6ICcweGI1MTcyN2M5OTZDNjhFNjBGNTk4QTkyM2E1MDA2ODUzY2QyZkVCMzEnLFxuICB2M01pZ3JhdG9yQWRkcmVzczogJzB4MTY2Nzg5NzdDQTRlYzNEQUQ1ZWZjN2IxNTc4MDI5NUZFNWY1NjE2MicsXG4gIG5vbmZ1bmdpYmxlUG9zaXRpb25NYW5hZ2VyQWRkcmVzczogJzB4OWQ5Mzg2YzA0MkYxOTRCNDYwRWM0MjRhMWU1N0FDREUyNWY1QzRiMScsXG4gIHRpY2tMZW5zQWRkcmVzczogJzB4NTVCOWRGNWJGNjhBRGU5NzIxOTFhOTE5ODA0NTlmNDhlY0ExNmFmQycsXG4gIHN3YXBSb3V0ZXIwMkFkZHJlc3M6ICcweDBCMTRmZjY3ZjAwMTQwNDZiNGI5OTA1N0FlYzQ1MDk2NDBiMzk0N0EnXG59O1xudmFyIEJMQVNUX0FERFJFU1NFUyA9IHtcbiAgdjNDb3JlRmFjdG9yeUFkZHJlc3M6ICcweDc5MmVkQWRFODBhZjVmQzY4MGQ5NmEyZUQ4MEE0NDI0N0QyQ2Y2RmQnLFxuICBtdWx0aWNhbGxBZGRyZXNzOiAnMHhkQzdmMzcwZGU3NjMxY0U5ZTJjMmUxRENEQTZCM0I1NzQ0Q2Y0NzA1JyxcbiAgcXVvdGVyQWRkcmVzczogJzB4NkNkY2Q2NWUwM2MxQ0VjMzczMEFlZUNkNDViYzE0MEQ1N0EyNUM3NycsXG4gIHYzTWlncmF0b3JBZGRyZXNzOiAnMHgxNUNBNzA0M0NEODRDNUQyMUFlNzZCYTBBMUE5NjdkNDJjNDBlY0UwJyxcbiAgbm9uZnVuZ2libGVQb3NpdGlvbk1hbmFnZXJBZGRyZXNzOiAnMHhCMjE4ZTRmN2NGMDUzM2Q0Njk2ZkRmQzQxOUEwMDIzRDMzMzQ1RjI4JyxcbiAgdGlja0xlbnNBZGRyZXNzOiAnMHgyRTk1MTg1YkNkRDkyOGEzZTk4NEI3ZTJENjU2MEFiMWIxN2Q3Mjc0JyxcbiAgc3dhcFJvdXRlcjAyQWRkcmVzczogJzB4NTQ5RkVCOGM5YmQ0YzEyQWQyQUIyNzAyMmRBMTI0OTJhQzQ1MkI2NicsXG4gIHY0UG9vbE1hbmFnZXJBZGRyZXNzOiAnMHgxNjMxNTU5MTk4YTllNDc0MDMzNDMzYjI5NThkYWJjMTM1YWI2NDQ2JyxcbiAgdjRQb3NpdGlvbk1hbmFnZXJBZGRyZXNzOiAnMHg0YWQyZjRjY2EyNjgyY2JiNWI5NTBkNjYwZGQ0NThhMWQzZjFiYWFkJyxcbiAgdjRTdGF0ZVZpZXc6ICcweDEyYTg4YWUxNmY0NmRjZTRlOGIxNTM2ODAwOGFiMzM4MDg4NWRmMzAnLFxuICB2NFF1b3RlckFkZHJlc3M6ICcweDZmNzFjZGNiMGQxMTlmZjcyYzZlYjUwMWFiY2ViNTc2ZmJmNjJiY2YnXG59O1xudmFyIFpLU1lOQ19BRERSRVNTRVMgPSB7XG4gIHYzQ29yZUZhY3RvcnlBZGRyZXNzOiAnMHg4RmRBNWE3YThkQ0E2N0JCY0RkMTBGMDJGYTA2NDlBOTM3MjE1NDIyJyxcbiAgbXVsdGljYWxsQWRkcmVzczogJzB4MGM2OGE3QzcyZjA3NGQxYzQ1QzE2ZDQxZmE3NGVFYkM2RDE2YTY1QycsXG4gIHF1b3RlckFkZHJlc3M6ICcweDhDYjUzN2ZjOTJFMjZkOEVCQmI3NjBFNjMyYzk1NDg0YjZFYTNlMjgnLFxuICB2M01pZ3JhdG9yQWRkcmVzczogJzB4NjExODQxYjI0RTQzQzRBQ2ZkMjkwQjQyN2EzRDZjZjFBNTlkYWM4RScsXG4gIG5vbmZ1bmdpYmxlUG9zaXRpb25NYW5hZ2VyQWRkcmVzczogJzB4MDYxNmU1NzYyYzFFN0RjMzcyM2M1MDY2M2RGMTBhMTYyRDY5MGE4NicsXG4gIHRpY2tMZW5zQWRkcmVzczogJzB4ZTEwRkYxMWI4MDlmOEVFMDdiMDU2QjQ1MmMzQjJjYWE3RkUyNGY4OScsXG4gIHN3YXBSb3V0ZXIwMkFkZHJlc3M6ICcweDk5YzU2Mzg1ZGFCQ0UzRTgxZDg0OTlkMGI4ZDAyNTdhQkMwN0U4QTMnXG59O1xudmFyIFdPUkxEQ0hBSU5fQUREUkVTU0VTID0ge1xuICB2M0NvcmVGYWN0b3J5QWRkcmVzczogJzB4N2E1MDI4QkRhNDBlN0IxNzNDMjc4QzUzNDIwODc4MjY0NTVlYTI1YScsXG4gIG11bHRpY2FsbEFkZHJlc3M6ICcweDBhMjJjMDQyMTVjOTdFM0Y1MzJGNGVGMzBlMGFEOTQ1ODc5MmRBQjknLFxuICBxdW90ZXJBZGRyZXNzOiAnMHgxMDE1OEQ0M2U2Y2M0MTRkZUUxQmQxZUIwRWZDNmE1Y0JDZkYyNDRjJyxcbiAgdjNNaWdyYXRvckFkZHJlc3M6ICcweDlFQkRkQ0JhNzFDOTAyN0UxZUI0NTEzNTY3MmEzMGJjRkVlYzlkZTMnLFxuICBub25mdW5naWJsZVBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweGVjMTJhOUY5YTA5ZjUwNTUwNjg2MzYzNzY2Q2MxNTNEMDNjMjdiNWUnLFxuICB0aWNrTGVuc0FkZHJlc3M6ICcweEU2MWRmMENhQzlkODU4NzZhQ0U1RTMwMzcwMDVEODA5NDM1NzA2MjMnLFxuICBzd2FwUm91dGVyMDJBZGRyZXNzOiAnMHgwOTFBRDllMmU2ZTVlRDQ0YzFjNjZkQjUwZTQ5QTYwMUY5ZjM2Y0Y2JyxcbiAgdjRQb29sTWFuYWdlckFkZHJlc3M6ICcweGIxODYwZDUyOTE4MmFjM2JjMWY1MWZhMmFiZDU2NjYyYjdkMTNmMzMnLFxuICB2NFBvc2l0aW9uTWFuYWdlckFkZHJlc3M6ICcweGM1ODVlMGY1MDQ2MTNiNWZiZjg3NGYyMWFmMTRjNjUyNjBmYjQxZmEnLFxuICB2NFN0YXRlVmlldzogJzB4NTFkMzk0NzE4YmMwOTI5NzI2MmUzNjhjMWE0ODEyMTdmZGViNzFlYicsXG4gIHY0UXVvdGVyQWRkcmVzczogJzB4NTVkMjM1YjNmZjJkYWY3YzNlZGUwZGVmYzk1MjFmMWQ2ZmU2YzVjMCdcbn07XG52YXIgVU5JQ0hBSU5fU0VQT0xJQV9BRERSRVNTRVMgPSB7XG4gIHYzQ29yZUZhY3RvcnlBZGRyZXNzOiAnMHgxRjk4NDMxYzhhRDk4NTIzNjMxQUU0YTU5ZjI2NzM0NmVhMzFGOTg0JyxcbiAgbXVsdGljYWxsQWRkcmVzczogJzB4OUQwRjE1ZjJjZjU4NjU1ZkREY0QxRUU2MTI5QzU0N2ZEYWVEMDFiMScsXG4gIHF1b3RlckFkZHJlc3M6ICcweDZEZDM3MzI5QTFBMjI1YTZGY2E2NTgyNjVENDYwNDIzRENhZkJGODknLFxuICB2M01pZ3JhdG9yQWRkcmVzczogJzB4YjVGQTI0NEM5ZDZEMDRCMkZCYWM4NDQxOGIzYzQ5MTBFRDFBZTVmMicsXG4gIG5vbmZ1bmdpYmxlUG9zaXRpb25NYW5hZ2VyQWRkcmVzczogJzB4QjdGNzI0ZDZkRERGZDAwOGVGZjVjYzI4MzRlZERFNUY5ZUYwZDA3NScsXG4gIHRpY2tMZW5zQWRkcmVzczogJzB4NWY3MzljNzkwYTQ4RTk3ZWVjMGVmYjgxYmFiNUQxNTJjMEEwZWNBMCcsXG4gIHN3YXBSb3V0ZXIwMkFkZHJlc3M6ICcweGQxQUFFMzkyOTMyMjFCNzdCMEM3MWZCRDZkQ2I3RWEyOUJiNUIxNjYnLFxuICB2NFBvb2xNYW5hZ2VyQWRkcmVzczogJzB4MDBiMDM2YjU4YTgxOGIxYmMzNGQ1MDJkM2ZlNzMwZGI3MjllNjJhYycsXG4gIHY0UG9zaXRpb25NYW5hZ2VyQWRkcmVzczogJzB4Zjk2OWFlZTYwODc5YzU0YmFhZWQ5ZjNlZDI2MTQ3ZGIyMTZmZDY2NCcsXG4gIHY0U3RhdGVWaWV3OiAnMHhjMTk5ZjEwNzJhNzRkNGU5MDVhYmExYTg0ZDlhNDVlMjU0NmI2MjIyJyxcbiAgdjRRdW90ZXJBZGRyZXNzOiAnMHg1NmRjZDQwYTNmMmQ0NjZmNDhlN2Y0OGJkYmU1Y2M5YjkyYWU0NDcyJ1xufTtcbnZhciBVTklDSEFJTl9BRERSRVNTRVMgPSB7XG4gIHYzQ29yZUZhY3RvcnlBZGRyZXNzOiAnMHgxZjk4NDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzJyxcbiAgbXVsdGljYWxsQWRkcmVzczogJzB4Yjc2MTBmOWI3MzNlN2Q0NTE4NGJlM2ExYmM5NjY5NjBjY2M1NGYwYicsXG4gIHF1b3RlckFkZHJlc3M6ICcweDU2NWFjOGM3ODYzZDliYjE2ZDA3ZTgwOWZmNDlmZTVjZDQ2NzYzNGMnLFxuICB2M01pZ3JhdG9yQWRkcmVzczogJzB4YjlkMGMyNDZmMzA2YjFhYWYwMmFlNmJhMTEyZDVlZjI1ZTViNjBkYycsXG4gIG5vbmZ1bmdpYmxlUG9zaXRpb25NYW5hZ2VyQWRkcmVzczogJzB4OTQzZTZlMDdhN2U4ZTc5MWRhZmM0NDA4M2U1NDA0MWQ3NDNjNDZlOScsXG4gIHRpY2tMZW5zQWRkcmVzczogJzB4ZDVkNzZmYTE2NmFiOGQ4YWQ0YzlmNjFhYWE4MTQ1N2I2NmNiZTQ0MycsXG4gIHN3YXBSb3V0ZXIwMkFkZHJlc3M6ICcweDczODU1ZDA2ZGU0OWQwZmU0YTljNDI2MzZiYTk2YzYyZGExMmZmOWMnLFxuICB2NFBvb2xNYW5hZ2VyQWRkcmVzczogJzB4MWY5ODQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNCcsXG4gIHY0UG9zaXRpb25NYW5hZ2VyQWRkcmVzczogJzB4NDUyOWEwMWM3YTA0MTAxNjdjNTc0MGM0ODdhOGRlNjAyMzI2MTdiZicsXG4gIHY0U3RhdGVWaWV3OiAnMHg4NmU4NjMxYTAxNmY5MDY4YzNmMDg1ZmFmNDg0ZWUzZjVmZGVlOGYyJyxcbiAgdjRRdW90ZXJBZGRyZXNzOiAnMHgzMzNlM2M2MDdiMTQxYjE4ZmY2ZGU5ZjI1OGRiNmU3N2ZlNzQ5MWUwJ1xufTtcbnZhciBNT05BRF9URVNUTkVUX0FERFJFU1NFUyA9IHtcbiAgdjNDb3JlRmFjdG9yeUFkZHJlc3M6ICcweDk2MTIzNWE5MDIwYjA1YzQ0ZGYxMDI2ZDk1NmQxZjRkNzgwMTQyNzYnLFxuICBtdWx0aWNhbGxBZGRyZXNzOiAnMHhhNzA3Y2ViOTg5Y2MzNzI4NTUxZWQwZTZlNDRiNzE4ZGQxMTRjZjQ0JyxcbiAgcXVvdGVyQWRkcmVzczogJzB4MWJhMjE1YzE3NTY1ZGU3YjBjYjdlY2FiOTcxYmNmNTQwYzI0YTg2MicsXG4gIHYzTWlncmF0b3JBZGRyZXNzOiAnMHgwYTc4MzQ4YjcxZjhhZThjYWZmMmY4ZjlkNGQ3NGEyZjM2NTE2NjYxJyxcbiAgbm9uZnVuZ2libGVQb3NpdGlvbk1hbmFnZXJBZGRyZXNzOiAnMHgzZGNjNzM1Yzc0ZjEwZmUyYjlkYjJiYjU1YzQwZmJiYmYyNDQ5MGY3JyxcbiAgdGlja0xlbnNBZGRyZXNzOiAnMHgzMzc0NzhlYjYwNTg0NTVlY2IzNjk2MTg0YjMwZGQ2YTI5ZTNhODkzJyxcbiAgc3dhcFJvdXRlcjAyQWRkcmVzczogJzB4NGM0ZWFiZDVmYjFkMWE3MjM0YTQ4NjkyNTUxZWFlY2ZmODE5NGNhNydcbn07XG52YXIgU09ORUlVTV9BRERSRVNTRVMgPSB7XG4gIHYzQ29yZUZhY3RvcnlBZGRyZXNzOiAnMHg0MmFlN2VjN2ZmMDIwNDEyNjM5ZDQ0M2UyNDVkOTM2NDI5ZmJlNzE3JyxcbiAgbXVsdGljYWxsQWRkcmVzczogJzB4OGFkNWVmMmYyNTA4Mjg4ZDJkZTY2ZjA0ZGQ4ODNhZDVmNGVmNjJiMicsXG4gIHF1b3RlckFkZHJlc3M6ICcweDNlNmM3MDdkMDEyNTIyNmZmNjBmMjkxYjZiZDE0MDQ2MzRmMDBhYmEnLFxuICB2M01pZ3JhdG9yQWRkcmVzczogJzB4YTEwNzU4MGY3M2JkNzk3YmQ4Yjg3ZmYyNGU5ODM0NmQ5OWY5M2RkYicsXG4gIG5vbmZ1bmdpYmxlUG9zaXRpb25NYW5hZ2VyQWRkcmVzczogJzB4NTZjMTIwNWIwMjQ0MzMyMDExYzFlODY2ZjRlYTUzODRlYjZiZmEyYycsXG4gIHRpY2tMZW5zQWRkcmVzczogJzB4Y2QwOGVlZmI5MjhjODY0OTllNjIzNWFjMTU1OTA2YmI3YzRkYzQxYScsXG4gIHN3YXBSb3V0ZXIwMkFkZHJlc3M6ICcweDdlNDBkYjAxNzM2Zjg4NDY0ZTVmNGU0MjM5NGYzZDViYmI2NzA1YjknLFxuICB2NFBvb2xNYW5hZ2VyQWRkcmVzczogJzB4MzYwZTY4ZmFjY2NhOGNhNDk1YzFiNzU5ZmQ5ZWVlNDY2ZGI5ZmIzMicsXG4gIHY0UG9zaXRpb25NYW5hZ2VyQWRkcmVzczogJzB4MWIzNWQxM2EyZTI1MjhmMTkyNjM3ZjE0YjA1ZjBkYzBlN2RlYjU2NicsXG4gIHY0U3RhdGVWaWV3OiAnMHg3NmZkMjk3ZTJkNDM3Y2Q3Zjc2ZDUwZjAxYWZlNjE2MGY4NmU5OTkwJyxcbiAgdjRRdW90ZXJBZGRyZXNzOiAnMHgzOTcyYzAwZjdlZDQ4ODVlMTQ1ODIzZWI3YzY1NTM3NWQyNzVhMWM1J1xufTtcbnZhciBDSEFJTl9UT19BRERSRVNTRVNfTUFQID0gKF9DSEFJTl9UT19BRERSRVNTRVNfTSA9IHt9LCBfQ0hBSU5fVE9fQUREUkVTU0VTX01bQ2hhaW5JZC5NQUlOTkVUXSA9IE1BSU5ORVRfQUREUkVTU0VTLCBfQ0hBSU5fVE9fQUREUkVTU0VTX01bQ2hhaW5JZC5PUFRJTUlTTV0gPSBPUFRJTUlTTV9BRERSRVNTRVMsIF9DSEFJTl9UT19BRERSRVNTRVNfTVtDaGFpbklkLkFSQklUUlVNX09ORV0gPSBBUkJJVFJVTV9PTkVfQUREUkVTU0VTLCBfQ0hBSU5fVE9fQUREUkVTU0VTX01bQ2hhaW5JZC5QT0xZR09OXSA9IFBPTFlHT05fQUREUkVTU0VTLCBfQ0hBSU5fVE9fQUREUkVTU0VTX01bQ2hhaW5JZC5QT0xZR09OX01VTUJBSV0gPSBQT0xZR09OX0FERFJFU1NFUywgX0NIQUlOX1RPX0FERFJFU1NFU19NW0NoYWluSWQuR09FUkxJXSA9IEdPRVJMSV9BRERSRVNTRVMsIF9DSEFJTl9UT19BRERSRVNTRVNfTVtDaGFpbklkLkNFTE9dID0gQ0VMT19BRERSRVNTRVMsIF9DSEFJTl9UT19BRERSRVNTRVNfTVtDaGFpbklkLkNFTE9fQUxGQUpPUkVTXSA9IENFTE9fQUREUkVTU0VTLCBfQ0hBSU5fVE9fQUREUkVTU0VTX01bQ2hhaW5JZC5CTkJdID0gQk5CX0FERFJFU1NFUywgX0NIQUlOX1RPX0FERFJFU1NFU19NW0NoYWluSWQuT1BUSU1JU01fR09FUkxJXSA9IE9QVElNSVNNX0dPRVJMSV9BRERSRVNTRVMsIF9DSEFJTl9UT19BRERSRVNTRVNfTVtDaGFpbklkLk9QVElNSVNNX1NFUE9MSUFdID0gT1BUSU1JU01fU0VQT0xJQV9BRERSRVNTRVMsIF9DSEFJTl9UT19BRERSRVNTRVNfTVtDaGFpbklkLkFSQklUUlVNX0dPRVJMSV0gPSBBUkJJVFJVTV9HT0VSTElfQUREUkVTU0VTLCBfQ0hBSU5fVE9fQUREUkVTU0VTX01bQ2hhaW5JZC5BUkJJVFJVTV9TRVBPTElBXSA9IEFSQklUUlVNX1NFUE9MSUFfQUREUkVTU0VTLCBfQ0hBSU5fVE9fQUREUkVTU0VTX01bQ2hhaW5JZC5TRVBPTElBXSA9IFNFUE9MSUFfQUREUkVTU0VTLCBfQ0hBSU5fVE9fQUREUkVTU0VTX01bQ2hhaW5JZC5BVkFMQU5DSEVdID0gQVZBTEFOQ0hFX0FERFJFU1NFUywgX0NIQUlOX1RPX0FERFJFU1NFU19NW0NoYWluSWQuQkFTRV0gPSBCQVNFX0FERFJFU1NFUywgX0NIQUlOX1RPX0FERFJFU1NFU19NW0NoYWluSWQuQkFTRV9HT0VSTEldID0gQkFTRV9HT0VSTElfQUREUkVTU0VTLCBfQ0hBSU5fVE9fQUREUkVTU0VTX01bQ2hhaW5JZC5CQVNFX1NFUE9MSUFdID0gQkFTRV9TRVBPTElBX0FERFJFU1NFUywgX0NIQUlOX1RPX0FERFJFU1NFU19NW0NoYWluSWQuWk9SQV0gPSBaT1JBX0FERFJFU1NFUywgX0NIQUlOX1RPX0FERFJFU1NFU19NW0NoYWluSWQuWk9SQV9TRVBPTElBXSA9IFpPUkFfU0VQT0xJQV9BRERSRVNTRVMsIF9DSEFJTl9UT19BRERSRVNTRVNfTVtDaGFpbklkLlJPT1RTVE9DS10gPSBST09UU1RPQ0tfQUREUkVTU0VTLCBfQ0hBSU5fVE9fQUREUkVTU0VTX01bQ2hhaW5JZC5CTEFTVF0gPSBCTEFTVF9BRERSRVNTRVMsIF9DSEFJTl9UT19BRERSRVNTRVNfTVtDaGFpbklkLlpLU1lOQ10gPSBaS1NZTkNfQUREUkVTU0VTLCBfQ0hBSU5fVE9fQUREUkVTU0VTX01bQ2hhaW5JZC5XT1JMRENIQUlOXSA9IFdPUkxEQ0hBSU5fQUREUkVTU0VTLCBfQ0hBSU5fVE9fQUREUkVTU0VTX01bQ2hhaW5JZC5VTklDSEFJTl9TRVBPTElBXSA9IFVOSUNIQUlOX1NFUE9MSUFfQUREUkVTU0VTLCBfQ0hBSU5fVE9fQUREUkVTU0VTX01bQ2hhaW5JZC5VTklDSEFJTl0gPSBVTklDSEFJTl9BRERSRVNTRVMsIF9DSEFJTl9UT19BRERSRVNTRVNfTVtDaGFpbklkLk1PTkFEX1RFU1RORVRdID0gTU9OQURfVEVTVE5FVF9BRERSRVNTRVMsIF9DSEFJTl9UT19BRERSRVNTRVNfTVtDaGFpbklkLlNPTkVJVU1dID0gU09ORUlVTV9BRERSRVNTRVMsIF9DSEFJTl9UT19BRERSRVNTRVNfTSk7XG4vKiBWMyBDb250cmFjdCBBZGRyZXNzZXMgKi9cbnZhciBWM19DT1JFX0ZBQ1RPUllfQUREUkVTU0VTID0gLyojX19QVVJFX18qL19leHRlbmRzKHt9LCAvKiNfX1BVUkVfXyovU1VQUE9SVEVEX0NIQUlOUy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGNoYWluSWQpIHtcbiAgbWVtb1tjaGFpbklkXSA9IENIQUlOX1RPX0FERFJFU1NFU19NQVBbY2hhaW5JZF0udjNDb3JlRmFjdG9yeUFkZHJlc3M7XG4gIHJldHVybiBtZW1vO1xufSwge30pKTtcbnZhciBWM19NSUdSQVRPUl9BRERSRVNTRVMgPSAvKiNfX1BVUkVfXyovX2V4dGVuZHMoe30sIC8qI19fUFVSRV9fKi9TVVBQT1JURURfQ0hBSU5TLnJlZHVjZShmdW5jdGlvbiAobWVtbywgY2hhaW5JZCkge1xuICB2YXIgdjNNaWdyYXRvckFkZHJlc3MgPSBDSEFJTl9UT19BRERSRVNTRVNfTUFQW2NoYWluSWRdLnYzTWlncmF0b3JBZGRyZXNzO1xuICBpZiAodjNNaWdyYXRvckFkZHJlc3MpIHtcbiAgICBtZW1vW2NoYWluSWRdID0gdjNNaWdyYXRvckFkZHJlc3M7XG4gIH1cbiAgcmV0dXJuIG1lbW87XG59LCB7fSkpO1xudmFyIE1VTFRJQ0FMTF9BRERSRVNTRVMgPSAvKiNfX1BVUkVfXyovX2V4dGVuZHMoe30sIC8qI19fUFVSRV9fKi9TVVBQT1JURURfQ0hBSU5TLnJlZHVjZShmdW5jdGlvbiAobWVtbywgY2hhaW5JZCkge1xuICBtZW1vW2NoYWluSWRdID0gQ0hBSU5fVE9fQUREUkVTU0VTX01BUFtjaGFpbklkXS5tdWx0aWNhbGxBZGRyZXNzO1xuICByZXR1cm4gbWVtbztcbn0sIHt9KSk7XG4vKipcclxuICogVGhlIG9sZGVzdCBWMCBnb3Zlcm5hbmNlIGFkZHJlc3NcclxuICovXG52YXIgR09WRVJOQU5DRV9BTFBIQV9WMF9BRERSRVNTRVMgPSAvKiNfX1BVUkVfXyovY29uc3RydWN0U2FtZUFkZHJlc3NNYXAoJzB4NWU0YmU4QmM5NjM3ZjBFQUExQTc1NTAxOWUwNkE2OGNlMDgxRDU4RicpO1xuLyoqXHJcbiAqIFRoZSBvbGRlciBWMSBnb3Zlcm5hbmNlIGFkZHJlc3NcclxuICovXG52YXIgR09WRVJOQU5DRV9BTFBIQV9WMV9BRERSRVNTRVMgPSAoX0dPVkVSTkFOQ0VfQUxQSEFfVjFfID0ge30sIF9HT1ZFUk5BTkNFX0FMUEhBX1YxX1tDaGFpbklkLk1BSU5ORVRdID0gJzB4QzRlMTcyNDU5ZjFFNzkzOUQ1MjI1MDNCODFBRkFhQzEwMTRDRTZGNicsIF9HT1ZFUk5BTkNFX0FMUEhBX1YxXyk7XG4vKipcclxuICogVGhlIGxhdGVzdCBnb3Zlcm5vciBicmF2byB0aGF0IGlzIGN1cnJlbnRseSBhZG1pbiBvZiB0aW1lbG9ja1xyXG4gKi9cbnZhciBHT1ZFUk5BTkNFX0JSQVZPX0FERFJFU1NFUyA9IChfR09WRVJOQU5DRV9CUkFWT19BREQgPSB7fSwgX0dPVkVSTkFOQ0VfQlJBVk9fQUREW0NoYWluSWQuTUFJTk5FVF0gPSAnMHg0MDhFRDYzNTRkNDk3M2Y2NjEzOEM5MTQ5NUYyZjJGQ2JkODcyNEMzJywgX0dPVkVSTkFOQ0VfQlJBVk9fQUREKTtcbnZhciBUSU1FTE9DS19BRERSRVNTRVMgPSAvKiNfX1BVUkVfXyovY29uc3RydWN0U2FtZUFkZHJlc3NNYXAoJzB4MWE5QzgxODJDMDlGNTBDODMxOGQ3NjkyNDViZUE1MmMzMkJFMzVCQycpO1xudmFyIE1FUktMRV9ESVNUUklCVVRPUl9BRERSRVNTID0gKF9NRVJLTEVfRElTVFJJQlVUT1JfQSA9IHt9LCBfTUVSS0xFX0RJU1RSSUJVVE9SX0FbQ2hhaW5JZC5NQUlOTkVUXSA9ICcweDA5MEQ0NjEzNDczZEVFMDQ3YzNmMjcwNjc2NGY0OUUwODIxRDI1NmUnLCBfTUVSS0xFX0RJU1RSSUJVVE9SX0EpO1xudmFyIEFSR0VOVF9XQUxMRVRfREVURUNUT1JfQUREUkVTUyA9IChfQVJHRU5UX1dBTExFVF9ERVRFQ1QgPSB7fSwgX0FSR0VOVF9XQUxMRVRfREVURUNUW0NoYWluSWQuTUFJTk5FVF0gPSAnMHhlY2E0QjBiREJmN2M1NUU5Yjc5MjU5MTlkMDNDYkY4RGM4MjUzN0U4JywgX0FSR0VOVF9XQUxMRVRfREVURUNUKTtcbnZhciBRVU9URVJfQUREUkVTU0VTID0gLyojX19QVVJFX18qL19leHRlbmRzKHt9LCAvKiNfX1BVUkVfXyovU1VQUE9SVEVEX0NIQUlOUy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGNoYWluSWQpIHtcbiAgbWVtb1tjaGFpbklkXSA9IENIQUlOX1RPX0FERFJFU1NFU19NQVBbY2hhaW5JZF0ucXVvdGVyQWRkcmVzcztcbiAgcmV0dXJuIG1lbW87XG59LCB7fSkpO1xudmFyIE5PTkZVTkdJQkxFX1BPU0lUSU9OX01BTkFHRVJfQUREUkVTU0VTID0gLyojX19QVVJFX18qL19leHRlbmRzKHt9LCAvKiNfX1BVUkVfXyovU1VQUE9SVEVEX0NIQUlOUy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGNoYWluSWQpIHtcbiAgdmFyIG5vbmZ1bmdpYmxlUG9zaXRpb25NYW5hZ2VyQWRkcmVzcyA9IENIQUlOX1RPX0FERFJFU1NFU19NQVBbY2hhaW5JZF0ubm9uZnVuZ2libGVQb3NpdGlvbk1hbmFnZXJBZGRyZXNzO1xuICBpZiAobm9uZnVuZ2libGVQb3NpdGlvbk1hbmFnZXJBZGRyZXNzKSB7XG4gICAgbWVtb1tjaGFpbklkXSA9IG5vbmZ1bmdpYmxlUG9zaXRpb25NYW5hZ2VyQWRkcmVzcztcbiAgfVxuICByZXR1cm4gbWVtbztcbn0sIHt9KSk7XG52YXIgRU5TX1JFR0lTVFJBUl9BRERSRVNTRVMgPSAvKiNfX1BVUkVfXyovX2V4dGVuZHMoe30sIC8qI19fUFVSRV9fKi9jb25zdHJ1Y3RTYW1lQWRkcmVzc01hcCgnMHgwMDAwMDAwMDAwMEMyRTA3NGVDNjlBMGRGYjI5OTdCQTZDN2QyZTFlJykpO1xudmFyIFNPQ0tTX0NPTlRST0xMRVJfQUREUkVTU0VTID0gKF9TT0NLU19DT05UUk9MTEVSX0FERCA9IHt9LCBfU09DS1NfQ09OVFJPTExFUl9BRERbQ2hhaW5JZC5NQUlOTkVUXSA9ICcweDY1NzcwYjUyODMxMTc2Mzk3NjBiZUEzRjg2N2I2OWIzNjk3YTkxZGQnLCBfU09DS1NfQ09OVFJPTExFUl9BREQpO1xudmFyIFRJQ0tfTEVOU19BRERSRVNTRVMgPSAvKiNfX1BVUkVfXyovX2V4dGVuZHMoe30sIC8qI19fUFVSRV9fKi9TVVBQT1JURURfQ0hBSU5TLnJlZHVjZShmdW5jdGlvbiAobWVtbywgY2hhaW5JZCkge1xuICB2YXIgdGlja0xlbnNBZGRyZXNzID0gQ0hBSU5fVE9fQUREUkVTU0VTX01BUFtjaGFpbklkXS50aWNrTGVuc0FkZHJlc3M7XG4gIGlmICh0aWNrTGVuc0FkZHJlc3MpIHtcbiAgICBtZW1vW2NoYWluSWRdID0gdGlja0xlbnNBZGRyZXNzO1xuICB9XG4gIHJldHVybiBtZW1vO1xufSwge30pKTtcbnZhciBNSVhFRF9ST1VURV9RVU9URVJfVjFfQUREUkVTU0VTID0gLyojX19QVVJFX18qL1NVUFBPUlRFRF9DSEFJTlMucmVkdWNlKGZ1bmN0aW9uIChtZW1vLCBjaGFpbklkKSB7XG4gIHZhciBtaXhlZFJvdXRlUXVvdGVyVjFBZGRyZXNzID0gQ0hBSU5fVE9fQUREUkVTU0VTX01BUFtjaGFpbklkXS5taXhlZFJvdXRlUXVvdGVyVjFBZGRyZXNzO1xuICBpZiAobWl4ZWRSb3V0ZVF1b3RlclYxQWRkcmVzcykge1xuICAgIG1lbW9bY2hhaW5JZF0gPSBtaXhlZFJvdXRlUXVvdGVyVjFBZGRyZXNzO1xuICB9XG4gIHJldHVybiBtZW1vO1xufSwge30pO1xudmFyIFNXQVBfUk9VVEVSXzAyX0FERFJFU1NFUyA9IGZ1bmN0aW9uIFNXQVBfUk9VVEVSXzAyX0FERFJFU1NFUyhjaGFpbklkKSB7XG4gIGlmIChTVVBQT1JURURfQ0hBSU5TLmluY2x1ZGVzKGNoYWluSWQpKSB7XG4gICAgdmFyIF9DSEFJTl9UT19BRERSRVNTRVNfTTI7XG4gICAgdmFyIGlkID0gY2hhaW5JZDtcbiAgICByZXR1cm4gKF9DSEFJTl9UT19BRERSRVNTRVNfTTIgPSBDSEFJTl9UT19BRERSRVNTRVNfTUFQW2lkXS5zd2FwUm91dGVyMDJBZGRyZXNzKSAhPSBudWxsID8gX0NIQUlOX1RPX0FERFJFU1NFU19NMiA6ICcweDY4YjM0NjU4MzNmYjcyQTcwZWNERjQ4NUUwZTRDN2JEODY2NUZjNDUnO1xuICB9XG4gIHJldHVybiAnJztcbn07XG5cbnZhciBUcmFkZVR5cGU7XG4oZnVuY3Rpb24gKFRyYWRlVHlwZSkge1xuICBUcmFkZVR5cGVbVHJhZGVUeXBlW1wiRVhBQ1RfSU5QVVRcIl0gPSAwXSA9IFwiRVhBQ1RfSU5QVVRcIjtcbiAgVHJhZGVUeXBlW1RyYWRlVHlwZVtcIkVYQUNUX09VVFBVVFwiXSA9IDFdID0gXCJFWEFDVF9PVVRQVVRcIjtcbn0pKFRyYWRlVHlwZSB8fCAoVHJhZGVUeXBlID0ge30pKTtcbnZhciBSb3VuZGluZztcbihmdW5jdGlvbiAoUm91bmRpbmcpIHtcbiAgUm91bmRpbmdbUm91bmRpbmdbXCJST1VORF9ET1dOXCJdID0gMF0gPSBcIlJPVU5EX0RPV05cIjtcbiAgUm91bmRpbmdbUm91bmRpbmdbXCJST1VORF9IQUxGX1VQXCJdID0gMV0gPSBcIlJPVU5EX0hBTEZfVVBcIjtcbiAgUm91bmRpbmdbUm91bmRpbmdbXCJST1VORF9VUFwiXSA9IDJdID0gXCJST1VORF9VUFwiO1xufSkoUm91bmRpbmcgfHwgKFJvdW5kaW5nID0ge30pKTtcbnZhciBNYXhVaW50MjU2ID0gLyojX19QVVJFX18qL0pTQkkuQmlnSW50KCcweGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYnKTtcblxudmFyIF90b1NpZ25pZmljYW50Um91bmRpbiwgX3RvRml4ZWRSb3VuZGluZztcbnZhciBEZWNpbWFsID0gLyojX19QVVJFX18qL3RvRm9ybWF0KF9EZWNpbWFsKTtcbnZhciBCaWcgPSAvKiNfX1BVUkVfXyovdG9Gb3JtYXQoX0JpZyk7XG52YXIgdG9TaWduaWZpY2FudFJvdW5kaW5nID0gKF90b1NpZ25pZmljYW50Um91bmRpbiA9IHt9LCBfdG9TaWduaWZpY2FudFJvdW5kaW5bUm91bmRpbmcuUk9VTkRfRE9XTl0gPSBEZWNpbWFsLlJPVU5EX0RPV04sIF90b1NpZ25pZmljYW50Um91bmRpbltSb3VuZGluZy5ST1VORF9IQUxGX1VQXSA9IERlY2ltYWwuUk9VTkRfSEFMRl9VUCwgX3RvU2lnbmlmaWNhbnRSb3VuZGluW1JvdW5kaW5nLlJPVU5EX1VQXSA9IERlY2ltYWwuUk9VTkRfVVAsIF90b1NpZ25pZmljYW50Um91bmRpbik7XG52YXIgdG9GaXhlZFJvdW5kaW5nID0gKF90b0ZpeGVkUm91bmRpbmcgPSB7fSwgX3RvRml4ZWRSb3VuZGluZ1tSb3VuZGluZy5ST1VORF9ET1dOXSA9IDAsIF90b0ZpeGVkUm91bmRpbmdbUm91bmRpbmcuUk9VTkRfSEFMRl9VUF0gPSAxLCBfdG9GaXhlZFJvdW5kaW5nW1JvdW5kaW5nLlJPVU5EX1VQXSA9IDMsIF90b0ZpeGVkUm91bmRpbmcpO1xudmFyIEZyYWN0aW9uID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gRnJhY3Rpb24obnVtZXJhdG9yLCBkZW5vbWluYXRvcikge1xuICAgIGlmIChkZW5vbWluYXRvciA9PT0gdm9pZCAwKSB7XG4gICAgICBkZW5vbWluYXRvciA9IEpTQkkuQmlnSW50KDEpO1xuICAgIH1cbiAgICB0aGlzLm51bWVyYXRvciA9IEpTQkkuQmlnSW50KG51bWVyYXRvcik7XG4gICAgdGhpcy5kZW5vbWluYXRvciA9IEpTQkkuQmlnSW50KGRlbm9taW5hdG9yKTtcbiAgfVxuICBGcmFjdGlvbi50cnlQYXJzZUZyYWN0aW9uID0gZnVuY3Rpb24gdHJ5UGFyc2VGcmFjdGlvbihmcmFjdGlvbmlzaCkge1xuICAgIGlmIChmcmFjdGlvbmlzaCBpbnN0YW5jZW9mIEpTQkkgfHwgdHlwZW9mIGZyYWN0aW9uaXNoID09PSAnbnVtYmVyJyB8fCB0eXBlb2YgZnJhY3Rpb25pc2ggPT09ICdzdHJpbmcnKSByZXR1cm4gbmV3IEZyYWN0aW9uKGZyYWN0aW9uaXNoKTtcbiAgICBpZiAoJ251bWVyYXRvcicgaW4gZnJhY3Rpb25pc2ggJiYgJ2Rlbm9taW5hdG9yJyBpbiBmcmFjdGlvbmlzaCkgcmV0dXJuIGZyYWN0aW9uaXNoO1xuICAgIHRocm93IG5ldyBFcnJvcignQ291bGQgbm90IHBhcnNlIGZyYWN0aW9uJyk7XG4gIH1cbiAgLy8gcGVyZm9ybXMgZmxvb3IgZGl2aXNpb25cbiAgO1xuICB2YXIgX3Byb3RvID0gRnJhY3Rpb24ucHJvdG90eXBlO1xuICBfcHJvdG8uaW52ZXJ0ID0gZnVuY3Rpb24gaW52ZXJ0KCkge1xuICAgIHJldHVybiBuZXcgRnJhY3Rpb24odGhpcy5kZW5vbWluYXRvciwgdGhpcy5udW1lcmF0b3IpO1xuICB9O1xuICBfcHJvdG8uYWRkID0gZnVuY3Rpb24gYWRkKG90aGVyKSB7XG4gICAgdmFyIG90aGVyUGFyc2VkID0gRnJhY3Rpb24udHJ5UGFyc2VGcmFjdGlvbihvdGhlcik7XG4gICAgaWYgKEpTQkkuZXF1YWwodGhpcy5kZW5vbWluYXRvciwgb3RoZXJQYXJzZWQuZGVub21pbmF0b3IpKSB7XG4gICAgICByZXR1cm4gbmV3IEZyYWN0aW9uKEpTQkkuYWRkKHRoaXMubnVtZXJhdG9yLCBvdGhlclBhcnNlZC5udW1lcmF0b3IpLCB0aGlzLmRlbm9taW5hdG9yKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBGcmFjdGlvbihKU0JJLmFkZChKU0JJLm11bHRpcGx5KHRoaXMubnVtZXJhdG9yLCBvdGhlclBhcnNlZC5kZW5vbWluYXRvciksIEpTQkkubXVsdGlwbHkob3RoZXJQYXJzZWQubnVtZXJhdG9yLCB0aGlzLmRlbm9taW5hdG9yKSksIEpTQkkubXVsdGlwbHkodGhpcy5kZW5vbWluYXRvciwgb3RoZXJQYXJzZWQuZGVub21pbmF0b3IpKTtcbiAgfTtcbiAgX3Byb3RvLnN1YnRyYWN0ID0gZnVuY3Rpb24gc3VidHJhY3Qob3RoZXIpIHtcbiAgICB2YXIgb3RoZXJQYXJzZWQgPSBGcmFjdGlvbi50cnlQYXJzZUZyYWN0aW9uKG90aGVyKTtcbiAgICBpZiAoSlNCSS5lcXVhbCh0aGlzLmRlbm9taW5hdG9yLCBvdGhlclBhcnNlZC5kZW5vbWluYXRvcikpIHtcbiAgICAgIHJldHVybiBuZXcgRnJhY3Rpb24oSlNCSS5zdWJ0cmFjdCh0aGlzLm51bWVyYXRvciwgb3RoZXJQYXJzZWQubnVtZXJhdG9yKSwgdGhpcy5kZW5vbWluYXRvcik7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRnJhY3Rpb24oSlNCSS5zdWJ0cmFjdChKU0JJLm11bHRpcGx5KHRoaXMubnVtZXJhdG9yLCBvdGhlclBhcnNlZC5kZW5vbWluYXRvciksIEpTQkkubXVsdGlwbHkob3RoZXJQYXJzZWQubnVtZXJhdG9yLCB0aGlzLmRlbm9taW5hdG9yKSksIEpTQkkubXVsdGlwbHkodGhpcy5kZW5vbWluYXRvciwgb3RoZXJQYXJzZWQuZGVub21pbmF0b3IpKTtcbiAgfTtcbiAgX3Byb3RvLmxlc3NUaGFuID0gZnVuY3Rpb24gbGVzc1RoYW4ob3RoZXIpIHtcbiAgICB2YXIgb3RoZXJQYXJzZWQgPSBGcmFjdGlvbi50cnlQYXJzZUZyYWN0aW9uKG90aGVyKTtcbiAgICByZXR1cm4gSlNCSS5sZXNzVGhhbihKU0JJLm11bHRpcGx5KHRoaXMubnVtZXJhdG9yLCBvdGhlclBhcnNlZC5kZW5vbWluYXRvciksIEpTQkkubXVsdGlwbHkob3RoZXJQYXJzZWQubnVtZXJhdG9yLCB0aGlzLmRlbm9taW5hdG9yKSk7XG4gIH07XG4gIF9wcm90by5lcXVhbFRvID0gZnVuY3Rpb24gZXF1YWxUbyhvdGhlcikge1xuICAgIHZhciBvdGhlclBhcnNlZCA9IEZyYWN0aW9uLnRyeVBhcnNlRnJhY3Rpb24ob3RoZXIpO1xuICAgIHJldHVybiBKU0JJLmVxdWFsKEpTQkkubXVsdGlwbHkodGhpcy5udW1lcmF0b3IsIG90aGVyUGFyc2VkLmRlbm9taW5hdG9yKSwgSlNCSS5tdWx0aXBseShvdGhlclBhcnNlZC5udW1lcmF0b3IsIHRoaXMuZGVub21pbmF0b3IpKTtcbiAgfTtcbiAgX3Byb3RvLmdyZWF0ZXJUaGFuID0gZnVuY3Rpb24gZ3JlYXRlclRoYW4ob3RoZXIpIHtcbiAgICB2YXIgb3RoZXJQYXJzZWQgPSBGcmFjdGlvbi50cnlQYXJzZUZyYWN0aW9uKG90aGVyKTtcbiAgICByZXR1cm4gSlNCSS5ncmVhdGVyVGhhbihKU0JJLm11bHRpcGx5KHRoaXMubnVtZXJhdG9yLCBvdGhlclBhcnNlZC5kZW5vbWluYXRvciksIEpTQkkubXVsdGlwbHkob3RoZXJQYXJzZWQubnVtZXJhdG9yLCB0aGlzLmRlbm9taW5hdG9yKSk7XG4gIH07XG4gIF9wcm90by5tdWx0aXBseSA9IGZ1bmN0aW9uIG11bHRpcGx5KG90aGVyKSB7XG4gICAgdmFyIG90aGVyUGFyc2VkID0gRnJhY3Rpb24udHJ5UGFyc2VGcmFjdGlvbihvdGhlcik7XG4gICAgcmV0dXJuIG5ldyBGcmFjdGlvbihKU0JJLm11bHRpcGx5KHRoaXMubnVtZXJhdG9yLCBvdGhlclBhcnNlZC5udW1lcmF0b3IpLCBKU0JJLm11bHRpcGx5KHRoaXMuZGVub21pbmF0b3IsIG90aGVyUGFyc2VkLmRlbm9taW5hdG9yKSk7XG4gIH07XG4gIF9wcm90by5kaXZpZGUgPSBmdW5jdGlvbiBkaXZpZGUob3RoZXIpIHtcbiAgICB2YXIgb3RoZXJQYXJzZWQgPSBGcmFjdGlvbi50cnlQYXJzZUZyYWN0aW9uKG90aGVyKTtcbiAgICByZXR1cm4gbmV3IEZyYWN0aW9uKEpTQkkubXVsdGlwbHkodGhpcy5udW1lcmF0b3IsIG90aGVyUGFyc2VkLmRlbm9taW5hdG9yKSwgSlNCSS5tdWx0aXBseSh0aGlzLmRlbm9taW5hdG9yLCBvdGhlclBhcnNlZC5udW1lcmF0b3IpKTtcbiAgfTtcbiAgX3Byb3RvLnRvU2lnbmlmaWNhbnQgPSBmdW5jdGlvbiB0b1NpZ25pZmljYW50KHNpZ25pZmljYW50RGlnaXRzLCBmb3JtYXQsIHJvdW5kaW5nKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdm9pZCAwKSB7XG4gICAgICBmb3JtYXQgPSB7XG4gICAgICAgIGdyb3VwU2VwYXJhdG9yOiAnJ1xuICAgICAgfTtcbiAgICB9XG4gICAgaWYgKHJvdW5kaW5nID09PSB2b2lkIDApIHtcbiAgICAgIHJvdW5kaW5nID0gUm91bmRpbmcuUk9VTkRfSEFMRl9VUDtcbiAgICB9XG4gICAgIU51bWJlci5pc0ludGVnZXIoc2lnbmlmaWNhbnREaWdpdHMpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBzaWduaWZpY2FudERpZ2l0cyArIFwiIGlzIG5vdCBhbiBpbnRlZ2VyLlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgIShzaWduaWZpY2FudERpZ2l0cyA+IDApID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBzaWduaWZpY2FudERpZ2l0cyArIFwiIGlzIG5vdCBwb3NpdGl2ZS5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIERlY2ltYWwuc2V0KHtcbiAgICAgIHByZWNpc2lvbjogc2lnbmlmaWNhbnREaWdpdHMgKyAxLFxuICAgICAgcm91bmRpbmc6IHRvU2lnbmlmaWNhbnRSb3VuZGluZ1tyb3VuZGluZ11cbiAgICB9KTtcbiAgICB2YXIgcXVvdGllbnQgPSBuZXcgRGVjaW1hbCh0aGlzLm51bWVyYXRvci50b1N0cmluZygpKS5kaXYodGhpcy5kZW5vbWluYXRvci50b1N0cmluZygpKS50b1NpZ25pZmljYW50RGlnaXRzKHNpZ25pZmljYW50RGlnaXRzKTtcbiAgICByZXR1cm4gcXVvdGllbnQudG9Gb3JtYXQocXVvdGllbnQuZGVjaW1hbFBsYWNlcygpLCBmb3JtYXQpO1xuICB9O1xuICBfcHJvdG8udG9GaXhlZCA9IGZ1bmN0aW9uIHRvRml4ZWQoZGVjaW1hbFBsYWNlcywgZm9ybWF0LCByb3VuZGluZykge1xuICAgIGlmIChmb3JtYXQgPT09IHZvaWQgMCkge1xuICAgICAgZm9ybWF0ID0ge1xuICAgICAgICBncm91cFNlcGFyYXRvcjogJydcbiAgICAgIH07XG4gICAgfVxuICAgIGlmIChyb3VuZGluZyA9PT0gdm9pZCAwKSB7XG4gICAgICByb3VuZGluZyA9IFJvdW5kaW5nLlJPVU5EX0hBTEZfVVA7XG4gICAgfVxuICAgICFOdW1iZXIuaXNJbnRlZ2VyKGRlY2ltYWxQbGFjZXMpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBkZWNpbWFsUGxhY2VzICsgXCIgaXMgbm90IGFuIGludGVnZXIuXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAhKGRlY2ltYWxQbGFjZXMgPj0gMCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIGRlY2ltYWxQbGFjZXMgKyBcIiBpcyBuZWdhdGl2ZS5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIEJpZy5EUCA9IGRlY2ltYWxQbGFjZXM7XG4gICAgQmlnLlJNID0gdG9GaXhlZFJvdW5kaW5nW3JvdW5kaW5nXTtcbiAgICByZXR1cm4gbmV3IEJpZyh0aGlzLm51bWVyYXRvci50b1N0cmluZygpKS5kaXYodGhpcy5kZW5vbWluYXRvci50b1N0cmluZygpKS50b0Zvcm1hdChkZWNpbWFsUGxhY2VzLCBmb3JtYXQpO1xuICB9XG4gIC8qKlxyXG4gICAqIEhlbHBlciBtZXRob2QgZm9yIGNvbnZlcnRpbmcgYW55IHN1cGVyIGNsYXNzIGJhY2sgdG8gYSBmcmFjdGlvblxyXG4gICAqLztcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhGcmFjdGlvbiwgW3tcbiAgICBrZXk6IFwicXVvdGllbnRcIixcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiBKU0JJLmRpdmlkZSh0aGlzLm51bWVyYXRvciwgdGhpcy5kZW5vbWluYXRvcik7XG4gICAgfVxuICAgIC8vIHJlbWFpbmRlciBhZnRlciBmbG9vciBkaXZpc2lvblxuICB9LCB7XG4gICAga2V5OiBcInJlbWFpbmRlclwiLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIG5ldyBGcmFjdGlvbihKU0JJLnJlbWFpbmRlcih0aGlzLm51bWVyYXRvciwgdGhpcy5kZW5vbWluYXRvciksIHRoaXMuZGVub21pbmF0b3IpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhc0ZyYWN0aW9uXCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gbmV3IEZyYWN0aW9uKHRoaXMubnVtZXJhdG9yLCB0aGlzLmRlbm9taW5hdG9yKTtcbiAgICB9XG4gIH1dKTtcbn0oKTtcblxudmFyIEJpZyQxID0gLyojX19QVVJFX18qL3RvRm9ybWF0KF9CaWcpO1xudmFyIEN1cnJlbmN5QW1vdW50ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfRnJhY3Rpb24pIHtcbiAgZnVuY3Rpb24gQ3VycmVuY3lBbW91bnQoY3VycmVuY3ksIG51bWVyYXRvciwgZGVub21pbmF0b3IpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgX3RoaXMgPSBfRnJhY3Rpb24uY2FsbCh0aGlzLCBudW1lcmF0b3IsIGRlbm9taW5hdG9yKSB8fCB0aGlzO1xuICAgICFKU0JJLmxlc3NUaGFuT3JFcXVhbChfdGhpcy5xdW90aWVudCwgTWF4VWludDI1NikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdBTU9VTlQnKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgX3RoaXMuY3VycmVuY3kgPSBjdXJyZW5jeTtcbiAgICBfdGhpcy5kZWNpbWFsU2NhbGUgPSBKU0JJLmV4cG9uZW50aWF0ZShKU0JJLkJpZ0ludCgxMCksIEpTQkkuQmlnSW50KGN1cnJlbmN5LmRlY2ltYWxzKSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIC8qKlxyXG4gICAqIFJldHVybnMgYSBuZXcgY3VycmVuY3kgYW1vdW50IGluc3RhbmNlIGZyb20gdGhlIHVuaXRsZXNzIGFtb3VudCBvZiB0b2tlbiwgaS5lLiB0aGUgcmF3IGFtb3VudFxyXG4gICAqIEBwYXJhbSBjdXJyZW5jeSB0aGUgY3VycmVuY3kgaW4gdGhlIGFtb3VudFxyXG4gICAqIEBwYXJhbSByYXdBbW91bnQgdGhlIHJhdyB0b2tlbiBvciBldGhlciBhbW91bnRcclxuICAgKi9cbiAgX2luaGVyaXRzTG9vc2UoQ3VycmVuY3lBbW91bnQsIF9GcmFjdGlvbik7XG4gIEN1cnJlbmN5QW1vdW50LmZyb21SYXdBbW91bnQgPSBmdW5jdGlvbiBmcm9tUmF3QW1vdW50KGN1cnJlbmN5LCByYXdBbW91bnQpIHtcbiAgICByZXR1cm4gbmV3IEN1cnJlbmN5QW1vdW50KGN1cnJlbmN5LCByYXdBbW91bnQpO1xuICB9XG4gIC8qKlxyXG4gICAqIENvbnN0cnVjdCBhIGN1cnJlbmN5IGFtb3VudCB3aXRoIGEgZGVub21pbmF0b3IgdGhhdCBpcyBub3QgZXF1YWwgdG8gMVxyXG4gICAqIEBwYXJhbSBjdXJyZW5jeSB0aGUgY3VycmVuY3lcclxuICAgKiBAcGFyYW0gbnVtZXJhdG9yIHRoZSBudW1lcmF0b3Igb2YgdGhlIGZyYWN0aW9uYWwgdG9rZW4gYW1vdW50XHJcbiAgICogQHBhcmFtIGRlbm9taW5hdG9yIHRoZSBkZW5vbWluYXRvciBvZiB0aGUgZnJhY3Rpb25hbCB0b2tlbiBhbW91bnRcclxuICAgKi87XG4gIEN1cnJlbmN5QW1vdW50LmZyb21GcmFjdGlvbmFsQW1vdW50ID0gZnVuY3Rpb24gZnJvbUZyYWN0aW9uYWxBbW91bnQoY3VycmVuY3ksIG51bWVyYXRvciwgZGVub21pbmF0b3IpIHtcbiAgICByZXR1cm4gbmV3IEN1cnJlbmN5QW1vdW50KGN1cnJlbmN5LCBudW1lcmF0b3IsIGRlbm9taW5hdG9yKTtcbiAgfTtcbiAgdmFyIF9wcm90byA9IEN1cnJlbmN5QW1vdW50LnByb3RvdHlwZTtcbiAgX3Byb3RvLmFkZCA9IGZ1bmN0aW9uIGFkZChvdGhlcikge1xuICAgICF0aGlzLmN1cnJlbmN5LmVxdWFscyhvdGhlci5jdXJyZW5jeSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdDVVJSRU5DWScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgYWRkZWQgPSBfRnJhY3Rpb24ucHJvdG90eXBlLmFkZC5jYWxsKHRoaXMsIG90aGVyKTtcbiAgICByZXR1cm4gQ3VycmVuY3lBbW91bnQuZnJvbUZyYWN0aW9uYWxBbW91bnQodGhpcy5jdXJyZW5jeSwgYWRkZWQubnVtZXJhdG9yLCBhZGRlZC5kZW5vbWluYXRvcik7XG4gIH07XG4gIF9wcm90by5zdWJ0cmFjdCA9IGZ1bmN0aW9uIHN1YnRyYWN0KG90aGVyKSB7XG4gICAgIXRoaXMuY3VycmVuY3kuZXF1YWxzKG90aGVyLmN1cnJlbmN5KSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0NVUlJFTkNZJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBzdWJ0cmFjdGVkID0gX0ZyYWN0aW9uLnByb3RvdHlwZS5zdWJ0cmFjdC5jYWxsKHRoaXMsIG90aGVyKTtcbiAgICByZXR1cm4gQ3VycmVuY3lBbW91bnQuZnJvbUZyYWN0aW9uYWxBbW91bnQodGhpcy5jdXJyZW5jeSwgc3VidHJhY3RlZC5udW1lcmF0b3IsIHN1YnRyYWN0ZWQuZGVub21pbmF0b3IpO1xuICB9O1xuICBfcHJvdG8ubXVsdGlwbHkgPSBmdW5jdGlvbiBtdWx0aXBseShvdGhlcikge1xuICAgIHZhciBtdWx0aXBsaWVkID0gX0ZyYWN0aW9uLnByb3RvdHlwZS5tdWx0aXBseS5jYWxsKHRoaXMsIG90aGVyKTtcbiAgICByZXR1cm4gQ3VycmVuY3lBbW91bnQuZnJvbUZyYWN0aW9uYWxBbW91bnQodGhpcy5jdXJyZW5jeSwgbXVsdGlwbGllZC5udW1lcmF0b3IsIG11bHRpcGxpZWQuZGVub21pbmF0b3IpO1xuICB9O1xuICBfcHJvdG8uZGl2aWRlID0gZnVuY3Rpb24gZGl2aWRlKG90aGVyKSB7XG4gICAgdmFyIGRpdmlkZWQgPSBfRnJhY3Rpb24ucHJvdG90eXBlLmRpdmlkZS5jYWxsKHRoaXMsIG90aGVyKTtcbiAgICByZXR1cm4gQ3VycmVuY3lBbW91bnQuZnJvbUZyYWN0aW9uYWxBbW91bnQodGhpcy5jdXJyZW5jeSwgZGl2aWRlZC5udW1lcmF0b3IsIGRpdmlkZWQuZGVub21pbmF0b3IpO1xuICB9O1xuICBfcHJvdG8udG9TaWduaWZpY2FudCA9IGZ1bmN0aW9uIHRvU2lnbmlmaWNhbnQoc2lnbmlmaWNhbnREaWdpdHMsIGZvcm1hdCwgcm91bmRpbmcpIHtcbiAgICBpZiAoc2lnbmlmaWNhbnREaWdpdHMgPT09IHZvaWQgMCkge1xuICAgICAgc2lnbmlmaWNhbnREaWdpdHMgPSA2O1xuICAgIH1cbiAgICBpZiAocm91bmRpbmcgPT09IHZvaWQgMCkge1xuICAgICAgcm91bmRpbmcgPSBSb3VuZGluZy5ST1VORF9ET1dOO1xuICAgIH1cbiAgICByZXR1cm4gX0ZyYWN0aW9uLnByb3RvdHlwZS5kaXZpZGUuY2FsbCh0aGlzLCB0aGlzLmRlY2ltYWxTY2FsZSkudG9TaWduaWZpY2FudChzaWduaWZpY2FudERpZ2l0cywgZm9ybWF0LCByb3VuZGluZyk7XG4gIH07XG4gIF9wcm90by50b0ZpeGVkID0gZnVuY3Rpb24gdG9GaXhlZChkZWNpbWFsUGxhY2VzLCBmb3JtYXQsIHJvdW5kaW5nKSB7XG4gICAgaWYgKGRlY2ltYWxQbGFjZXMgPT09IHZvaWQgMCkge1xuICAgICAgZGVjaW1hbFBsYWNlcyA9IHRoaXMuY3VycmVuY3kuZGVjaW1hbHM7XG4gICAgfVxuICAgIGlmIChyb3VuZGluZyA9PT0gdm9pZCAwKSB7XG4gICAgICByb3VuZGluZyA9IFJvdW5kaW5nLlJPVU5EX0RPV047XG4gICAgfVxuICAgICEoZGVjaW1hbFBsYWNlcyA8PSB0aGlzLmN1cnJlbmN5LmRlY2ltYWxzKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0RFQ0lNQUxTJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHJldHVybiBfRnJhY3Rpb24ucHJvdG90eXBlLmRpdmlkZS5jYWxsKHRoaXMsIHRoaXMuZGVjaW1hbFNjYWxlKS50b0ZpeGVkKGRlY2ltYWxQbGFjZXMsIGZvcm1hdCwgcm91bmRpbmcpO1xuICB9O1xuICBfcHJvdG8udG9FeGFjdCA9IGZ1bmN0aW9uIHRvRXhhY3QoZm9ybWF0KSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdm9pZCAwKSB7XG4gICAgICBmb3JtYXQgPSB7XG4gICAgICAgIGdyb3VwU2VwYXJhdG9yOiAnJ1xuICAgICAgfTtcbiAgICB9XG4gICAgQmlnJDEuRFAgPSB0aGlzLmN1cnJlbmN5LmRlY2ltYWxzO1xuICAgIHJldHVybiBuZXcgQmlnJDEodGhpcy5xdW90aWVudC50b1N0cmluZygpKS5kaXYodGhpcy5kZWNpbWFsU2NhbGUudG9TdHJpbmcoKSkudG9Gb3JtYXQoZm9ybWF0KTtcbiAgfTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhDdXJyZW5jeUFtb3VudCwgW3tcbiAgICBrZXk6IFwid3JhcHBlZFwiLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgaWYgKHRoaXMuY3VycmVuY3kuaXNUb2tlbikgcmV0dXJuIHRoaXM7XG4gICAgICByZXR1cm4gQ3VycmVuY3lBbW91bnQuZnJvbUZyYWN0aW9uYWxBbW91bnQodGhpcy5jdXJyZW5jeS53cmFwcGVkLCB0aGlzLm51bWVyYXRvciwgdGhpcy5kZW5vbWluYXRvcik7XG4gICAgfVxuICB9XSk7XG59KEZyYWN0aW9uKTtcblxudmFyIE9ORV9IVU5EUkVEID0gLyojX19QVVJFX18qL25ldyBGcmFjdGlvbigvKiNfX1BVUkVfXyovSlNCSS5CaWdJbnQoMTAwKSk7XG4vKipcclxuICogQ29udmVydHMgYSBmcmFjdGlvbiB0byBhIHBlcmNlbnRcclxuICogQHBhcmFtIGZyYWN0aW9uIHRoZSBmcmFjdGlvbiB0byBjb252ZXJ0XHJcbiAqL1xuZnVuY3Rpb24gdG9QZXJjZW50KGZyYWN0aW9uKSB7XG4gIHJldHVybiBuZXcgUGVyY2VudChmcmFjdGlvbi5udW1lcmF0b3IsIGZyYWN0aW9uLmRlbm9taW5hdG9yKTtcbn1cbnZhciBQZXJjZW50ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfRnJhY3Rpb24pIHtcbiAgZnVuY3Rpb24gUGVyY2VudCgpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgX3RoaXMgPSBfRnJhY3Rpb24uYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIC8qKlxyXG4gICAgICogVGhpcyBib29sZWFuIHByZXZlbnRzIGEgZnJhY3Rpb24gZnJvbSBiZWluZyBpbnRlcnByZXRlZCBhcyBhIFBlcmNlbnRcclxuICAgICAqL1xuICAgIF90aGlzLmlzUGVyY2VudCA9IHRydWU7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG4gIF9pbmhlcml0c0xvb3NlKFBlcmNlbnQsIF9GcmFjdGlvbik7XG4gIHZhciBfcHJvdG8gPSBQZXJjZW50LnByb3RvdHlwZTtcbiAgX3Byb3RvLmFkZCA9IGZ1bmN0aW9uIGFkZChvdGhlcikge1xuICAgIHJldHVybiB0b1BlcmNlbnQoX0ZyYWN0aW9uLnByb3RvdHlwZS5hZGQuY2FsbCh0aGlzLCBvdGhlcikpO1xuICB9O1xuICBfcHJvdG8uc3VidHJhY3QgPSBmdW5jdGlvbiBzdWJ0cmFjdChvdGhlcikge1xuICAgIHJldHVybiB0b1BlcmNlbnQoX0ZyYWN0aW9uLnByb3RvdHlwZS5zdWJ0cmFjdC5jYWxsKHRoaXMsIG90aGVyKSk7XG4gIH07XG4gIF9wcm90by5tdWx0aXBseSA9IGZ1bmN0aW9uIG11bHRpcGx5KG90aGVyKSB7XG4gICAgcmV0dXJuIHRvUGVyY2VudChfRnJhY3Rpb24ucHJvdG90eXBlLm11bHRpcGx5LmNhbGwodGhpcywgb3RoZXIpKTtcbiAgfTtcbiAgX3Byb3RvLmRpdmlkZSA9IGZ1bmN0aW9uIGRpdmlkZShvdGhlcikge1xuICAgIHJldHVybiB0b1BlcmNlbnQoX0ZyYWN0aW9uLnByb3RvdHlwZS5kaXZpZGUuY2FsbCh0aGlzLCBvdGhlcikpO1xuICB9O1xuICBfcHJvdG8udG9TaWduaWZpY2FudCA9IGZ1bmN0aW9uIHRvU2lnbmlmaWNhbnQoc2lnbmlmaWNhbnREaWdpdHMsIGZvcm1hdCwgcm91bmRpbmcpIHtcbiAgICBpZiAoc2lnbmlmaWNhbnREaWdpdHMgPT09IHZvaWQgMCkge1xuICAgICAgc2lnbmlmaWNhbnREaWdpdHMgPSA1O1xuICAgIH1cbiAgICByZXR1cm4gX0ZyYWN0aW9uLnByb3RvdHlwZS5tdWx0aXBseS5jYWxsKHRoaXMsIE9ORV9IVU5EUkVEKS50b1NpZ25pZmljYW50KHNpZ25pZmljYW50RGlnaXRzLCBmb3JtYXQsIHJvdW5kaW5nKTtcbiAgfTtcbiAgX3Byb3RvLnRvRml4ZWQgPSBmdW5jdGlvbiB0b0ZpeGVkKGRlY2ltYWxQbGFjZXMsIGZvcm1hdCwgcm91bmRpbmcpIHtcbiAgICBpZiAoZGVjaW1hbFBsYWNlcyA9PT0gdm9pZCAwKSB7XG4gICAgICBkZWNpbWFsUGxhY2VzID0gMjtcbiAgICB9XG4gICAgcmV0dXJuIF9GcmFjdGlvbi5wcm90b3R5cGUubXVsdGlwbHkuY2FsbCh0aGlzLCBPTkVfSFVORFJFRCkudG9GaXhlZChkZWNpbWFsUGxhY2VzLCBmb3JtYXQsIHJvdW5kaW5nKTtcbiAgfTtcbiAgcmV0dXJuIFBlcmNlbnQ7XG59KEZyYWN0aW9uKTtcblxudmFyIFByaWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfRnJhY3Rpb24pIHtcbiAgLyoqXHJcbiAgICogQ29uc3RydWN0IGEgcHJpY2UsIGVpdGhlciB3aXRoIHRoZSBiYXNlIGFuZCBxdW90ZSBjdXJyZW5jeSBhbW91bnQsIG9yIHRoZVxyXG4gICAqIEBwYXJhbSBhcmdzXHJcbiAgICovXG4gIGZ1bmN0aW9uIFByaWNlKCkge1xuICAgIHZhciBfdGhpcztcbiAgICB2YXIgYmFzZUN1cnJlbmN5LCBxdW90ZUN1cnJlbmN5LCBkZW5vbWluYXRvciwgbnVtZXJhdG9yO1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG4gICAgaWYgKGFyZ3MubGVuZ3RoID09PSA0KSB7XG4gICAgICBiYXNlQ3VycmVuY3kgPSBhcmdzWzBdO1xuICAgICAgcXVvdGVDdXJyZW5jeSA9IGFyZ3NbMV07XG4gICAgICBkZW5vbWluYXRvciA9IGFyZ3NbMl07XG4gICAgICBudW1lcmF0b3IgPSBhcmdzWzNdO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcmVzdWx0ID0gYXJnc1swXS5xdW90ZUFtb3VudC5kaXZpZGUoYXJnc1swXS5iYXNlQW1vdW50KTtcbiAgICAgIHZhciBfcmVmID0gW2FyZ3NbMF0uYmFzZUFtb3VudC5jdXJyZW5jeSwgYXJnc1swXS5xdW90ZUFtb3VudC5jdXJyZW5jeSwgcmVzdWx0LmRlbm9taW5hdG9yLCByZXN1bHQubnVtZXJhdG9yXTtcbiAgICAgIGJhc2VDdXJyZW5jeSA9IF9yZWZbMF07XG4gICAgICBxdW90ZUN1cnJlbmN5ID0gX3JlZlsxXTtcbiAgICAgIGRlbm9taW5hdG9yID0gX3JlZlsyXTtcbiAgICAgIG51bWVyYXRvciA9IF9yZWZbM107XG4gICAgfVxuICAgIF90aGlzID0gX0ZyYWN0aW9uLmNhbGwodGhpcywgbnVtZXJhdG9yLCBkZW5vbWluYXRvcikgfHwgdGhpcztcbiAgICBfdGhpcy5iYXNlQ3VycmVuY3kgPSBiYXNlQ3VycmVuY3k7XG4gICAgX3RoaXMucXVvdGVDdXJyZW5jeSA9IHF1b3RlQ3VycmVuY3k7XG4gICAgX3RoaXMuc2NhbGFyID0gbmV3IEZyYWN0aW9uKEpTQkkuZXhwb25lbnRpYXRlKEpTQkkuQmlnSW50KDEwKSwgSlNCSS5CaWdJbnQoYmFzZUN1cnJlbmN5LmRlY2ltYWxzKSksIEpTQkkuZXhwb25lbnRpYXRlKEpTQkkuQmlnSW50KDEwKSwgSlNCSS5CaWdJbnQocXVvdGVDdXJyZW5jeS5kZWNpbWFscykpKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgLyoqXHJcbiAgICogRmxpcCB0aGUgcHJpY2UsIHN3aXRjaGluZyB0aGUgYmFzZSBhbmQgcXVvdGUgY3VycmVuY3lcclxuICAgKi9cbiAgX2luaGVyaXRzTG9vc2UoUHJpY2UsIF9GcmFjdGlvbik7XG4gIHZhciBfcHJvdG8gPSBQcmljZS5wcm90b3R5cGU7XG4gIF9wcm90by5pbnZlcnQgPSBmdW5jdGlvbiBpbnZlcnQoKSB7XG4gICAgcmV0dXJuIG5ldyBQcmljZSh0aGlzLnF1b3RlQ3VycmVuY3ksIHRoaXMuYmFzZUN1cnJlbmN5LCB0aGlzLm51bWVyYXRvciwgdGhpcy5kZW5vbWluYXRvcik7XG4gIH1cbiAgLyoqXHJcbiAgICogTXVsdGlwbHkgdGhlIHByaWNlIGJ5IGFub3RoZXIgcHJpY2UsIHJldHVybmluZyBhIG5ldyBwcmljZS4gVGhlIG90aGVyIHByaWNlIG11c3QgaGF2ZSB0aGUgc2FtZSBiYXNlIGN1cnJlbmN5IGFzIHRoaXMgcHJpY2UncyBxdW90ZSBjdXJyZW5jeVxyXG4gICAqIEBwYXJhbSBvdGhlciB0aGUgb3RoZXIgcHJpY2VcclxuICAgKi87XG4gIF9wcm90by5tdWx0aXBseSA9IGZ1bmN0aW9uIG11bHRpcGx5KG90aGVyKSB7XG4gICAgIXRoaXMucXVvdGVDdXJyZW5jeS5lcXVhbHMob3RoZXIuYmFzZUN1cnJlbmN5KSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ1RPS0VOJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBmcmFjdGlvbiA9IF9GcmFjdGlvbi5wcm90b3R5cGUubXVsdGlwbHkuY2FsbCh0aGlzLCBvdGhlcik7XG4gICAgcmV0dXJuIG5ldyBQcmljZSh0aGlzLmJhc2VDdXJyZW5jeSwgb3RoZXIucXVvdGVDdXJyZW5jeSwgZnJhY3Rpb24uZGVub21pbmF0b3IsIGZyYWN0aW9uLm51bWVyYXRvcik7XG4gIH1cbiAgLyoqXHJcbiAgICogUmV0dXJuIHRoZSBhbW91bnQgb2YgcXVvdGUgY3VycmVuY3kgY29ycmVzcG9uZGluZyB0byBhIGdpdmVuIGFtb3VudCBvZiB0aGUgYmFzZSBjdXJyZW5jeVxyXG4gICAqIEBwYXJhbSBjdXJyZW5jeUFtb3VudCB0aGUgYW1vdW50IG9mIGJhc2UgY3VycmVuY3kgdG8gcXVvdGUgYWdhaW5zdCB0aGUgcHJpY2VcclxuICAgKi87XG4gIF9wcm90by5xdW90ZSA9IGZ1bmN0aW9uIHF1b3RlKGN1cnJlbmN5QW1vdW50KSB7XG4gICAgIWN1cnJlbmN5QW1vdW50LmN1cnJlbmN5LmVxdWFscyh0aGlzLmJhc2VDdXJyZW5jeSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdUT0tFTicpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgcmVzdWx0ID0gX0ZyYWN0aW9uLnByb3RvdHlwZS5tdWx0aXBseS5jYWxsKHRoaXMsIGN1cnJlbmN5QW1vdW50KTtcbiAgICByZXR1cm4gQ3VycmVuY3lBbW91bnQuZnJvbUZyYWN0aW9uYWxBbW91bnQodGhpcy5xdW90ZUN1cnJlbmN5LCByZXN1bHQubnVtZXJhdG9yLCByZXN1bHQuZGVub21pbmF0b3IpO1xuICB9XG4gIC8qKlxyXG4gICAqIEdldCB0aGUgdmFsdWUgc2NhbGVkIGJ5IGRlY2ltYWxzIGZvciBmb3JtYXR0aW5nXHJcbiAgICogQHByaXZhdGVcclxuICAgKi87XG4gIF9wcm90by50b1NpZ25pZmljYW50ID0gZnVuY3Rpb24gdG9TaWduaWZpY2FudChzaWduaWZpY2FudERpZ2l0cywgZm9ybWF0LCByb3VuZGluZykge1xuICAgIGlmIChzaWduaWZpY2FudERpZ2l0cyA9PT0gdm9pZCAwKSB7XG4gICAgICBzaWduaWZpY2FudERpZ2l0cyA9IDY7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmFkanVzdGVkRm9yRGVjaW1hbHMudG9TaWduaWZpY2FudChzaWduaWZpY2FudERpZ2l0cywgZm9ybWF0LCByb3VuZGluZyk7XG4gIH07XG4gIF9wcm90by50b0ZpeGVkID0gZnVuY3Rpb24gdG9GaXhlZChkZWNpbWFsUGxhY2VzLCBmb3JtYXQsIHJvdW5kaW5nKSB7XG4gICAgaWYgKGRlY2ltYWxQbGFjZXMgPT09IHZvaWQgMCkge1xuICAgICAgZGVjaW1hbFBsYWNlcyA9IDQ7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmFkanVzdGVkRm9yRGVjaW1hbHMudG9GaXhlZChkZWNpbWFsUGxhY2VzLCBmb3JtYXQsIHJvdW5kaW5nKTtcbiAgfTtcbiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhQcmljZSwgW3tcbiAgICBrZXk6IFwiYWRqdXN0ZWRGb3JEZWNpbWFsc1wiLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIF9GcmFjdGlvbi5wcm90b3R5cGUubXVsdGlwbHkuY2FsbCh0aGlzLCB0aGlzLnNjYWxhcik7XG4gICAgfVxuICB9XSk7XG59KEZyYWN0aW9uKTtcblxuLyoqXHJcbiAqIEEgY3VycmVuY3kgaXMgYW55IGZ1bmdpYmxlIGZpbmFuY2lhbCBpbnN0cnVtZW50LCBpbmNsdWRpbmcgRXRoZXIsIGFsbCBFUkMyMCB0b2tlbnMsIGFuZCBvdGhlciBjaGFpbi1uYXRpdmUgY3VycmVuY2llc1xyXG4gKi9cbnZhciBCYXNlQ3VycmVuY3kgPVxuLyoqXHJcbiAqIENvbnN0cnVjdHMgYW4gaW5zdGFuY2Ugb2YgdGhlIGJhc2UgY2xhc3MgYEJhc2VDdXJyZW5jeWAuXHJcbiAqIEBwYXJhbSBjaGFpbklkIHRoZSBjaGFpbiBJRCBvbiB3aGljaCB0aGlzIGN1cnJlbmN5IHJlc2lkZXNcclxuICogQHBhcmFtIGRlY2ltYWxzIGRlY2ltYWxzIG9mIHRoZSBjdXJyZW5jeVxyXG4gKiBAcGFyYW0gc3ltYm9sIHN5bWJvbCBvZiB0aGUgY3VycmVuY3lcclxuICogQHBhcmFtIG5hbWUgb2YgdGhlIGN1cnJlbmN5XHJcbiAqL1xuZnVuY3Rpb24gQmFzZUN1cnJlbmN5KGNoYWluSWQsIGRlY2ltYWxzLCBzeW1ib2wsIG5hbWUpIHtcbiAgIU51bWJlci5pc1NhZmVJbnRlZ2VyKGNoYWluSWQpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQ0hBSU5fSUQnKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICEoZGVjaW1hbHMgPj0gMCAmJiBkZWNpbWFscyA8IDI1NSAmJiBOdW1iZXIuaXNJbnRlZ2VyKGRlY2ltYWxzKSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdERUNJTUFMUycpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdGhpcy5jaGFpbklkID0gY2hhaW5JZDtcbiAgdGhpcy5kZWNpbWFscyA9IGRlY2ltYWxzO1xuICB0aGlzLnN5bWJvbCA9IHN5bWJvbDtcbiAgdGhpcy5uYW1lID0gbmFtZTtcbn07XG5cbi8qKlxyXG4gKiBSZXByZXNlbnRzIHRoZSBuYXRpdmUgY3VycmVuY3kgb2YgdGhlIGNoYWluIG9uIHdoaWNoIGl0IHJlc2lkZXMsIGUuZy5cclxuICovXG52YXIgTmF0aXZlQ3VycmVuY3kgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9CYXNlQ3VycmVuY3kpIHtcbiAgZnVuY3Rpb24gTmF0aXZlQ3VycmVuY3koKSB7XG4gICAgdmFyIF90aGlzO1xuICAgIF90aGlzID0gX0Jhc2VDdXJyZW5jeS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgX3RoaXMuaXNOYXRpdmUgPSB0cnVlO1xuICAgIF90aGlzLmlzVG9rZW4gPSBmYWxzZTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgX2luaGVyaXRzTG9vc2UoTmF0aXZlQ3VycmVuY3ksIF9CYXNlQ3VycmVuY3kpO1xuICByZXR1cm4gTmF0aXZlQ3VycmVuY3k7XG59KEJhc2VDdXJyZW5jeSk7XG5cbi8qKlxyXG4gKiBWYWxpZGF0ZXMgYW4gYWRkcmVzcyBhbmQgcmV0dXJucyB0aGUgcGFyc2VkIChjaGVja3N1bW1lZCkgdmVyc2lvbiBvZiB0aGF0IGFkZHJlc3NcclxuICogQHBhcmFtIGFkZHJlc3MgdGhlIHVuY2hlY2tzdW1tZWQgaGV4IGFkZHJlc3NcclxuICovXG5mdW5jdGlvbiB2YWxpZGF0ZUFuZFBhcnNlQWRkcmVzcyhhZGRyZXNzKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGdldEFkZHJlc3MoYWRkcmVzcyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGFkZHJlc3MgKyBcIiBpcyBub3QgYSB2YWxpZCBhZGRyZXNzLlwiKTtcbiAgfVxufVxuLy8gQ2hlY2tzIGEgc3RyaW5nIHN0YXJ0cyB3aXRoIDB4LCBpcyA0MiBjaGFyYWN0ZXJzIGxvbmcgYW5kIGNvbnRhaW5zIG9ubHkgaGV4IGNoYXJhY3RlcnMgYWZ0ZXIgMHhcbnZhciBzdGFydHNXaXRoMHhMZW40MkhleFJlZ2V4ID0gL14weFswLTlhLWZBLUZdezQwfSQvO1xuLyoqXHJcbiAqIENoZWNrcyBpZiBhbiBhZGRyZXNzIGlzIHZhbGlkIGJ5IGNoZWNraW5nIDB4IHByZWZpeCwgbGVuZ3RoID09PSA0MiBhbmQgaGV4IGVuY29kaW5nLlxyXG4gKiBAcGFyYW0gYWRkcmVzcyB0aGUgdW5jaGVja3N1bW1lZCBoZXggYWRkcmVzc1xyXG4gKi9cbmZ1bmN0aW9uIGNoZWNrVmFsaWRBZGRyZXNzKGFkZHJlc3MpIHtcbiAgaWYgKHN0YXJ0c1dpdGgweExlbjQySGV4UmVnZXgudGVzdChhZGRyZXNzKSkge1xuICAgIHJldHVybiBhZGRyZXNzO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcihhZGRyZXNzICsgXCIgaXMgbm90IGEgdmFsaWQgYWRkcmVzcy5cIik7XG59XG5cbi8qKlxyXG4gKiBSZXByZXNlbnRzIGFuIEVSQzIwIHRva2VuIHdpdGggYSB1bmlxdWUgYWRkcmVzcyBhbmQgc29tZSBtZXRhZGF0YS5cclxuICovXG52YXIgVG9rZW4gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9CYXNlQ3VycmVuY3kpIHtcbiAgLyoqXHJcbiAgICpcclxuICAgKiBAcGFyYW0gY2hhaW5JZCB7QGxpbmsgQmFzZUN1cnJlbmN5I2NoYWluSWR9XHJcbiAgICogQHBhcmFtIGFkZHJlc3MgVGhlIGNvbnRyYWN0IGFkZHJlc3Mgb24gdGhlIGNoYWluIG9uIHdoaWNoIHRoaXMgdG9rZW4gbGl2ZXNcclxuICAgKiBAcGFyYW0gZGVjaW1hbHMge0BsaW5rIEJhc2VDdXJyZW5jeSNkZWNpbWFsc31cclxuICAgKiBAcGFyYW0gc3ltYm9sIHtAbGluayBCYXNlQ3VycmVuY3kjc3ltYm9sfVxyXG4gICAqIEBwYXJhbSBuYW1lIHtAbGluayBCYXNlQ3VycmVuY3kjbmFtZX1cclxuICAgKiBAcGFyYW0gYnlwYXNzQ2hlY2tzdW0gSWYgdHJ1ZSBpdCBvbmx5IGNoZWNrcyBmb3IgbGVuZ3RoID09PSA0Miwgc3RhcnRzV2l0aCAweCBhbmQgY29udGFpbnMgb25seSBoZXggY2hhcmFjdGVyc1xyXG4gICAqIEBwYXJhbSBidXlGZWVCcHMgQnV5IGZlZSB0YXggZm9yIEZPVCB0b2tlbnMsIGluIGJhc2lzIHBvaW50c1xyXG4gICAqIEBwYXJhbSBzZWxsRmVlQnBzIFNlbGwgZmVlIHRheCBmb3IgRk9UIHRva2VucywgaW4gYmFzaXMgcG9pbnRzXHJcbiAgICovXG4gIGZ1bmN0aW9uIFRva2VuKGNoYWluSWQsIGFkZHJlc3MsIGRlY2ltYWxzLCBzeW1ib2wsIG5hbWUsIGJ5cGFzc0NoZWNrc3VtLCBidXlGZWVCcHMsIHNlbGxGZWVCcHMpIHtcbiAgICB2YXIgX3RoaXM7XG4gICAgX3RoaXMgPSBfQmFzZUN1cnJlbmN5LmNhbGwodGhpcywgY2hhaW5JZCwgZGVjaW1hbHMsIHN5bWJvbCwgbmFtZSkgfHwgdGhpcztcbiAgICBfdGhpcy5pc05hdGl2ZSA9IGZhbHNlO1xuICAgIF90aGlzLmlzVG9rZW4gPSB0cnVlO1xuICAgIGlmIChieXBhc3NDaGVja3N1bSkge1xuICAgICAgX3RoaXMuYWRkcmVzcyA9IGNoZWNrVmFsaWRBZGRyZXNzKGFkZHJlc3MpO1xuICAgIH0gZWxzZSB7XG4gICAgICBfdGhpcy5hZGRyZXNzID0gdmFsaWRhdGVBbmRQYXJzZUFkZHJlc3MoYWRkcmVzcyk7XG4gICAgfVxuICAgIGlmIChidXlGZWVCcHMpIHtcbiAgICAgICFidXlGZWVCcHMuZ3RlKEJpZ051bWJlci5mcm9tKDApKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ05PTi1ORUdBVElWRSBGT1QgRkVFUycpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB9XG4gICAgaWYgKHNlbGxGZWVCcHMpIHtcbiAgICAgICFzZWxsRmVlQnBzLmd0ZShCaWdOdW1iZXIuZnJvbSgwKSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdOT04tTkVHQVRJVkUgRk9UIEZFRVMnKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgfVxuICAgIF90aGlzLmJ1eUZlZUJwcyA9IGJ1eUZlZUJwcztcbiAgICBfdGhpcy5zZWxsRmVlQnBzID0gc2VsbEZlZUJwcztcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cbiAgLyoqXHJcbiAgICogUmV0dXJucyB0cnVlIGlmIHRoZSB0d28gdG9rZW5zIGFyZSBlcXVpdmFsZW50LCBpLmUuIGhhdmUgdGhlIHNhbWUgY2hhaW5JZCBhbmQgYWRkcmVzcy5cclxuICAgKiBAcGFyYW0gb3RoZXIgb3RoZXIgdG9rZW4gdG8gY29tcGFyZVxyXG4gICAqL1xuICBfaW5oZXJpdHNMb29zZShUb2tlbiwgX0Jhc2VDdXJyZW5jeSk7XG4gIHZhciBfcHJvdG8gPSBUb2tlbi5wcm90b3R5cGU7XG4gIF9wcm90by5lcXVhbHMgPSBmdW5jdGlvbiBlcXVhbHMob3RoZXIpIHtcbiAgICByZXR1cm4gb3RoZXIuaXNUb2tlbiAmJiB0aGlzLmNoYWluSWQgPT09IG90aGVyLmNoYWluSWQgJiYgdGhpcy5hZGRyZXNzLnRvTG93ZXJDYXNlKCkgPT09IG90aGVyLmFkZHJlc3MudG9Mb3dlckNhc2UoKTtcbiAgfVxuICAvKipcclxuICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIGFkZHJlc3Mgb2YgdGhpcyB0b2tlbiBzb3J0cyBiZWZvcmUgdGhlIGFkZHJlc3Mgb2YgdGhlIG90aGVyIHRva2VuXHJcbiAgICogQHBhcmFtIG90aGVyIG90aGVyIHRva2VuIHRvIGNvbXBhcmVcclxuICAgKiBAdGhyb3dzIGlmIHRoZSB0b2tlbnMgaGF2ZSB0aGUgc2FtZSBhZGRyZXNzXHJcbiAgICogQHRocm93cyBpZiB0aGUgdG9rZW5zIGFyZSBvbiBkaWZmZXJlbnQgY2hhaW5zXHJcbiAgICovO1xuICBfcHJvdG8uc29ydHNCZWZvcmUgPSBmdW5jdGlvbiBzb3J0c0JlZm9yZShvdGhlcikge1xuICAgICEodGhpcy5jaGFpbklkID09PSBvdGhlci5jaGFpbklkKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0NIQUlOX0lEUycpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAhKHRoaXMuYWRkcmVzcy50b0xvd2VyQ2FzZSgpICE9PSBvdGhlci5hZGRyZXNzLnRvTG93ZXJDYXNlKCkpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQUREUkVTU0VTJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHJldHVybiB0aGlzLmFkZHJlc3MudG9Mb3dlckNhc2UoKSA8IG90aGVyLmFkZHJlc3MudG9Mb3dlckNhc2UoKTtcbiAgfVxuICAvKipcclxuICAgKiBSZXR1cm4gdGhpcyB0b2tlbiwgd2hpY2ggZG9lcyBub3QgbmVlZCB0byBiZSB3cmFwcGVkXHJcbiAgICovO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKFRva2VuLCBbe1xuICAgIGtleTogXCJ3cmFwcGVkXCIsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH1dKTtcbn0oQmFzZUN1cnJlbmN5KTtcblxuLyoqXHJcbiAqIEtub3duIFdFVEg5IGltcGxlbWVudGF0aW9uIGFkZHJlc3NlcywgdXNlZCBpbiBvdXIgaW1wbGVtZW50YXRpb24gb2YgRXRoZXIjd3JhcHBlZFxyXG4gKi9cbnZhciBXRVRIOSA9IHtcbiAgMTogLyojX19QVVJFX18qL25ldyBUb2tlbigxLCAnMHhDMDJhYUEzOWIyMjNGRThEMEEwZTVDNEYyN2VBRDkwODNDNzU2Q2MyJywgMTgsICdXRVRIJywgJ1dyYXBwZWQgRXRoZXInKSxcbiAgMTExNTUxMTE6IC8qI19fUFVSRV9fKi9uZXcgVG9rZW4oMTExNTUxMTEsICcweGZGZjk5NzY3ODJkNDZDQzA1NjMwRDFmNmVCQWIxOGIyMzI0ZDZCMTQnLCAxOCwgJ1dFVEgnLCAnV3JhcHBlZCBFdGhlcicpLFxuICAzOiAvKiNfX1BVUkVfXyovbmV3IFRva2VuKDMsICcweGM3Nzg0MTdFMDYzMTQxMTM5RmNlMDEwOTgyNzgwMTQwQWEwY0Q1QWInLCAxOCwgJ1dFVEgnLCAnV3JhcHBlZCBFdGhlcicpLFxuICA0OiAvKiNfX1BVUkVfXyovbmV3IFRva2VuKDQsICcweGM3Nzg0MTdFMDYzMTQxMTM5RmNlMDEwOTgyNzgwMTQwQWEwY0Q1QWInLCAxOCwgJ1dFVEgnLCAnV3JhcHBlZCBFdGhlcicpLFxuICA1OiAvKiNfX1BVUkVfXyovbmV3IFRva2VuKDUsICcweEI0RkJGMjcxMTQzRjRGQmY3QjkxQTVkZWQzMTgwNWU0MmIyMjA4ZDYnLCAxOCwgJ1dFVEgnLCAnV3JhcHBlZCBFdGhlcicpLFxuICA0MjogLyojX19QVVJFX18qL25ldyBUb2tlbig0MiwgJzB4ZDBBMUUzNTk4MTEzMjJkOTc5OTFFMDNmODYzYTBDMzBDMmNGMDI5QycsIDE4LCAnV0VUSCcsICdXcmFwcGVkIEV0aGVyJyksXG4gIDEwOiAvKiNfX1BVUkVfXyovbmV3IFRva2VuKDEwLCAnMHg0MjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA2JywgMTgsICdXRVRIJywgJ1dyYXBwZWQgRXRoZXInKSxcbiAgNjk6IC8qI19fUFVSRV9fKi9uZXcgVG9rZW4oNjksICcweDQyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDYnLCAxOCwgJ1dFVEgnLCAnV3JhcHBlZCBFdGhlcicpLFxuICAxMTE1NTQyMDogLyojX19QVVJFX18qL25ldyBUb2tlbigxMTE1NTQyMCwgJzB4NDIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNicsIDE4LCAnV0VUSCcsICdXcmFwcGVkIEV0aGVyJyksXG4gIDQyMTYxOiAvKiNfX1BVUkVfXyovbmV3IFRva2VuKDQyMTYxLCAnMHg4MmFGNDk0NDdEOGEwN2UzYmQ5NUJEMGQ1NmYzNTI0MTUyM2ZCYWIxJywgMTgsICdXRVRIJywgJ1dyYXBwZWQgRXRoZXInKSxcbiAgNDIxNjExOiAvKiNfX1BVUkVfXyovbmV3IFRva2VuKDQyMTYxMSwgJzB4QjQ3ZTZBNWY4YjMzYjNGMTc2MDNDODNhMDUzNUE5ZGNEN0UzMjY4MScsIDE4LCAnV0VUSCcsICdXcmFwcGVkIEV0aGVyJyksXG4gIDQyMTYxNDogLyojX19QVVJFX18qL25ldyBUb2tlbig0MjE2MTQsICcweDk4MEI2MkRhODNlRmYzRDQ1NzZDNjQ3OTkzYjBjMUQ3ZmFmMTdjNzMnLCAxOCwgJ1dFVEgnLCAnV3JhcHBlZCBFdGhlcicpLFxuICA4NDUzOiAvKiNfX1BVUkVfXyovbmV3IFRva2VuKDg0NTMsICcweDQyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDYnLCAxOCwgJ1dFVEgnLCAnV3JhcHBlZCBFdGhlcicpLFxuICA4NDUzMjogLyojX19QVVJFX18qL25ldyBUb2tlbig4NDUzMiwgJzB4NDIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNicsIDE4LCAnV0VUSCcsICdXcmFwcGVkIEV0aGVyJyksXG4gIDU2OiAvKiNfX1BVUkVfXyovbmV3IFRva2VuKDU2LCAnMHhiYjRDZEI5Q0JkMzZCMDFiRDFjQmFFQkYyRGUwOGQ5MTczYmMwOTVjJywgMTgsICdXQk5CJywgJ1dyYXBwZWQgQk5CJyksXG4gIDEzNzogLyojX19QVVJFX18qL25ldyBUb2tlbigxMzcsICcweDBkNTAwQjFkOEU4ZUYzMUUyMUM5OWQxRGI5QTY0NDRkM0FEZjEyNzAnLCAxOCwgJ1dNQVRJQycsICdXcmFwcGVkIE1BVElDJyksXG4gIDQzMTE0OiAvKiNfX1BVUkVfXyovbmV3IFRva2VuKDQzMTE0LCAnMHhCMzFmNjZBQTNDMWU3ODUzNjNGMDg3NUExQjc0RTI3Yjg1RkQ2NmM3JywgMTgsICdXQVZBWCcsICdXcmFwcGVkIEFWQVgnKSxcbiAgNzc3Nzc3NzogLyojX19QVVJFX18qL25ldyBUb2tlbig3Nzc3Nzc3LCAnMHg0MjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA2JywgMTgsICdXRVRIJywgJ1dyYXBwZWQgRXRoZXInKSxcbiAgODE0NTc6IC8qI19fUFVSRV9fKi9uZXcgVG9rZW4oODE0NTcsICcweDQzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDQnLCAxOCwgJ1dFVEgnLCAnV3JhcHBlZCBFdGhlcicpLFxuICAzMjQ6IC8qI19fUFVSRV9fKi9uZXcgVG9rZW4oMzI0LCAnMHg1QUVhNTc3NTk1OWZCQzI1NTdDYzg3ODliQzFiZjkwQTIzOUQ5YTkxJywgMTgsICdXRVRIJywgJ1dyYXBwZWQgRXRoZXInKSxcbiAgNDgwOiAvKiNfX1BVUkVfXyovbmV3IFRva2VuKDQ4MCwgJzB4NDIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNicsIDE4LCAnV0VUSCcsICdXcmFwcGVkIEV0aGVyJyksXG4gIDEzMDE6IC8qI19fUFVSRV9fKi9uZXcgVG9rZW4oMTMwMSwgJzB4NDIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNicsIDE4LCAnV0VUSCcsICdXcmFwcGVkIEV0aGVyJyksXG4gIDEzMDogLyojX19QVVJFX18qL25ldyBUb2tlbigxMzAsICcweDQyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDYnLCAxOCwgJ1dFVEgnLCAnV3JhcHBlZCBFdGhlcicpLFxuICAxMDE0MzogLyojX19QVVJFX18qL25ldyBUb2tlbigxMDE0MywgJzB4NzYwQWZFODZlNWRlNWZhMEVlNTQyZmM3QjdCNzEzZTFjNTQyNTcwMScsIDE4LCAnV01PTicsICdXcmFwcGVkIE1vbmFkJyksXG4gIDE4Njg6IC8qI19fUFVSRV9fKi9uZXcgVG9rZW4oMTg2OCwgJzB4NDIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNicsIDE4LCAnV0VUSCcsICdXcmFwcGVkIEV0aGVyJylcbn07XG5cbi8qKlxyXG4gKiBFdGhlciBpcyB0aGUgbWFpbiB1c2FnZSBvZiBhICduYXRpdmUnIGN1cnJlbmN5LCBpLmUuIGZvciBFdGhlcmV1bSBtYWlubmV0IGFuZCBhbGwgdGVzdG5ldHNcclxuICovXG52YXIgRXRoZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9OYXRpdmVDdXJyZW5jeSkge1xuICBmdW5jdGlvbiBFdGhlcihjaGFpbklkKSB7XG4gICAgcmV0dXJuIF9OYXRpdmVDdXJyZW5jeS5jYWxsKHRoaXMsIGNoYWluSWQsIDE4LCAnRVRIJywgJ0V0aGVyJykgfHwgdGhpcztcbiAgfVxuICBfaW5oZXJpdHNMb29zZShFdGhlciwgX05hdGl2ZUN1cnJlbmN5KTtcbiAgRXRoZXIub25DaGFpbiA9IGZ1bmN0aW9uIG9uQ2hhaW4oY2hhaW5JZCkge1xuICAgIHZhciBfdGhpcyRfZXRoZXJDYWNoZSRjaGE7XG4gICAgcmV0dXJuIChfdGhpcyRfZXRoZXJDYWNoZSRjaGEgPSB0aGlzLl9ldGhlckNhY2hlW2NoYWluSWRdKSAhPSBudWxsID8gX3RoaXMkX2V0aGVyQ2FjaGUkY2hhIDogdGhpcy5fZXRoZXJDYWNoZVtjaGFpbklkXSA9IG5ldyBFdGhlcihjaGFpbklkKTtcbiAgfTtcbiAgdmFyIF9wcm90byA9IEV0aGVyLnByb3RvdHlwZTtcbiAgX3Byb3RvLmVxdWFscyA9IGZ1bmN0aW9uIGVxdWFscyhvdGhlcikge1xuICAgIHJldHVybiBvdGhlci5pc05hdGl2ZSAmJiBvdGhlci5jaGFpbklkID09PSB0aGlzLmNoYWluSWQ7XG4gIH07XG4gIHJldHVybiBfY3JlYXRlQ2xhc3MoRXRoZXIsIFt7XG4gICAga2V5OiBcIndyYXBwZWRcIixcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHZhciB3ZXRoOSA9IFdFVEg5W3RoaXMuY2hhaW5JZF07XG4gICAgICAhISF3ZXRoOSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ1dSQVBQRUQnKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICByZXR1cm4gd2V0aDk7XG4gICAgfVxuICB9XSk7XG59KE5hdGl2ZUN1cnJlbmN5KTtcbkV0aGVyLl9ldGhlckNhY2hlID0ge307XG5cbi8qKlxyXG4gKiBSZXR1cm5zIHRoZSBwZXJjZW50IGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgbWlkIHByaWNlIGFuZCB0aGUgZXhlY3V0aW9uIHByaWNlLCBpLmUuIHByaWNlIGltcGFjdC5cclxuICogQHBhcmFtIG1pZFByaWNlIG1pZCBwcmljZSBiZWZvcmUgdGhlIHRyYWRlXHJcbiAqIEBwYXJhbSBpbnB1dEFtb3VudCB0aGUgaW5wdXQgYW1vdW50IG9mIHRoZSB0cmFkZVxyXG4gKiBAcGFyYW0gb3V0cHV0QW1vdW50IHRoZSBvdXRwdXQgYW1vdW50IG9mIHRoZSB0cmFkZVxyXG4gKi9cbmZ1bmN0aW9uIGNvbXB1dGVQcmljZUltcGFjdChtaWRQcmljZSwgaW5wdXRBbW91bnQsIG91dHB1dEFtb3VudCkge1xuICB2YXIgcXVvdGVkT3V0cHV0QW1vdW50ID0gbWlkUHJpY2UucXVvdGUoaW5wdXRBbW91bnQpO1xuICAvLyBjYWxjdWxhdGUgcHJpY2UgaW1wYWN0IDo9IChleGFjdFF1b3RlIC0gb3V0cHV0QW1vdW50KSAvIGV4YWN0UXVvdGVcbiAgdmFyIHByaWNlSW1wYWN0ID0gcXVvdGVkT3V0cHV0QW1vdW50LnN1YnRyYWN0KG91dHB1dEFtb3VudCkuZGl2aWRlKHF1b3RlZE91dHB1dEFtb3VudCk7XG4gIHJldHVybiBuZXcgUGVyY2VudChwcmljZUltcGFjdC5udW1lcmF0b3IsIHByaWNlSW1wYWN0LmRlbm9taW5hdG9yKTtcbn1cblxuZnVuY3Rpb24gY29tcHV0ZVprc3luY0NyZWF0ZTJBZGRyZXNzKHNlbmRlciwgYnl0ZWNvZGVIYXNoLCBzYWx0LCBpbnB1dCkge1xuICBpZiAoaW5wdXQgPT09IHZvaWQgMCkge1xuICAgIGlucHV0ID0gJzB4JztcbiAgfVxuICB2YXIgcHJlZml4ID0ga2VjY2FrMjU2KHRvVXRmOEJ5dGVzKCd6a3N5bmNDcmVhdGUyJykpO1xuICB2YXIgaW5wdXRIYXNoID0ga2VjY2FrMjU2KGlucHV0KTtcbiAgdmFyIGFkZHJlc3NCeXRlcyA9IGtlY2NhazI1Nihjb25jYXQoW3ByZWZpeCwgaGV4WmVyb1BhZChzZW5kZXIsIDMyKSwgc2FsdCwgYnl0ZWNvZGVIYXNoLCBpbnB1dEhhc2hdKSkuc2xpY2UoMjYpO1xuICByZXR1cm4gZ2V0QWRkcmVzcyhhZGRyZXNzQnl0ZXMpO1xufVxuXG4vLyBnaXZlbiBhbiBhcnJheSBvZiBpdGVtcyBzb3J0ZWQgYnkgYGNvbXBhcmF0b3JgLCBpbnNlcnQgYW4gaXRlbSBpbnRvIGl0cyBzb3J0IGluZGV4IGFuZCBjb25zdHJhaW4gdGhlIHNpemUgdG9cbi8vIGBtYXhTaXplYCBieSByZW1vdmluZyB0aGUgbGFzdCBpdGVtXG5mdW5jdGlvbiBzb3J0ZWRJbnNlcnQoaXRlbXMsIGFkZCwgbWF4U2l6ZSwgY29tcGFyYXRvcikge1xuICAhKG1heFNpemUgPiAwKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ01BWF9TSVpFX1pFUk8nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIC8vIHRoaXMgaXMgYW4gaW52YXJpYW50IGJlY2F1c2UgdGhlIGludGVyZmFjZSBjYW5ub3QgcmV0dXJuIG11bHRpcGxlIHJlbW92ZWQgaXRlbXMgaWYgaXRlbXMubGVuZ3RoIGV4Y2VlZHMgbWF4U2l6ZVxuICAhKGl0ZW1zLmxlbmd0aCA8PSBtYXhTaXplKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0lURU1TX1NJWkUnKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIC8vIHNob3J0IGNpcmN1aXQgZmlyc3QgaXRlbSBhZGRcbiAgaWYgKGl0ZW1zLmxlbmd0aCA9PT0gMCkge1xuICAgIGl0ZW1zLnB1c2goYWRkKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfSBlbHNlIHtcbiAgICB2YXIgaXNGdWxsID0gaXRlbXMubGVuZ3RoID09PSBtYXhTaXplO1xuICAgIC8vIHNob3J0IGNpcmN1aXQgaWYgZnVsbCBhbmQgdGhlIGFkZGl0aW9uYWwgaXRlbSBkb2VzIG5vdCBjb21lIGJlZm9yZSB0aGUgbGFzdCBpdGVtXG4gICAgaWYgKGlzRnVsbCAmJiBjb21wYXJhdG9yKGl0ZW1zW2l0ZW1zLmxlbmd0aCAtIDFdLCBhZGQpIDw9IDApIHtcbiAgICAgIHJldHVybiBhZGQ7XG4gICAgfVxuICAgIHZhciBsbyA9IDAsXG4gICAgICBoaSA9IGl0ZW1zLmxlbmd0aDtcbiAgICB3aGlsZSAobG8gPCBoaSkge1xuICAgICAgdmFyIG1pZCA9IGxvICsgaGkgPj4+IDE7XG4gICAgICBpZiAoY29tcGFyYXRvcihpdGVtc1ttaWRdLCBhZGQpIDw9IDApIHtcbiAgICAgICAgbG8gPSBtaWQgKyAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaGkgPSBtaWQ7XG4gICAgICB9XG4gICAgfVxuICAgIGl0ZW1zLnNwbGljZShsbywgMCwgYWRkKTtcbiAgICByZXR1cm4gaXNGdWxsID8gaXRlbXMucG9wKCkgOiBudWxsO1xuICB9XG59XG5cbnZhciBNQVhfU0FGRV9JTlRFR0VSID0gLyojX19QVVJFX18qL0pTQkkuQmlnSW50KE51bWJlci5NQVhfU0FGRV9JTlRFR0VSKTtcbnZhciBaRVJPID0gLyojX19QVVJFX18qL0pTQkkuQmlnSW50KDApO1xudmFyIE9ORSA9IC8qI19fUFVSRV9fKi9KU0JJLkJpZ0ludCgxKTtcbnZhciBUV08gPSAvKiNfX1BVUkVfXyovSlNCSS5CaWdJbnQoMik7XG4vKipcclxuICogQ29tcHV0ZXMgZmxvb3Ioc3FydCh2YWx1ZSkpXHJcbiAqIEBwYXJhbSB2YWx1ZSB0aGUgdmFsdWUgZm9yIHdoaWNoIHRvIGNvbXB1dGUgdGhlIHNxdWFyZSByb290LCByb3VuZGVkIGRvd25cclxuICovXG5mdW5jdGlvbiBzcXJ0KHZhbHVlKSB7XG4gICFKU0JJLmdyZWF0ZXJUaGFuT3JFcXVhbCh2YWx1ZSwgWkVSTykgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdORUdBVElWRScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgLy8gcmVseSBvbiBidWlsdCBpbiBzcXJ0IGlmIHBvc3NpYmxlXG4gIGlmIChKU0JJLmxlc3NUaGFuKHZhbHVlLCBNQVhfU0FGRV9JTlRFR0VSKSkge1xuICAgIHJldHVybiBKU0JJLkJpZ0ludChNYXRoLmZsb29yKE1hdGguc3FydChKU0JJLnRvTnVtYmVyKHZhbHVlKSkpKTtcbiAgfVxuICB2YXIgejtcbiAgdmFyIHg7XG4gIHogPSB2YWx1ZTtcbiAgeCA9IEpTQkkuYWRkKEpTQkkuZGl2aWRlKHZhbHVlLCBUV08pLCBPTkUpO1xuICB3aGlsZSAoSlNCSS5sZXNzVGhhbih4LCB6KSkge1xuICAgIHogPSB4O1xuICAgIHggPSBKU0JJLmRpdmlkZShKU0JJLmFkZChKU0JJLmRpdmlkZSh2YWx1ZSwgeCksIHgpLCBUV08pO1xuICB9XG4gIHJldHVybiB6O1xufVxuXG5leHBvcnQgeyBBUkdFTlRfV0FMTEVUX0RFVEVDVE9SX0FERFJFU1MsIENIQUlOX1RPX0FERFJFU1NFU19NQVAsIENoYWluSWQsIEN1cnJlbmN5QW1vdW50LCBFTlNfUkVHSVNUUkFSX0FERFJFU1NFUywgRXRoZXIsIEZyYWN0aW9uLCBHT1ZFUk5BTkNFX0FMUEhBX1YwX0FERFJFU1NFUywgR09WRVJOQU5DRV9BTFBIQV9WMV9BRERSRVNTRVMsIEdPVkVSTkFOQ0VfQlJBVk9fQUREUkVTU0VTLCBNRVJLTEVfRElTVFJJQlVUT1JfQUREUkVTUywgTUlYRURfUk9VVEVfUVVPVEVSX1YxX0FERFJFU1NFUywgTVVMVElDQUxMX0FERFJFU1NFUywgTWF4VWludDI1NiwgTk9ORlVOR0lCTEVfUE9TSVRJT05fTUFOQUdFUl9BRERSRVNTRVMsIE5hdGl2ZUN1cnJlbmN5LCBOYXRpdmVDdXJyZW5jeU5hbWUsIFBlcmNlbnQsIFByaWNlLCBRVU9URVJfQUREUkVTU0VTLCBSb3VuZGluZywgU09DS1NfQ09OVFJPTExFUl9BRERSRVNTRVMsIFNVUFBPUlRFRF9DSEFJTlMsIFNXQVBfUk9VVEVSXzAyX0FERFJFU1NFUywgVElDS19MRU5TX0FERFJFU1NFUywgVElNRUxPQ0tfQUREUkVTU0VTLCBUb2tlbiwgVHJhZGVUeXBlLCBVTklTV0FQX05GVF9BSVJEUk9QX0NMQUlNX0FERFJFU1MsIFVOSV9BRERSRVNTRVMsIFYyX0ZBQ1RPUllfQUREUkVTUywgVjJfRkFDVE9SWV9BRERSRVNTRVMsIFYyX1JPVVRFUl9BRERSRVNTLCBWMl9ST1VURVJfQUREUkVTU0VTLCBWM19DT1JFX0ZBQ1RPUllfQUREUkVTU0VTLCBWM19NSUdSQVRPUl9BRERSRVNTRVMsIFdFVEg5LCBjb21wdXRlUHJpY2VJbXBhY3QsIGNvbXB1dGVaa3N5bmNDcmVhdGUyQWRkcmVzcywgc29ydGVkSW5zZXJ0LCBzcXJ0LCB2YWxpZGF0ZUFuZFBhcnNlQWRkcmVzcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2RrLWNvcmUuZXNtLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@uniswap/swap-router-contracts/artifacts/contracts/lens/QuoterV2.sol/QuoterV2.json":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@uniswap/swap-router-contracts/artifacts/contracts/lens/QuoterV2.sol/QuoterV2.json ***!
  \*********************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"QuoterV2","sourceName":"contracts/lens/QuoterV2.sol","abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_WETH9","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"name":"quoteExactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint160[]","name":"sqrtPriceX96AfterList","type":"uint160[]"},{"internalType":"uint32[]","name":"initializedTicksCrossedList","type":"uint32[]"},{"internalType":"uint256","name":"gasEstimate","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct IQuoterV2.QuoteExactInputSingleParams","name":"params","type":"tuple"}],"name":"quoteExactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceX96After","type":"uint160"},{"internalType":"uint32","name":"initializedTicksCrossed","type":"uint32"},{"internalType":"uint256","name":"gasEstimate","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"quoteExactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint160[]","name":"sqrtPriceX96AfterList","type":"uint160[]"},{"internalType":"uint32[]","name":"initializedTicksCrossedList","type":"uint32[]"},{"internalType":"uint256","name":"gasEstimate","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct IQuoterV2.QuoteExactOutputSingleParams","name":"params","type":"tuple"}],"name":"quoteExactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceX96After","type":"uint160"},{"internalType":"uint32","name":"initializedTicksCrossed","type":"uint32"},{"internalType":"uint256","name":"gasEstimate","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"path","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"view","type":"function"}],"bytecode":"0x60c06040523480156200001157600080fd5b506040516200212c3803806200212c833981016040819052620000349162000070565b6001600160601b0319606092831b8116608052911b1660a052620000a7565b80516001600160a01b03811681146200006b57600080fd5b919050565b6000806040838503121562000083578182fd5b6200008e8362000053565b91506200009e6020840162000053565b90509250929050565b60805160601c60a05160601c612051620000db60003980610321525080610577528061095d5280610b9252506120516000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100e6578063c6a5026a146100ee578063cdca175314610101578063fa461e33146101145761007d565b80632f80bb1d146100825780634aa4a4fc146100ae578063bd21704a146100c3575b600080fd5b610095610090366004611b2b565b610129565b6040516100a59493929190611eac565b60405180910390f35b6100b661031f565b6040516100a59190611def565b6100d66100d1366004611c49565b610343565b6040516100a59493929190611f54565b6100b6610575565b6100d66100fc366004611c49565b610599565b61009561010f366004611b2b565b610754565b610127610122366004611b91565b61092c565b005b6000606080600061013986610ae8565b67ffffffffffffffff8111801561014f57600080fd5b50604051908082528060200260200182016040528015610179578160200160208202803683370190505b50925061018586610ae8565b67ffffffffffffffff8111801561019b57600080fd5b506040519080825280602002602001820160405280156101c5578160200160208202803683370190505b50915060005b60008060006101d98a610b17565b92509250925060008060008061025c6040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610343565b9350935093509350828b898151811061027157fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106102b857fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926102e58e610b48565b156102fa576102f38e610b50565b9d5061030a565b8c9b505050505050505050610316565b505050505050506101cb565b92959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926103819290610b8b565b9050866080015173ffffffffffffffffffffffffffffffffffffffff16600014156103af5760408701516000555b60005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856103df8c60400151610bc9565b6000038c6080015173ffffffffffffffffffffffffffffffffffffffff1660001461040e578c60800151610434565b8761042d5773fffd8963efd1fc6a506488495d951d5263988d25610434565b6401000276a45b8d602001518e606001518f6000015160405160200161045593929190611d89565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610484959493929190611e10565b6040805180830381600087803b15801561049d57600080fd5b505af19250505080156104eb575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526104e891810190611b6e565b60015b610568573d808015610519576040519150601f19603f3d011682016040523d82523d6000602084013e61051e565b606091505b505a82039450886080015173ffffffffffffffffffffffffffffffffffffffff166000141561054c57600080555b610557818487610bfb565b97509750975097505050505061056e565b50505050505b9193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926105d79290610b8b565b905060005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856106098c60400151610bc9565b60808d015173ffffffffffffffffffffffffffffffffffffffff1615610633578c60800151610659565b876106525773fffd8963efd1fc6a506488495d951d5263988d25610659565b6401000276a45b8d600001518e606001518f6020015160405160200161067a93929190611d89565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016106a9959493929190611e10565b6040805180830381600087803b1580156106c257600080fd5b505af1925050508015610710575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261070d91810190611b6e565b60015b610568573d80801561073e576040519150601f19603f3d011682016040523d82523d6000602084013e610743565b606091505b505a82039450610557818487610bfb565b6000606080600061076486610ae8565b67ffffffffffffffff8111801561077a57600080fd5b506040519080825280602002602001820160405280156107a4578160200160208202803683370190505b5092506107b086610ae8565b67ffffffffffffffff811180156107c657600080fd5b506040519080825280602002602001820160405280156107f0578160200160208202803683370190505b50915060005b60008060006108048a610b17565b9250925092506000806000806108876040518060a001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610599565b9350935093509350828b898151811061089c57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106108e357fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926109108e610b48565b156102fa5761091e8e610b50565b9d50505050505050506107f6565b600083138061093b5750600082135b61094457600080fd5b600080600061095284610b17565b9250925092506109847f0000000000000000000000000000000000000000000000000000000000000000848484610ccf565b5060008060008089136109ca578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a6000036109ff565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b9250925092506000610a12878787610b8b565b90506000808273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610a5d57600080fd5b505afa158015610a71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a959190611c6b565b5050505050915091508515610abb57604051848152826020820152816040820152606081fd5b60005415610ad1576000548414610ad157600080fd5b604051858152826020820152816040820152606081fd5b805160177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec909101045b919050565b60008080610b258482610cee565b9250610b32846014610dee565b9050610b3f846017610cee565b91509193909250565b516042111590565b8051606090610b859083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe901610ede565b92915050565b6000610bc17f0000000000000000000000000000000000000000000000000000000000000000610bbc8686866110c5565b611142565b949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210610bf757600080fd5b5090565b6000806000806000808773ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610c4a57600080fd5b505afa158015610c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c829190611c6b565b50939650610c9794508d935061127892505050565b91975095509050610cbf73ffffffffffffffffffffffffffffffffffffffff89168383611339565b9350869250505093509350935093565b6000610ce585610ce08686866110c5565b611991565b95945050505050565b600081826014011015610d6257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b8160140183511015610dd557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b600081826003011015610e6257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b8160030183511015610ed557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b60608182601f011015610f5257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015610fc357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b8183018451101561103557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b60608215801561105457604051915060008252602082016040526110bc565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561108d578051835260209283019201611075565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6110cd6119fa565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115611105579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061118457600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b60008060008351606014611318576044845110156112cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c290611e75565b60405180910390fd5b600484019350838060200190518101906112e59190611bdf565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c29190611e62565b8380602001905181019061132c9190611d02565b9250925092509193909250565b60008060008060008060008060088b73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561138d57600080fd5b505afa1580156113a1573d6000803e3d6000fd5b505050506040513d60208110156113b757600080fd5b5051600290810b908c900b816113c957fe5b0560020b901d905060006101008c73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561141c57600080fd5b505afa158015611430573d6000803e3d6000fd5b505050506040513d602081101561144657600080fd5b5051600290810b908d900b8161145857fe5b0560020b8161146357fe5b079050600060088d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156114b057600080fd5b505afa1580156114c4573d6000803e3d6000fd5b505050506040513d60208110156114da57600080fd5b5051600290810b908d900b816114ec57fe5b0560020b901d905060006101008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561153f57600080fd5b505afa158015611553573d6000803e3d6000fd5b505050506040513d602081101561156957600080fd5b5051600290810b908e900b8161157b57fe5b0560020b8161158657fe5b07905060008160ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296856040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156115e757600080fd5b505afa1580156115fb573d6000803e3d6000fd5b505050506040513d602081101561161157600080fd5b5051161180156116a457508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561166257600080fd5b505afa158015611676573d6000803e3d6000fd5b505050506040513d602081101561168c57600080fd5b5051600290810b908d900b8161169e57fe5b0760020b155b80156116b557508b60020b8d60020b135b945060008360ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296876040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561171557600080fd5b505afa158015611729573d6000803e3d6000fd5b505050506040513d602081101561173f57600080fd5b5051161180156117d257508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561179057600080fd5b505afa1580156117a4573d6000803e3d6000fd5b505050506040513d60208110156117ba57600080fd5b5051600290810b908e900b816117cc57fe5b0760020b155b80156117e357508b60020b8d60020b125b95508160010b8460010b128061180f57508160010b8460010b14801561180f57508060ff168360ff1611155b1561182557839950829750819850809650611832565b8199508097508398508296505b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff87161b9150505b8560010b8760010b13611969578560010b8760010b14156118a3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff858103161c165b6000818c73ffffffffffffffffffffffffffffffffffffffff16635339c2968a6040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156118fa57600080fd5b505afa15801561190e573d6000803e3d6000fd5b505050506040513d602081101561192457600080fd5b5051169050611932816119c1565b61ffff16989098019750506001909501947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61185e565b8115611976576001880397505b8215611983576001880397505b505050505050509392505050565b600061199d8383611142565b90503373ffffffffffffffffffffffffffffffffffffffff821614610b8557600080fd5b6000805b8215610b85577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301909216916001016119c5565b604080516060810182526000808252602082018190529181019190915290565b600082601f830112611a2a578081fd5b8135611a3d611a3882611faf565b611f8b565b818152846020838601011115611a51578283fd5b816020850160208301379081016020019190915292915050565b8051600281900b8114610b1257600080fd5b600060a08284031215611a8e578081fd5b60405160a0810181811067ffffffffffffffff82111715611aab57fe5b6040529050808235611abc8161201f565b81526020830135611acc8161201f565b602082015260408381013590820152606083013562ffffff81168114611af157600080fd5b6060820152611b0260808401611b0e565b60808201525092915050565b8035610b128161201f565b805161ffff81168114610b1257600080fd5b60008060408385031215611b3d578182fd5b823567ffffffffffffffff811115611b53578283fd5b611b5f85828601611a1a565b95602094909401359450505050565b60008060408385031215611b80578182fd5b505080516020909101519092909150565b600080600060608486031215611ba5578081fd5b8335925060208401359150604084013567ffffffffffffffff811115611bc9578182fd5b611bd586828701611a1a565b9150509250925092565b600060208284031215611bf0578081fd5b815167ffffffffffffffff811115611c06578182fd5b8201601f81018413611c16578182fd5b8051611c24611a3882611faf565b818152856020838501011115611c38578384fd5b610ce5826020830160208601611fef565b600060a08284031215611c5a578081fd5b611c648383611a7d565b9392505050565b600080600080600080600060e0888a031215611c85578283fd5b8751611c908161201f565b9650611c9e60208901611a6b565b9550611cac60408901611b19565b9450611cba60608901611b19565b9350611cc860808901611b19565b925060a088015160ff81168114611cdd578283fd5b60c08901519092508015158114611cf2578182fd5b8091505092959891949750929550565b600080600060608486031215611d16578081fd5b835192506020840151611d288161201f565b9150611d3660408501611a6b565b90509250925092565b60008151808452611d57816020860160208601611fef565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152611e5760a0830184611d3f565b979650505050505050565b600060208252611c646020830184611d3f565b60208082526010908201527f556e6578706563746564206572726f7200000000000000000000000000000000604082015260600190565b600060808201868352602060808185015281875180845260a0860191508289019350845b81811015611f0257845173ffffffffffffffffffffffffffffffffffffffff1683529383019391830191600101611ed0565b505084810360408601528651808252908201925081870190845b81811015611f3e57825163ffffffff1685529383019391830191600101611f1c565b5050505060609290920192909252949350505050565b93845273ffffffffffffffffffffffffffffffffffffffff92909216602084015263ffffffff166040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715611fa757fe5b604052919050565b600067ffffffffffffffff821115611fc357fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b8381101561200a578181015183820152602001611ff2565b83811115612019576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461204157600080fd5b5056fea164736f6c6343000706000a","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100e6578063c6a5026a146100ee578063cdca175314610101578063fa461e33146101145761007d565b80632f80bb1d146100825780634aa4a4fc146100ae578063bd21704a146100c3575b600080fd5b610095610090366004611b2b565b610129565b6040516100a59493929190611eac565b60405180910390f35b6100b661031f565b6040516100a59190611def565b6100d66100d1366004611c49565b610343565b6040516100a59493929190611f54565b6100b6610575565b6100d66100fc366004611c49565b610599565b61009561010f366004611b2b565b610754565b610127610122366004611b91565b61092c565b005b6000606080600061013986610ae8565b67ffffffffffffffff8111801561014f57600080fd5b50604051908082528060200260200182016040528015610179578160200160208202803683370190505b50925061018586610ae8565b67ffffffffffffffff8111801561019b57600080fd5b506040519080825280602002602001820160405280156101c5578160200160208202803683370190505b50915060005b60008060006101d98a610b17565b92509250925060008060008061025c6040518060a001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610343565b9350935093509350828b898151811061027157fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106102b857fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926102e58e610b48565b156102fa576102f38e610b50565b9d5061030a565b8c9b505050505050505050610316565b505050505050506101cb565b92959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926103819290610b8b565b9050866080015173ffffffffffffffffffffffffffffffffffffffff16600014156103af5760408701516000555b60005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856103df8c60400151610bc9565b6000038c6080015173ffffffffffffffffffffffffffffffffffffffff1660001461040e578c60800151610434565b8761042d5773fffd8963efd1fc6a506488495d951d5263988d25610434565b6401000276a45b8d602001518e606001518f6000015160405160200161045593929190611d89565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610484959493929190611e10565b6040805180830381600087803b15801561049d57600080fd5b505af19250505080156104eb575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526104e891810190611b6e565b60015b610568573d808015610519576040519150601f19603f3d011682016040523d82523d6000602084013e61051e565b606091505b505a82039450886080015173ffffffffffffffffffffffffffffffffffffffff166000141561054c57600080555b610557818487610bfb565b97509750975097505050505061056e565b50505050505b9193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b60208101518151606083015160009283928392839273ffffffffffffffffffffffffffffffffffffffff808216908416109284926105d79290610b8b565b905060005a90508173ffffffffffffffffffffffffffffffffffffffff1663128acb0830856106098c60400151610bc9565b60808d015173ffffffffffffffffffffffffffffffffffffffff1615610633578c60800151610659565b876106525773fffd8963efd1fc6a506488495d951d5263988d25610659565b6401000276a45b8d600001518e606001518f6020015160405160200161067a93929190611d89565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016106a9959493929190611e10565b6040805180830381600087803b1580156106c257600080fd5b505af1925050508015610710575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261070d91810190611b6e565b60015b610568573d80801561073e576040519150601f19603f3d011682016040523d82523d6000602084013e610743565b606091505b505a82039450610557818487610bfb565b6000606080600061076486610ae8565b67ffffffffffffffff8111801561077a57600080fd5b506040519080825280602002602001820160405280156107a4578160200160208202803683370190505b5092506107b086610ae8565b67ffffffffffffffff811180156107c657600080fd5b506040519080825280602002602001820160405280156107f0578160200160208202803683370190505b50915060005b60008060006108048a610b17565b9250925092506000806000806108876040518060a001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018f81526020018762ffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815250610599565b9350935093509350828b898151811061089c57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818a89815181106108e357fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926109108e610b48565b156102fa5761091e8e610b50565b9d50505050505050506107f6565b600083138061093b5750600082135b61094457600080fd5b600080600061095284610b17565b9250925092506109847f0000000000000000000000000000000000000000000000000000000000000000848484610ccf565b5060008060008089136109ca578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a6000036109ff565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b9250925092506000610a12878787610b8b565b90506000808273ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610a5d57600080fd5b505afa158015610a71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a959190611c6b565b5050505050915091508515610abb57604051848152826020820152816040820152606081fd5b60005415610ad1576000548414610ad157600080fd5b604051858152826020820152816040820152606081fd5b805160177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec909101045b919050565b60008080610b258482610cee565b9250610b32846014610dee565b9050610b3f846017610cee565b91509193909250565b516042111590565b8051606090610b859083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe901610ede565b92915050565b6000610bc17f0000000000000000000000000000000000000000000000000000000000000000610bbc8686866110c5565b611142565b949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210610bf757600080fd5b5090565b6000806000806000808773ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610c4a57600080fd5b505afa158015610c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c829190611c6b565b50939650610c9794508d935061127892505050565b91975095509050610cbf73ffffffffffffffffffffffffffffffffffffffff89168383611339565b9350869250505093509350935093565b6000610ce585610ce08686866110c5565b611991565b95945050505050565b600081826014011015610d6257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b8160140183511015610dd557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b600081826003011015610e6257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b8160030183511015610ed557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b60608182601f011015610f5257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015610fc357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b8183018451101561103557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b60608215801561105457604051915060008252602082016040526110bc565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561108d578051835260209283019201611075565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6110cd6119fa565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115611105579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061118457600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b60008060008351606014611318576044845110156112cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c290611e75565b60405180910390fd5b600484019350838060200190518101906112e59190611bdf565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c29190611e62565b8380602001905181019061132c9190611d02565b9250925092509193909250565b60008060008060008060008060088b73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561138d57600080fd5b505afa1580156113a1573d6000803e3d6000fd5b505050506040513d60208110156113b757600080fd5b5051600290810b908c900b816113c957fe5b0560020b901d905060006101008c73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561141c57600080fd5b505afa158015611430573d6000803e3d6000fd5b505050506040513d602081101561144657600080fd5b5051600290810b908d900b8161145857fe5b0560020b8161146357fe5b079050600060088d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156114b057600080fd5b505afa1580156114c4573d6000803e3d6000fd5b505050506040513d60208110156114da57600080fd5b5051600290810b908d900b816114ec57fe5b0560020b901d905060006101008e73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561153f57600080fd5b505afa158015611553573d6000803e3d6000fd5b505050506040513d602081101561156957600080fd5b5051600290810b908e900b8161157b57fe5b0560020b8161158657fe5b07905060008160ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296856040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156115e757600080fd5b505afa1580156115fb573d6000803e3d6000fd5b505050506040513d602081101561161157600080fd5b5051161180156116a457508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561166257600080fd5b505afa158015611676573d6000803e3d6000fd5b505050506040513d602081101561168c57600080fd5b5051600290810b908d900b8161169e57fe5b0760020b155b80156116b557508b60020b8d60020b135b945060008360ff166001901b8f73ffffffffffffffffffffffffffffffffffffffff16635339c296876040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b15801561171557600080fd5b505afa158015611729573d6000803e3d6000fd5b505050506040513d602081101561173f57600080fd5b5051161180156117d257508d73ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561179057600080fd5b505afa1580156117a4573d6000803e3d6000fd5b505050506040513d60208110156117ba57600080fd5b5051600290810b908e900b816117cc57fe5b0760020b155b80156117e357508b60020b8d60020b125b95508160010b8460010b128061180f57508160010b8460010b14801561180f57508060ff168360ff1611155b1561182557839950829750819850809650611832565b8199508097508398508296505b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff87161b9150505b8560010b8760010b13611969578560010b8760010b14156118a3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff858103161c165b6000818c73ffffffffffffffffffffffffffffffffffffffff16635339c2968a6040518263ffffffff1660e01b8152600401808260010b815260200191505060206040518083038186803b1580156118fa57600080fd5b505afa15801561190e573d6000803e3d6000fd5b505050506040513d602081101561192457600080fd5b5051169050611932816119c1565b61ffff16989098019750506001909501947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61185e565b8115611976576001880397505b8215611983576001880397505b505050505050509392505050565b600061199d8383611142565b90503373ffffffffffffffffffffffffffffffffffffffff821614610b8557600080fd5b6000805b8215610b85577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301909216916001016119c5565b604080516060810182526000808252602082018190529181019190915290565b600082601f830112611a2a578081fd5b8135611a3d611a3882611faf565b611f8b565b818152846020838601011115611a51578283fd5b816020850160208301379081016020019190915292915050565b8051600281900b8114610b1257600080fd5b600060a08284031215611a8e578081fd5b60405160a0810181811067ffffffffffffffff82111715611aab57fe5b6040529050808235611abc8161201f565b81526020830135611acc8161201f565b602082015260408381013590820152606083013562ffffff81168114611af157600080fd5b6060820152611b0260808401611b0e565b60808201525092915050565b8035610b128161201f565b805161ffff81168114610b1257600080fd5b60008060408385031215611b3d578182fd5b823567ffffffffffffffff811115611b53578283fd5b611b5f85828601611a1a565b95602094909401359450505050565b60008060408385031215611b80578182fd5b505080516020909101519092909150565b600080600060608486031215611ba5578081fd5b8335925060208401359150604084013567ffffffffffffffff811115611bc9578182fd5b611bd586828701611a1a565b9150509250925092565b600060208284031215611bf0578081fd5b815167ffffffffffffffff811115611c06578182fd5b8201601f81018413611c16578182fd5b8051611c24611a3882611faf565b818152856020838501011115611c38578384fd5b610ce5826020830160208601611fef565b600060a08284031215611c5a578081fd5b611c648383611a7d565b9392505050565b600080600080600080600060e0888a031215611c85578283fd5b8751611c908161201f565b9650611c9e60208901611a6b565b9550611cac60408901611b19565b9450611cba60608901611b19565b9350611cc860808901611b19565b925060a088015160ff81168114611cdd578283fd5b60c08901519092508015158114611cf2578182fd5b8091505092959891949750929550565b600080600060608486031215611d16578081fd5b835192506020840151611d288161201f565b9150611d3660408501611a6b565b90509250925092565b60008151808452611d57816020860160208601611fef565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152611e5760a0830184611d3f565b979650505050505050565b600060208252611c646020830184611d3f565b60208082526010908201527f556e6578706563746564206572726f7200000000000000000000000000000000604082015260600190565b600060808201868352602060808185015281875180845260a0860191508289019350845b81811015611f0257845173ffffffffffffffffffffffffffffffffffffffff1683529383019391830191600101611ed0565b505084810360408601528651808252908201925081870190845b81811015611f3e57825163ffffffff1685529383019391830191600101611f1c565b5050505060609290920192909252949350505050565b93845273ffffffffffffffffffffffffffffffffffffffff92909216602084015263ffffffff166040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715611fa757fe5b604052919050565b600067ffffffffffffffff821115611fc357fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b8381101561200a578181015183820152602001611ff2565b83811115612019576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461204157600080fd5b5056fea164736f6c6343000706000a","linkReferences":{},"deployedLinkReferences":{}}');

/***/ }),

/***/ "(rsc)/./node_modules/@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json ***!
  \*******************************************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"NonfungiblePositionManager","sourceName":"contracts/NonfungiblePositionManager.sol","abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_WETH9","type":"address"},{"internalType":"address","name":"_tokenDescriptor_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"DecreaseLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"IncreaseLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Max","type":"uint128"},{"internalType":"uint128","name":"amount1Max","type":"uint128"}],"internalType":"struct INonfungiblePositionManager.CollectParams","name":"params","type":"tuple"}],"name":"collect","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"createAndInitializePoolIfNecessary","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct INonfungiblePositionManager.DecreaseLiquidityParams","name":"params","type":"tuple"}],"name":"decreaseLiquidity","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct INonfungiblePositionManager.IncreaseLiquidityParams","name":"params","type":"tuple"}],"name":"increaseLiquidity","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct INonfungiblePositionManager.MintParams","name":"params","type":"tuple"}],"name":"mint","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"positions","outputs":[{"internalType":"uint96","name":"nonce","type":"uint96"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"refundETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowed","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowedIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"sweepToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount0Owed","type":"uint256"},{"internalType":"uint256","name":"amount1Owed","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3MintCallback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"unwrapWETH9","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"bytecode":"0x610120604052600d80546001600160b01b0319166001176001600160b01b0316600160b01b1790553480156200003457600080fd5b50604051620062e9380380620062e98339810160408190526200005791620002db565b82826040518060400160405280601b81526020017f556e697377617020563320506f736974696f6e73204e46542d563100000000008152506040518060400160405280600a815260200169554e492d56332d504f5360b01b815250604051806040016040528060018152602001603160f81b8152508282620000e66301ffc9a760e01b6200018d60201b60201c565b8151620000fb90600690602085019062000212565b5080516200011190600790602084019062000212565b50620001246380ac58cd60e01b6200018d565b62000136635b5e139f60e01b6200018d565b6200014863780e9d6360e01b6200018d565b50508251602093840120608052805192019190912060a052506001600160601b0319606092831b811660c05290821b811660e05291901b166101005250620003249050565b6001600160e01b03198082161415620001ed576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200024a576000855562000295565b82601f106200026557805160ff191683800117855562000295565b8280016001018555821562000295579182015b828111156200029557825182559160200191906001019062000278565b50620002a3929150620002a7565b5090565b5b80821115620002a35760008155600101620002a8565b80516001600160a01b0381168114620002d657600080fd5b919050565b600080600060608486031215620002f0578283fd5b620002fb84620002be565b92506200030b60208501620002be565b91506200031b60408501620002be565b90509250925092565b60805160a05160c05160601c60e05160601c6101005160601c615f40620003a960003980612a835250806102995280611718528061180e52806118965280613e5d5280613ea35280613f17525080610aa75280610dde5280610ea55280612a1d5280612b235280612e4452806136e15250806114ff5250806114de5250615f406000f3fe6080604052600436106102895760003560e01c80636352211e11610153578063ac9650d8116100cb578063d34879971161007f578063e985e9c511610064578063e985e9c5146106f5578063f3995c6714610715578063fc6f7865146107285761030d565b8063d3487997146106c2578063df2ab5bb146106e25761030d565b8063c2e3140a116100b0578063c2e3140a1461067a578063c45a01551461068d578063c87b56dd146106a25761030d565b8063ac9650d81461063a578063b88d4fde1461065a5761030d565b8063883164561161012257806399fbab881161010757806399fbab88146105cf578063a22cb46514610607578063a4a78f0c146106275761030d565b8063883164561461059757806395d89b41146105ba5761030d565b80636352211e1461052f5780636c0360eb1461054f57806370a08231146105645780637ac2ff7b146105845761030d565b806323b872dd1161020157806342966c68116101b557806349404b7c1161019a57806349404b7c146104e75780634aa4a4fc146104fa5780634f6ccce71461050f5761030d565b806342966c68146104c15780634659a494146104d45761030d565b806330adf81f116101e657806330adf81f146104775780633644e5151461048c57806342842e0e146104a15761030d565b806323b872dd146104375780632f745c59146104575761030d565b80630c49ccbe1161025857806313ead5621161023d57806313ead562146103e057806318160ddd146103f3578063219f5d17146104155761030d565b80630c49ccbe146103b757806312210e8a146103d85761030d565b806301ffc9a71461031257806306fdde0314610348578063081812fc1461036a578063095ea7b3146103975761030d565b3661030d57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461030b576040805162461bcd60e51b815260206004820152600960248201527f4e6f742057455448390000000000000000000000000000000000000000000000604482015290519081900360640190fd5b005b600080fd5b34801561031e57600080fd5b5061033261032d3660046153a6565b61073b565b60405161033f919061591e565b60405180910390f35b34801561035457600080fd5b5061035d610776565b60405161033f9190615971565b34801561037657600080fd5b5061038a6103853660046156b8565b61080c565b60405161033f91906157e2565b3480156103a357600080fd5b5061030b6103b2366004615270565b610868565b6103ca6103c5366004615483565b61093e565b60405161033f929190615b42565b61030b610daa565b61038a6103ee366004615103565b610dbc565b3480156103ff57600080fd5b506104086110c9565b60405161033f9190615929565b610428610423366004615494565b6110da565b60405161033f93929190615afd565b34801561044357600080fd5b5061030b61045236600461515c565b611413565b34801561046357600080fd5b50610408610472366004615270565b61146a565b34801561048357600080fd5b50610408611495565b34801561049857600080fd5b506104086114b9565b3480156104ad57600080fd5b5061030b6104bc36600461515c565b611577565b61030b6104cf3660046156b8565b611592565b61030b6104e23660046152dc565b611661565b61030b6104f53660046156d0565b611714565b34801561050657600080fd5b5061038a611894565b34801561051b57600080fd5b5061040861052a3660046156b8565b6118b8565b34801561053b57600080fd5b5061038a61054a3660046156b8565b6118ce565b34801561055b57600080fd5b5061035d6118f6565b34801561057057600080fd5b5061040861057f3660046150af565b6118fb565b61030b6105923660046152dc565b611963565b6105aa6105a5366004615550565b611e0f565b60405161033f9493929190615b1e565b3480156105c657600080fd5b5061035d612370565b3480156105db57600080fd5b506105ef6105ea3660046156b8565b6123d1565b60405161033f9c9b9a99989796959493929190615b50565b34801561061357600080fd5b5061030b610622366004615243565b612600565b61030b6106353660046152dc565b612723565b61064d610648366004615337565b6127d5565b60405161033f91906158a0565b34801561066657600080fd5b5061030b61067536600461519c565b612915565b61030b6106883660046152dc565b612973565b34801561069957600080fd5b5061038a612a1b565b3480156106ae57600080fd5b5061035d6106bd3660046156b8565b612a3f565b3480156106ce57600080fd5b5061030b6106dd366004615717565b612b0e565b61030b6106f036600461529b565b612b8c565b34801561070157600080fd5b506103326107103660046150cb565b612c6f565b61030b6107233660046152dc565b612c9d565b6103ca61073636600461546c565b612d28565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108025780601f106107d757610100808354040283529160200191610802565b820191906000526020600020905b8154815290600101906020018083116107e557829003601f168201915b5050505050905090565b600061081782613246565b61083c5760405162461bcd60e51b8152600401610833906159bb565b60405180910390fd5b506000908152600c60205260409020546c0100000000000000000000000090046001600160a01b031690565b6000610873826118ce565b9050806001600160a01b0316836001600160a01b031614156108c65760405162461bcd60e51b8152600401808060200182810382526021815260200180615ee26021913960400191505060405180910390fd5b806001600160a01b03166108d8613253565b6001600160a01b031614806108f457506108f481610710613253565b61092f5760405162461bcd60e51b8152600401808060200182810382526038815260200180615e0c6038913960400191505060405180910390fd5b6109398383613257565b505050565b600080823561094d33826132db565b6109695760405162461bcd60e51b815260040161083390615984565b836080013580610977613377565b11156109ca576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b60006109dc6040870160208801615562565b6001600160801b0316116109ef57600080fd5b84356000908152600c602090815260409182902060018101549092600160801b9091046001600160801b031691610a2a918901908901615562565b6001600160801b0316816001600160801b03161015610a4857600080fd5b60018281015469ffffffffffffffffffff166000908152600b60209081526040808320815160608101835281546001600160a01b039081168252919095015490811692850192909252600160a01b90910462ffffff1690830152610acc7f00000000000000000000000000000000000000000000000000000000000000008361337b565b60018501549091506001600160a01b0382169063a34123a7906a01000000000000000000008104600290810b91600160681b9004900b610b1260408e0160208f01615562565b6040518463ffffffff1660e01b8152600401610b309392919061594b565b6040805180830381600087803b158015610b4957600080fd5b505af1158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8191906156f4565b909850965060408901358810801590610b9e575088606001358710155b610bba5760405162461bcd60e51b815260040161083390615a18565b6001840154600090610bea9030906a01000000000000000000008104600290810b91600160681b9004900b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b8152600401610c1b9190615929565b60a06040518083038186803b158015610c3357600080fd5b505afa158015610c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b91906155ac565b50509250925050610c9087600201548303876001600160801b0316600160801b6134d1565b6004880180546fffffffffffffffffffffffffffffffff198116928e016001600160801b039182160181169290921790556003880154610cda91908303908816600160801b6134d1565b6004880180546001600160801b03808216938e01600160801b9283900482160116029190911790556002870182905560038701819055610d2060408d0160208e01615562565b86038760010160106101000a8154816001600160801b0302191690836001600160801b031602179055508b600001357f26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b48d6020016020810190610d839190615562565b8d8d604051610d9493929190615afd565b60405180910390a2505050505050505050915091565b4715610dba57610dba3347613580565b565b6000836001600160a01b0316856001600160a01b031610610ddc57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631698ee828686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff168152602001935050505060206040518083038186803b158015610e6757600080fd5b505afa158015610e7b573d6000803e3d6000fd5b505050506040513d6020811015610e9157600080fd5b505190506001600160a01b038116610fe0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a16712958686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff1681526020019350505050602060405180830381600087803b158015610f3057600080fd5b505af1158015610f44573d6000803e3d6000fd5b505050506040513d6020811015610f5a57600080fd5b5051604080517ff637731d0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015291519293509083169163f637731d9160248082019260009290919082900301818387803b158015610fc357600080fd5b505af1158015610fd7573d6000803e3d6000fd5b505050506110c1565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561101b57600080fd5b505afa15801561102f573d6000803e3d6000fd5b505050506040513d60e081101561104557600080fd5b505190506001600160a01b0381166110bf57816001600160a01b031663f637731d846040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156110a657600080fd5b505af11580156110ba573d6000803e3d6000fd5b505050505b505b949350505050565b60006110d56002613689565b905090565b60008060008360a00135806110ed613377565b1115611140576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b84356000908152600c6020908152604080832060018082015469ffffffffffffffffffff81168652600b855283862084516060808201875282546001600160a01b039081168352929094015480831682890190815262ffffff600160a01b9092048216838901908152885161014081018a528451861681529151909416818a01529251168287015230828501526a01000000000000000000008304600290810b810b608080850191909152600160681b909404810b900b60a0830152958c013560c0820152938b013560e0850152908a0135610100840152890135610120830152929061122c90613694565b6001870154939a50919850965091506000906112669030906a01000000000000000000008104600290810b91600160681b9004900b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b81526004016112979190615929565b60a06040518083038186803b1580156112af57600080fd5b505afa1580156112c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e791906155ac565b50509250925050611323866002015483038760010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b6004870180546001600160801b0380821690930183166fffffffffffffffffffffffffffffffff19909116179055600387015460018801546113739291840391600160801b9182900416906134d1565b6004870180546001600160801b03600160801b80830482169094018116840291811691909117909155600288018490556003880183905560018801805483810483168e018316909302929091169190911790556040518b35907f3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f906113fd908d908d908d90615afd565b60405180910390a2505050505050509193909250565b61142461141e613253565b826132db565b61145f5760405162461bcd60e51b8152600401808060200182810382526031815260200180615f036031913960400191505060405180910390fd5b6109398383836138cf565b6001600160a01b038216600090815260016020526040812061148c9083613a1b565b90505b92915050565b7f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad81565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611526613a27565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b61093983838360405180602001604052806000815250612915565b8061159d33826132db565b6115b95760405162461bcd60e51b815260040161083390615984565b6000828152600c602052604090206001810154600160801b90046001600160801b03161580156115f4575060048101546001600160801b0316155b801561161257506004810154600160801b90046001600160801b0316155b61162e5760405162461bcd60e51b815260040161083390615a86565b6000838152600c602052604081208181556001810182905560028101829055600381018290556004015561093983613a2b565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b1580156116f457600080fd5b505af1158015611708573d6000803e3d6000fd5b50505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561178357600080fd5b505afa158015611797573d6000803e3d6000fd5b505050506040513d60208110156117ad57600080fd5b5051905082811015611806576040805162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b8015610939577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561187257600080fd5b505af1158015611886573d6000803e3d6000fd5b505050506109398282613580565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806118c6600284613af8565b509392505050565b600061148f82604051806060016040528060298152602001615e6e6029913960029190613b16565b606090565b60006001600160a01b0382166119425760405162461bcd60e51b815260040180806020018281038252602a815260200180615e44602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061148f90613689565b8361196c613377565b11156119bf576040805162461bcd60e51b815260206004820152600e60248201527f5065726d69742065787069726564000000000000000000000000000000000000604482015290519081900360640190fd5b60006119c96114b9565b7f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad88886119f581613b23565b604080516020808201969096526001600160a01b03909416848201526060840192909252608083015260a08083018a90528151808403909101815260c0830182528051908401207f190100000000000000000000000000000000000000000000000000000000000060e084015260e283019490945261010280830194909452805180830390940184526101229091019052815191012090506000611a98876118ce565b9050806001600160a01b0316886001600160a01b03161415611aeb5760405162461bcd60e51b8152600401808060200182810382526027815260200180615d6f6027913960400191505060405180910390fd5b611af481613b62565b15611ccf576040805160208082018790528183018690527fff0000000000000000000000000000000000000000000000000000000000000060f889901b16606083015282516041818403018152606183018085527f1626ba7e0000000000000000000000000000000000000000000000000000000090526065830186815260858401948552815160a585015281516001600160a01b03871695631626ba7e958995919260c59091019185019080838360005b83811015611bbe578181015183820152602001611ba6565b50505050905090810190601f168015611beb5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b158015611c0957600080fd5b505afa158015611c1d573d6000803e3d6000fd5b505050506040513d6020811015611c3357600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e0000000000000000000000000000000000000000000000000000000014611cca576040805162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015290519081900360640190fd5b611dfb565b600060018387878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611d2b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611d93576040805162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015290519081900360640190fd5b816001600160a01b0316816001600160a01b031614611df9576040805162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015290519081900360640190fd5b505b611e058888613257565b5050505050505050565b60008060008084610140013580611e24613377565b1115611e77576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b604080516101408101909152600090611f439080611e9860208b018b6150af565b6001600160a01b03168152602001896020016020810190611eb991906150af565b6001600160a01b03168152602001611ed760608b0160408c0161569e565b62ffffff168152306020820152604001611ef760808b0160608c016153e6565b60020b8152602001611f0f60a08b0160808c016153e6565b60020b81526020018960a0013581526020018960c0013581526020018960e001358152602001896101000135815250613694565b92975090955093509050611fb7611f6261014089016101208a016150af565b600d80547fffffffffffffffffffff000000000000000000000000000000000000000000008116600175ffffffffffffffffffffffffffffffffffffffffffff92831690810190921617909155975087613b68565b6000611fe230611fcd60808b0160608c016153e6565b611fdd60a08c0160808d016153e6565b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b81526004016120139190615929565b60a06040518083038186803b15801561202b57600080fd5b505afa15801561203f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206391906155ac565b5050925092505060006120dc8560405180606001604052808e600001602081019061208e91906150af565b6001600160a01b031681526020018e60200160208101906120af91906150af565b6001600160a01b031681526020018e60400160208101906120d0919061569e565b62ffffff169052613c96565b905060405180610140016040528060006bffffffffffffffffffffffff16815260200160006001600160a01b031681526020018269ffffffffffffffffffff1681526020018c606001602081019061213491906153e6565b60020b815260200161214c60a08e0160808f016153e6565b60020b81526020018a6001600160801b0316815260200184815260200183815260200160006001600160801b0316815260200160006001600160801b0316815250600c60008c815260200190815260200160002060008201518160000160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550602082015181600001600c6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff160217905550606082015181600101600a6101000a81548162ffffff021916908360020b62ffffff160217905550608082015181600101600d6101000a81548162ffffff021916908360020b62ffffff16021790555060a08201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060c0820151816002015560e082015181600301556101008201518160040160006101000a8154816001600160801b0302191690836001600160801b031602179055506101208201518160040160106101000a8154816001600160801b0302191690836001600160801b03160217905550905050897f3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f8a8a8a60405161235b93929190615afd565b60405180910390a25050505050509193509193565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108025780601f106107d757610100808354040283529160200191610802565b6000818152600c6020908152604080832081516101408101835281546bffffffffffffffffffffffff811682526001600160a01b036c010000000000000000000000009091041693810193909352600181015469ffffffffffffffffffff81169284018390526a01000000000000000000008104600290810b810b810b6060860152600160681b8204810b810b810b60808601526001600160801b03600160801b92839004811660a08701529083015460c0860152600383015460e0860152600490920154808316610100860152041661012083015282918291829182918291829182918291829182918291906124da5760405162461bcd60e51b815260040161083390615a4f565b6000600b6000836040015169ffffffffffffffffffff1669ffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160149054906101000a900462ffffff1662ffffff1662ffffff1681525050905081600001518260200151826000015183602001518460400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001519d509d509d509d509d509d509d509d509d509d509d509d50505091939597999b5091939597999b565b612608613253565b6001600160a01b0316826001600160a01b0316141561266e576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806005600061267b613253565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091556126dd613253565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b15801561278d57600080fd5b505afa1580156127a1573d6000803e3d6000fd5b505050506040513d60208110156127b757600080fd5b505110156127cd576127cd868686868686611661565b505050505050565b60608167ffffffffffffffff811180156127ee57600080fd5b5060405190808252806020026020018201604052801561282257816020015b606081526020019060019003908161280d5790505b50905060005b8281101561290e576000803086868581811061284057fe5b90506020028101906128529190615bef565b6040516128609291906157d2565b600060405180830381855af49150503d806000811461289b576040519150601f19603f3d011682016040523d82523d6000602084013e6128a0565b606091505b5091509150816128ec576044815110156128b957600080fd5b600481019050808060200190518101906128d39190615402565b60405162461bcd60e51b81526004016108339190615971565b808484815181106128f957fe5b60209081029190910101525050600101612828565b5092915050565b612926612920613253565b836132db565b6129615760405162461bcd60e51b8152600401808060200182810382526031815260200180615f036031913960400191505060405180910390fd5b61296d84848484613de6565b50505050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b1580156129db57600080fd5b505afa1580156129ef573d6000803e3d6000fd5b505050506040513d6020811015612a0557600080fd5b505110156127cd576127cd868686868686612c9d565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060612a4a82613246565b612a5357600080fd5b6040517fe9dc63750000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e9dc637590612aba9030908690600401615932565b60006040518083038186803b158015612ad257600080fd5b505afa158015612ae6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261148f9190810190615402565b6000612b1c828401846154a5565b9050612b4c7f00000000000000000000000000000000000000000000000000000000000000008260000151613e38565b508415612b67578051516020820151612b6791903388613e5b565b8315612b8557612b8581600001516020015182602001513387613e5b565b5050505050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612bdb57600080fd5b505afa158015612bef573d6000803e3d6000fd5b505050506040513d6020811015612c0557600080fd5b5051905082811015612c5e576040805162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b801561296d5761296d848383613feb565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b1580156116f457600080fd5b6000808235612d3733826132db565b612d535760405162461bcd60e51b815260040161083390615984565b6000612d656060860160408701615562565b6001600160801b03161180612d9257506000612d876080860160608701615562565b6001600160801b0316115b612d9b57600080fd5b600080612dae60408701602088016150af565b6001600160a01b031614612dd157612dcc60408601602087016150af565b612dd3565b305b85356000908152600c6020908152604080832060018082015469ffffffffffffffffffff168552600b8452828520835160608101855281546001600160a01b039081168252919092015490811694820194909452600160a01b90930462ffffff169183019190915292935090612e697f00000000000000000000000000000000000000000000000000000000000000008361337b565b600484015460018501549192506001600160801b0380821692600160801b92839004821692900416156130865760018501546040517fa34123a70000000000000000000000000000000000000000000000000000000081526001600160a01b0385169163a34123a791612f00916a01000000000000000000008104600290810b92600160681b909204900b9060009060040161594b565b6040805180830381600087803b158015612f1957600080fd5b505af1158015612f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5191906156f4565b5050600185015460009081906001600160a01b0386169063514ea4bf90612f969030906a01000000000000000000008104600290810b91600160681b9004900b613477565b6040518263ffffffff1660e01b8152600401612fb29190615929565b60a06040518083038186803b158015612fca57600080fd5b505afa158015612fde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061300291906155ac565b5050925092505061303e876002015483038860010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b84019350613077876003015482038860010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b60028801929092556003870155015b6000806001600160801b0384166130a360608e0160408f01615562565b6001600160801b0316116130c6576130c160608d0160408e01615562565b6130c8565b835b836001600160801b03168d60600160208101906130e59190615562565b6001600160801b0316116131085761310360808e0160608f01615562565b61310a565b835b60018901546040517f4f1eb3d80000000000000000000000000000000000000000000000000000000081529294509092506001600160a01b03871691634f1eb3d89161317d918c916a01000000000000000000008104600290810b92600160681b909204900b9088908890600401615839565b6040805180830381600087803b15801561319657600080fd5b505af11580156131aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131ce919061557e565b6004890180546fffffffffffffffffffffffffffffffff196001600160801b03918216600160801b878a0384160217168689038216179091556040519281169d50169a508c35907f40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f0190610d94908b9086908690615876565b600061148f60028361417b565b3390565b6000818152600c6020526040902080546bffffffffffffffffffffffff166c010000000000000000000000006001600160a01b0385169081029190911790915581906132a2826118ce565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006132e682613246565b6133215760405162461bcd60e51b815260040180806020018281038252602c815260200180615de0602c913960400191505060405180910390fd5b600061332c836118ce565b9050806001600160a01b0316846001600160a01b031614806133675750836001600160a01b031661335c8461080c565b6001600160a01b0316145b806110c157506110c18185612c6f565b4290565b600081602001516001600160a01b031682600001516001600160a01b0316106133a357600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516bffffffffffffffffffffffff19606086901b16602080830191909152600285810b60e890811b60348501529085900b901b60378301528251601a818403018152603a90920190925280519101205b9392505050565b600080806000198587098686029250828110908390030390508061350757600084116134fc57600080fd5b5082900490506134ca565b80841161351357600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106135cc5780518252601f1990920191602091820191016135ad565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461362e576040519150601f19603f3d011682016040523d82523d6000602084013e613633565b606091505b5050905080610939576040805162461bcd60e51b815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600061148f82614187565b6000806000806000604051806060016040528087600001516001600160a01b0316815260200187602001516001600160a01b03168152602001876040015162ffffff1681525090506137067f00000000000000000000000000000000000000000000000000000000000000008261337b565b91506000826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561374357600080fd5b505afa158015613757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061377b919061560d565b50505050505090506000613792886080015161418b565b905060006137a38960a0015161418b565b90506137ba8383838c60c001518d60e001516144d9565b9750505050816001600160a01b0316633c8a7d8d876060015188608001518960a00151896040518060400160405280888152602001336001600160a01b031681525060405160200161380c9190615abd565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161383b9594939291906157f6565b6040805180830381600087803b15801561385457600080fd5b505af1158015613868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061388c91906156f4565b610100880151919550935084108015906138ab57508561012001518310155b6138c75760405162461bcd60e51b815260040161083390615a18565b509193509193565b826001600160a01b03166138e2826118ce565b6001600160a01b0316146139275760405162461bcd60e51b8152600401808060200182810382526029815260200180615eb96029913960400191505060405180910390fd5b6001600160a01b03821661396c5760405162461bcd60e51b8152600401808060200182810382526024815260200180615d966024913960400191505060405180910390fd5b613977838383610939565b613982600082613257565b6001600160a01b03831660009081526001602052604090206139a4908261459d565b506001600160a01b03821660009081526001602052604090206139c790826145a9565b506139d4600282846145b5565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061148c83836145cb565b4690565b6000613a36826118ce565b9050613a4481600084610939565b613a4f600083613257565b6000828152600860205260409020546002600019610100600184161502019091160415613a8d576000828152600860205260408120613a8d9161501f565b6001600160a01b0381166000908152600160205260409020613aaf908361459d565b50613abb60028361462f565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000808080613b07868661463b565b909450925050505b9250929050565b60006110c18484846146b6565b6000908152600c6020526040902080546bffffffffffffffffffffffff19811660016bffffffffffffffffffffffff9283169081019092161790915590565b3b151590565b6001600160a01b038216613bc3576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b613bcc81613246565b15613c1e576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b613c2a60008383610939565b6001600160a01b0382166000908152600160205260409020613c4c90826145a9565b50613c59600282846145b5565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0382166000908152600a602052604090205469ffffffffffffffffffff168061148f5750600d8054600169ffffffffffffffffffff76010000000000000000000000000000000000000000000080840482168381019092160275ffffffffffffffffffffffffffffffffffffffffffff909316929092179092556001600160a01b038085166000908152600a6020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001686179055848352600b825291829020865181549085167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617825591870151950180549287015162ffffff16600160a01b027fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff969094169290911691909117939093161790915592915050565b613df18484846138cf565b613dfd84848484614780565b61296d5760405162461bcd60e51b8152600401808060200182810382526032815260200180615d3d6032913960400191505060405180910390fd5b6000613e44838361337b565b9050336001600160a01b0382161461148f57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316148015613e9c5750804710155b15613fbe577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015613efc57600080fd5b505af1158015613f10573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015613f8c57600080fd5b505af1158015613fa0573d6000803e3d6000fd5b505050506040513d6020811015613fb657600080fd5b5061296d9050565b6001600160a01b038316301415613fdf57613fda848383613feb565b61296d565b61296d8484848461495c565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b602083106140955780518252601f199092019160209182019101614076565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146140f7576040519150601f19603f3d011682016040523d82523d6000602084013e6140fc565b606091505b509150915081801561412a57508051158061412a575080806020019051602081101561412757600080fd5b50515b612b85576040805162461bcd60e51b815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600061148c8383614af4565b5490565b60008060008360020b126141a2578260020b6141aa565b8260020b6000035b9050620d89e8811115614204576040805162461bcd60e51b815260206004820152600160248201527f5400000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006001821661421857600160801b61422a565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561425e576ffff97272373d413259a46990580e213a0260801c5b600482161561427d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561429c576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156142bb576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156142da576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156142f9576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615614318576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615614338576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615614358576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615614378576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615614398576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156143b8576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156143d8576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156143f8576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615614418576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615614439576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615614459576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615614478576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615614495576b048a170391f7dc42444e8fa20260801c5b60008460020b13156144b05780600019816144ac57fe5b0490505b6401000000008106156144c45760016144c7565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b031611156144f9579293925b846001600160a01b0316866001600160a01b0316116145245761451d858585614b0c565b9050614594565b836001600160a01b0316866001600160a01b0316101561458657600061454b878686614b0c565b9050600061455a878986614b78565b9050806001600160801b0316826001600160801b03161061457b578061457d565b815b92505050614594565b614591858584614b78565b90505b95945050505050565b600061148c8383614bbe565b600061148c8383614c84565b60006110c184846001600160a01b038516614cce565b8154600090821061460d5760405162461bcd60e51b8152600401808060200182810382526022815260200180615d1b6022913960400191505060405180910390fd5b82600001828154811061461c57fe5b9060005260206000200154905092915050565b600061148c8383614d65565b81546000908190831061467f5760405162461bcd60e51b8152600401808060200182810382526022815260200180615e976022913960400191505060405180910390fd5b600084600001848154811061469057fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816147515760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156147165781810151838201526020016146fe565b50505050905090810190601f1680156147435780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061476457fe5b9060005260206000209060020201600101549150509392505050565b6000614794846001600160a01b0316613b62565b6147a0575060016110c1565b60006148f17f150b7a02000000000000000000000000000000000000000000000000000000006147ce613253565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561483557818101518382015260200161481d565b50505050905090810190601f1680156148625780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001615d3d603291396001600160a01b0388169190614e39565b9050600081806020019051602081101561490a57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001492505050949350505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b60208310614a0e5780518252601f1990920191602091820191016149ef565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114614a70576040519150601f19603f3d011682016040523d82523d6000602084013e614a75565b606091505b5091509150818015614aa3575080511580614aa35750808060200190516020811015614aa057600080fd5b50515b6127cd576040805162461bcd60e51b815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60009081526001919091016020526040902054151590565b6000826001600160a01b0316846001600160a01b03161115614b2c579192915b6000614b58856001600160a01b0316856001600160a01b03166c010000000000000000000000006134d1565b9050614594614b7384838888036001600160a01b03166134d1565b614e48565b6000826001600160a01b0316846001600160a01b03161115614b98579192915b6110c1614b73836c010000000000000000000000008787036001600160a01b03166134d1565b60008181526001830160205260408120548015614c7a5783546000198083019190810190600090879083908110614bf157fe5b9060005260206000200154905080876000018481548110614c0e57fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080614c3e57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061148f565b600091505061148f565b6000614c908383614af4565b614cc65750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561148f565b50600061148f565b600082815260018401602052604081205480614d335750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556134ca565b82856000016001830381548110614d4657fe5b90600052602060002090600202016001018190555060009150506134ca565b60008181526001830160205260408120548015614c7a5783546000198083019190810190600090879083908110614d9857fe5b9060005260206000209060020201905080876000018481548110614db857fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080614df757fe5b600082815260208082206002600019909401938402018281556001908101839055929093558881528982019092526040822091909155945061148f9350505050565b60606110c18484600085614e5e565b806001600160801b038116811461077157600080fd5b606082471015614e9f5760405162461bcd60e51b8152600401808060200182810382526026815260200180615dba6026913960400191505060405180910390fd5b614ea885613b62565b614ef9576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310614f375780518252601f199092019160209182019101614f18565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114614f99576040519150601f19603f3d011682016040523d82523d6000602084013e614f9e565b606091505b5091509150614fae828286614fb9565b979650505050505050565b60608315614fc85750816134ca565b825115614fd85782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156147165781810151838201526020016146fe565b50805460018160011615610100020316600290046000825580601f106150455750615063565b601f0160209004906000526020600020908101906150639190615066565b50565b5b8082111561507b5760008155600101615067565b5090565b803561077181615cc4565b805161ffff8116811461077157600080fd5b803562ffffff8116811461077157600080fd5b6000602082840312156150c0578081fd5b81356134ca81615cc4565b600080604083850312156150dd578081fd5b82356150e881615cc4565b915060208301356150f881615cc4565b809150509250929050565b60008060008060808587031215615118578182fd5b843561512381615cc4565b9350602085013561513381615cc4565b92506151416040860161509c565b9150606085013561515181615cc4565b939692955090935050565b600080600060608486031215615170578081fd5b833561517b81615cc4565b9250602084013561518b81615cc4565b929592945050506040919091013590565b600080600080608085870312156151b1578182fd5b84356151bc81615cc4565b935060208501356151cc81615cc4565b925060408501359150606085013567ffffffffffffffff8111156151ee578182fd5b8501601f810187136151fe578182fd5b803561521161520c82615c76565b615c52565b818152886020838501011115615225578384fd5b81602084016020830137908101602001929092525092959194509250565b60008060408385031215615255578182fd5b823561526081615cc4565b915060208301356150f881615cd9565b60008060408385031215615282578182fd5b823561528d81615cc4565b946020939093013593505050565b6000806000606084860312156152af578081fd5b83356152ba81615cc4565b92506020840135915060408401356152d181615cc4565b809150509250925092565b60008060008060008060c087890312156152f4578384fd5b86356152ff81615cc4565b95506020870135945060408701359350606087013561531d81615d0b565b9598949750929560808101359460a0909101359350915050565b60008060208385031215615349578182fd5b823567ffffffffffffffff80821115615360578384fd5b818501915085601f830112615373578384fd5b813581811115615381578485fd5b8660208083028501011115615394578485fd5b60209290920196919550909350505050565b6000602082840312156153b7578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146134ca578182fd5b6000602082840312156153f7578081fd5b81356134ca81615ce7565b600060208284031215615413578081fd5b815167ffffffffffffffff811115615429578182fd5b8201601f81018413615439578182fd5b805161544761520c82615c76565b81815285602083850101111561545b578384fd5b614594826020830160208601615c98565b60006080828403121561547d578081fd5b50919050565b600060a0828403121561547d578081fd5b600060c0828403121561547d578081fd5b600081830360808112156154b7578182fd5b6040516040810167ffffffffffffffff82821081831117156154d557fe5b8160405260608412156154e6578485fd5b60a08301935081841081851117156154fa57fe5b50826040528435925061550c83615cc4565b91825260208401359161551e83615cc4565b8260608301526155306040860161509c565b608083015281526155436060850161507f565b6020820152949350505050565b6000610160828403121561547d578081fd5b600060208284031215615573578081fd5b81356134ca81615cf6565b60008060408385031215615590578182fd5b825161559b81615cf6565b60208401519092506150f881615cf6565b600080600080600060a086880312156155c3578283fd5b85516155ce81615cf6565b80955050602086015193506040860151925060608601516155ee81615cf6565b60808701519092506155ff81615cf6565b809150509295509295909350565b600080600080600080600060e0888a031215615627578485fd5b875161563281615cc4565b602089015190975061564381615ce7565b95506156516040890161508a565b945061565f6060890161508a565b935061566d6080890161508a565b925060a088015161567d81615d0b565b60c089015190925061568e81615cd9565b8091505092959891949750929550565b6000602082840312156156af578081fd5b61148c8261509c565b6000602082840312156156c9578081fd5b5035919050565b600080604083850312156156e2578182fd5b8235915060208301356150f881615cc4565b60008060408385031215615706578182fd5b505080516020909101519092909150565b6000806000806060858703121561572c578182fd5b8435935060208501359250604085013567ffffffffffffffff80821115615751578384fd5b818701915087601f830112615764578384fd5b813581811115615772578485fd5b886020828501011115615783578485fd5b95989497505060200194505050565b600081518084526157aa816020860160208601615c98565b601f01601f19169290920160200192915050565b60020b9052565b6001600160801b03169052565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60006001600160a01b03871682528560020b60208301528460020b60408301526001600160801b038416606083015260a06080830152614fae60a0830184615792565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b6001600160a01b039390931683526001600160801b03918216602084015216604082015260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015615911577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526158ff858351615792565b945092850192908501906001016158c5565b5092979650505050505050565b901515815260200190565b90815260200190565b6001600160a01b03929092168252602082015260400190565b600293840b81529190920b60208201526001600160801b03909116604082015260600190565b60006020825261148c6020830184615792565b6020808252600c908201527f4e6f7420617070726f7665640000000000000000000000000000000000000000604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526014908201527f507269636520736c69707061676520636865636b000000000000000000000000604082015260600190565b60208082526010908201527f496e76616c696420746f6b656e20494400000000000000000000000000000000604082015260600190565b6020808252600b908201527f4e6f7420636c6561726564000000000000000000000000000000000000000000604082015260600190565b815180516001600160a01b03908116835260208083015182168185015260409283015162ffffff1692840192909252920151909116606082015260800190565b6001600160801b039390931683526020830191909152604082015260600190565b9384526001600160801b039290921660208401526040830152606082015260800190565b918252602082015260400190565b6bffffffffffffffffffffffff8d1681526001600160a01b038c811660208301528b811660408301528a16606082015262ffffff89166080820152600288900b60a08201526101808101615ba760c08301896157be565b615bb460e08301886157c5565b8561010083015284610120830152615bd06101408301856157c5565b615bde6101608301846157c5565b9d9c50505050505050505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112615c23578283fd5b83018035915067ffffffffffffffff821115615c3d578283fd5b602001915036819003821315613b0f57600080fd5b60405181810167ffffffffffffffff81118282101715615c6e57fe5b604052919050565b600067ffffffffffffffff821115615c8a57fe5b50601f01601f191660200190565b60005b83811015615cb3578181015183820152602001615c9b565b8381111561296d5750506000910152565b6001600160a01b038116811461506357600080fd5b801515811461506357600080fd5b8060020b811461506357600080fd5b6001600160801b038116811461506357600080fd5b60ff8116811461506357600080fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732315065726d69743a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e7366657220746f20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a164736f6c6343000706000a","deployedBytecode":"0x6080604052600436106102895760003560e01c80636352211e11610153578063ac9650d8116100cb578063d34879971161007f578063e985e9c511610064578063e985e9c5146106f5578063f3995c6714610715578063fc6f7865146107285761030d565b8063d3487997146106c2578063df2ab5bb146106e25761030d565b8063c2e3140a116100b0578063c2e3140a1461067a578063c45a01551461068d578063c87b56dd146106a25761030d565b8063ac9650d81461063a578063b88d4fde1461065a5761030d565b8063883164561161012257806399fbab881161010757806399fbab88146105cf578063a22cb46514610607578063a4a78f0c146106275761030d565b8063883164561461059757806395d89b41146105ba5761030d565b80636352211e1461052f5780636c0360eb1461054f57806370a08231146105645780637ac2ff7b146105845761030d565b806323b872dd1161020157806342966c68116101b557806349404b7c1161019a57806349404b7c146104e75780634aa4a4fc146104fa5780634f6ccce71461050f5761030d565b806342966c68146104c15780634659a494146104d45761030d565b806330adf81f116101e657806330adf81f146104775780633644e5151461048c57806342842e0e146104a15761030d565b806323b872dd146104375780632f745c59146104575761030d565b80630c49ccbe1161025857806313ead5621161023d57806313ead562146103e057806318160ddd146103f3578063219f5d17146104155761030d565b80630c49ccbe146103b757806312210e8a146103d85761030d565b806301ffc9a71461031257806306fdde0314610348578063081812fc1461036a578063095ea7b3146103975761030d565b3661030d57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461030b576040805162461bcd60e51b815260206004820152600960248201527f4e6f742057455448390000000000000000000000000000000000000000000000604482015290519081900360640190fd5b005b600080fd5b34801561031e57600080fd5b5061033261032d3660046153a6565b61073b565b60405161033f919061591e565b60405180910390f35b34801561035457600080fd5b5061035d610776565b60405161033f9190615971565b34801561037657600080fd5b5061038a6103853660046156b8565b61080c565b60405161033f91906157e2565b3480156103a357600080fd5b5061030b6103b2366004615270565b610868565b6103ca6103c5366004615483565b61093e565b60405161033f929190615b42565b61030b610daa565b61038a6103ee366004615103565b610dbc565b3480156103ff57600080fd5b506104086110c9565b60405161033f9190615929565b610428610423366004615494565b6110da565b60405161033f93929190615afd565b34801561044357600080fd5b5061030b61045236600461515c565b611413565b34801561046357600080fd5b50610408610472366004615270565b61146a565b34801561048357600080fd5b50610408611495565b34801561049857600080fd5b506104086114b9565b3480156104ad57600080fd5b5061030b6104bc36600461515c565b611577565b61030b6104cf3660046156b8565b611592565b61030b6104e23660046152dc565b611661565b61030b6104f53660046156d0565b611714565b34801561050657600080fd5b5061038a611894565b34801561051b57600080fd5b5061040861052a3660046156b8565b6118b8565b34801561053b57600080fd5b5061038a61054a3660046156b8565b6118ce565b34801561055b57600080fd5b5061035d6118f6565b34801561057057600080fd5b5061040861057f3660046150af565b6118fb565b61030b6105923660046152dc565b611963565b6105aa6105a5366004615550565b611e0f565b60405161033f9493929190615b1e565b3480156105c657600080fd5b5061035d612370565b3480156105db57600080fd5b506105ef6105ea3660046156b8565b6123d1565b60405161033f9c9b9a99989796959493929190615b50565b34801561061357600080fd5b5061030b610622366004615243565b612600565b61030b6106353660046152dc565b612723565b61064d610648366004615337565b6127d5565b60405161033f91906158a0565b34801561066657600080fd5b5061030b61067536600461519c565b612915565b61030b6106883660046152dc565b612973565b34801561069957600080fd5b5061038a612a1b565b3480156106ae57600080fd5b5061035d6106bd3660046156b8565b612a3f565b3480156106ce57600080fd5b5061030b6106dd366004615717565b612b0e565b61030b6106f036600461529b565b612b8c565b34801561070157600080fd5b506103326107103660046150cb565b612c6f565b61030b6107233660046152dc565b612c9d565b6103ca61073636600461546c565b612d28565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108025780601f106107d757610100808354040283529160200191610802565b820191906000526020600020905b8154815290600101906020018083116107e557829003601f168201915b5050505050905090565b600061081782613246565b61083c5760405162461bcd60e51b8152600401610833906159bb565b60405180910390fd5b506000908152600c60205260409020546c0100000000000000000000000090046001600160a01b031690565b6000610873826118ce565b9050806001600160a01b0316836001600160a01b031614156108c65760405162461bcd60e51b8152600401808060200182810382526021815260200180615ee26021913960400191505060405180910390fd5b806001600160a01b03166108d8613253565b6001600160a01b031614806108f457506108f481610710613253565b61092f5760405162461bcd60e51b8152600401808060200182810382526038815260200180615e0c6038913960400191505060405180910390fd5b6109398383613257565b505050565b600080823561094d33826132db565b6109695760405162461bcd60e51b815260040161083390615984565b836080013580610977613377565b11156109ca576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b60006109dc6040870160208801615562565b6001600160801b0316116109ef57600080fd5b84356000908152600c602090815260409182902060018101549092600160801b9091046001600160801b031691610a2a918901908901615562565b6001600160801b0316816001600160801b03161015610a4857600080fd5b60018281015469ffffffffffffffffffff166000908152600b60209081526040808320815160608101835281546001600160a01b039081168252919095015490811692850192909252600160a01b90910462ffffff1690830152610acc7f00000000000000000000000000000000000000000000000000000000000000008361337b565b60018501549091506001600160a01b0382169063a34123a7906a01000000000000000000008104600290810b91600160681b9004900b610b1260408e0160208f01615562565b6040518463ffffffff1660e01b8152600401610b309392919061594b565b6040805180830381600087803b158015610b4957600080fd5b505af1158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8191906156f4565b909850965060408901358810801590610b9e575088606001358710155b610bba5760405162461bcd60e51b815260040161083390615a18565b6001840154600090610bea9030906a01000000000000000000008104600290810b91600160681b9004900b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b8152600401610c1b9190615929565b60a06040518083038186803b158015610c3357600080fd5b505afa158015610c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b91906155ac565b50509250925050610c9087600201548303876001600160801b0316600160801b6134d1565b6004880180546fffffffffffffffffffffffffffffffff198116928e016001600160801b039182160181169290921790556003880154610cda91908303908816600160801b6134d1565b6004880180546001600160801b03808216938e01600160801b9283900482160116029190911790556002870182905560038701819055610d2060408d0160208e01615562565b86038760010160106101000a8154816001600160801b0302191690836001600160801b031602179055508b600001357f26f6a048ee9138f2c0ce266f322cb99228e8d619ae2bff30c67f8dcf9d2377b48d6020016020810190610d839190615562565b8d8d604051610d9493929190615afd565b60405180910390a2505050505050505050915091565b4715610dba57610dba3347613580565b565b6000836001600160a01b0316856001600160a01b031610610ddc57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631698ee828686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff168152602001935050505060206040518083038186803b158015610e6757600080fd5b505afa158015610e7b573d6000803e3d6000fd5b505050506040513d6020811015610e9157600080fd5b505190506001600160a01b038116610fe0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a16712958686866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018262ffffff1681526020019350505050602060405180830381600087803b158015610f3057600080fd5b505af1158015610f44573d6000803e3d6000fd5b505050506040513d6020811015610f5a57600080fd5b5051604080517ff637731d0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015291519293509083169163f637731d9160248082019260009290919082900301818387803b158015610fc357600080fd5b505af1158015610fd7573d6000803e3d6000fd5b505050506110c1565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561101b57600080fd5b505afa15801561102f573d6000803e3d6000fd5b505050506040513d60e081101561104557600080fd5b505190506001600160a01b0381166110bf57816001600160a01b031663f637731d846040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156110a657600080fd5b505af11580156110ba573d6000803e3d6000fd5b505050505b505b949350505050565b60006110d56002613689565b905090565b60008060008360a00135806110ed613377565b1115611140576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b84356000908152600c6020908152604080832060018082015469ffffffffffffffffffff81168652600b855283862084516060808201875282546001600160a01b039081168352929094015480831682890190815262ffffff600160a01b9092048216838901908152885161014081018a528451861681529151909416818a01529251168287015230828501526a01000000000000000000008304600290810b810b608080850191909152600160681b909404810b900b60a0830152958c013560c0820152938b013560e0850152908a0135610100840152890135610120830152929061122c90613694565b6001870154939a50919850965091506000906112669030906a01000000000000000000008104600290810b91600160681b9004900b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b81526004016112979190615929565b60a06040518083038186803b1580156112af57600080fd5b505afa1580156112c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e791906155ac565b50509250925050611323866002015483038760010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b6004870180546001600160801b0380821690930183166fffffffffffffffffffffffffffffffff19909116179055600387015460018801546113739291840391600160801b9182900416906134d1565b6004870180546001600160801b03600160801b80830482169094018116840291811691909117909155600288018490556003880183905560018801805483810483168e018316909302929091169190911790556040518b35907f3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f906113fd908d908d908d90615afd565b60405180910390a2505050505050509193909250565b61142461141e613253565b826132db565b61145f5760405162461bcd60e51b8152600401808060200182810382526031815260200180615f036031913960400191505060405180910390fd5b6109398383836138cf565b6001600160a01b038216600090815260016020526040812061148c9083613a1b565b90505b92915050565b7f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad81565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611526613a27565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b031681526020019550505050505060405160208183030381529060405280519060200120905090565b61093983838360405180602001604052806000815250612915565b8061159d33826132db565b6115b95760405162461bcd60e51b815260040161083390615984565b6000828152600c602052604090206001810154600160801b90046001600160801b03161580156115f4575060048101546001600160801b0316155b801561161257506004810154600160801b90046001600160801b0316155b61162e5760405162461bcd60e51b815260040161083390615a86565b6000838152600c602052604081208181556001810182905560028101829055600381018290556004015561093983613a2b565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e4810183905290516001600160a01b03881691638fcbaf0c9161010480830192600092919082900301818387803b1580156116f457600080fd5b505af1158015611708573d6000803e3d6000fd5b50505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561178357600080fd5b505afa158015611797573d6000803e3d6000fd5b505050506040513d60208110156117ad57600080fd5b5051905082811015611806576040805162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b8015610939577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561187257600080fd5b505af1158015611886573d6000803e3d6000fd5b505050506109398282613580565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806118c6600284613af8565b509392505050565b600061148f82604051806060016040528060298152602001615e6e6029913960029190613b16565b606090565b60006001600160a01b0382166119425760405162461bcd60e51b815260040180806020018281038252602a815260200180615e44602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061148f90613689565b8361196c613377565b11156119bf576040805162461bcd60e51b815260206004820152600e60248201527f5065726d69742065787069726564000000000000000000000000000000000000604482015290519081900360640190fd5b60006119c96114b9565b7f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad88886119f581613b23565b604080516020808201969096526001600160a01b03909416848201526060840192909252608083015260a08083018a90528151808403909101815260c0830182528051908401207f190100000000000000000000000000000000000000000000000000000000000060e084015260e283019490945261010280830194909452805180830390940184526101229091019052815191012090506000611a98876118ce565b9050806001600160a01b0316886001600160a01b03161415611aeb5760405162461bcd60e51b8152600401808060200182810382526027815260200180615d6f6027913960400191505060405180910390fd5b611af481613b62565b15611ccf576040805160208082018790528183018690527fff0000000000000000000000000000000000000000000000000000000000000060f889901b16606083015282516041818403018152606183018085527f1626ba7e0000000000000000000000000000000000000000000000000000000090526065830186815260858401948552815160a585015281516001600160a01b03871695631626ba7e958995919260c59091019185019080838360005b83811015611bbe578181015183820152602001611ba6565b50505050905090810190601f168015611beb5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b158015611c0957600080fd5b505afa158015611c1d573d6000803e3d6000fd5b505050506040513d6020811015611c3357600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e0000000000000000000000000000000000000000000000000000000014611cca576040805162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015290519081900360640190fd5b611dfb565b600060018387878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611d2b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611d93576040805162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015290519081900360640190fd5b816001600160a01b0316816001600160a01b031614611df9576040805162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a65640000000000000000000000000000000000000000604482015290519081900360640190fd5b505b611e058888613257565b5050505050505050565b60008060008084610140013580611e24613377565b1115611e77576040805162461bcd60e51b815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b604080516101408101909152600090611f439080611e9860208b018b6150af565b6001600160a01b03168152602001896020016020810190611eb991906150af565b6001600160a01b03168152602001611ed760608b0160408c0161569e565b62ffffff168152306020820152604001611ef760808b0160608c016153e6565b60020b8152602001611f0f60a08b0160808c016153e6565b60020b81526020018960a0013581526020018960c0013581526020018960e001358152602001896101000135815250613694565b92975090955093509050611fb7611f6261014089016101208a016150af565b600d80547fffffffffffffffffffff000000000000000000000000000000000000000000008116600175ffffffffffffffffffffffffffffffffffffffffffff92831690810190921617909155975087613b68565b6000611fe230611fcd60808b0160608c016153e6565b611fdd60a08c0160808d016153e6565b613477565b9050600080836001600160a01b031663514ea4bf846040518263ffffffff1660e01b81526004016120139190615929565b60a06040518083038186803b15801561202b57600080fd5b505afa15801561203f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206391906155ac565b5050925092505060006120dc8560405180606001604052808e600001602081019061208e91906150af565b6001600160a01b031681526020018e60200160208101906120af91906150af565b6001600160a01b031681526020018e60400160208101906120d0919061569e565b62ffffff169052613c96565b905060405180610140016040528060006bffffffffffffffffffffffff16815260200160006001600160a01b031681526020018269ffffffffffffffffffff1681526020018c606001602081019061213491906153e6565b60020b815260200161214c60a08e0160808f016153e6565b60020b81526020018a6001600160801b0316815260200184815260200183815260200160006001600160801b0316815260200160006001600160801b0316815250600c60008c815260200190815260200160002060008201518160000160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550602082015181600001600c6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff160217905550606082015181600101600a6101000a81548162ffffff021916908360020b62ffffff160217905550608082015181600101600d6101000a81548162ffffff021916908360020b62ffffff16021790555060a08201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060c0820151816002015560e082015181600301556101008201518160040160006101000a8154816001600160801b0302191690836001600160801b031602179055506101208201518160040160106101000a8154816001600160801b0302191690836001600160801b03160217905550905050897f3067048beee31b25b2f1681f88dac838c8bba36af25bfb2b7cf7473a5847e35f8a8a8a60405161235b93929190615afd565b60405180910390a25050505050509193509193565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108025780601f106107d757610100808354040283529160200191610802565b6000818152600c6020908152604080832081516101408101835281546bffffffffffffffffffffffff811682526001600160a01b036c010000000000000000000000009091041693810193909352600181015469ffffffffffffffffffff81169284018390526a01000000000000000000008104600290810b810b810b6060860152600160681b8204810b810b810b60808601526001600160801b03600160801b92839004811660a08701529083015460c0860152600383015460e0860152600490920154808316610100860152041661012083015282918291829182918291829182918291829182918291906124da5760405162461bcd60e51b815260040161083390615a4f565b6000600b6000836040015169ffffffffffffffffffff1669ffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160149054906101000a900462ffffff1662ffffff1662ffffff1681525050905081600001518260200151826000015183602001518460400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001519d509d509d509d509d509d509d509d509d509d509d509d50505091939597999b5091939597999b565b612608613253565b6001600160a01b0316826001600160a01b0316141561266e576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806005600061267b613253565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091556126dd613253565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051600019916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b15801561278d57600080fd5b505afa1580156127a1573d6000803e3d6000fd5b505050506040513d60208110156127b757600080fd5b505110156127cd576127cd868686868686611661565b505050505050565b60608167ffffffffffffffff811180156127ee57600080fd5b5060405190808252806020026020018201604052801561282257816020015b606081526020019060019003908161280d5790505b50905060005b8281101561290e576000803086868581811061284057fe5b90506020028101906128529190615bef565b6040516128609291906157d2565b600060405180830381855af49150503d806000811461289b576040519150601f19603f3d011682016040523d82523d6000602084013e6128a0565b606091505b5091509150816128ec576044815110156128b957600080fd5b600481019050808060200190518101906128d39190615402565b60405162461bcd60e51b81526004016108339190615971565b808484815181106128f957fe5b60209081029190910101525050600101612828565b5092915050565b612926612920613253565b836132db565b6129615760405162461bcd60e51b8152600401808060200182810382526031815260200180615f036031913960400191505060405180910390fd5b61296d84848484613de6565b50505050565b604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152905186916001600160a01b0389169163dd62ed3e91604480820192602092909190829003018186803b1580156129db57600080fd5b505afa1580156129ef573d6000803e3d6000fd5b505050506040513d6020811015612a0557600080fd5b505110156127cd576127cd868686868686612c9d565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060612a4a82613246565b612a5357600080fd5b6040517fe9dc63750000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e9dc637590612aba9030908690600401615932565b60006040518083038186803b158015612ad257600080fd5b505afa158015612ae6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261148f9190810190615402565b6000612b1c828401846154a5565b9050612b4c7f00000000000000000000000000000000000000000000000000000000000000008260000151613e38565b508415612b67578051516020820151612b6791903388613e5b565b8315612b8557612b8581600001516020015182602001513387613e5b565b5050505050565b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612bdb57600080fd5b505afa158015612bef573d6000803e3d6000fd5b505050506040513d6020811015612c0557600080fd5b5051905082811015612c5e576040805162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b801561296d5761296d848383613feb565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c4810183905290516001600160a01b0388169163d505accf9160e480830192600092919082900301818387803b1580156116f457600080fd5b6000808235612d3733826132db565b612d535760405162461bcd60e51b815260040161083390615984565b6000612d656060860160408701615562565b6001600160801b03161180612d9257506000612d876080860160608701615562565b6001600160801b0316115b612d9b57600080fd5b600080612dae60408701602088016150af565b6001600160a01b031614612dd157612dcc60408601602087016150af565b612dd3565b305b85356000908152600c6020908152604080832060018082015469ffffffffffffffffffff168552600b8452828520835160608101855281546001600160a01b039081168252919092015490811694820194909452600160a01b90930462ffffff169183019190915292935090612e697f00000000000000000000000000000000000000000000000000000000000000008361337b565b600484015460018501549192506001600160801b0380821692600160801b92839004821692900416156130865760018501546040517fa34123a70000000000000000000000000000000000000000000000000000000081526001600160a01b0385169163a34123a791612f00916a01000000000000000000008104600290810b92600160681b909204900b9060009060040161594b565b6040805180830381600087803b158015612f1957600080fd5b505af1158015612f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5191906156f4565b5050600185015460009081906001600160a01b0386169063514ea4bf90612f969030906a01000000000000000000008104600290810b91600160681b9004900b613477565b6040518263ffffffff1660e01b8152600401612fb29190615929565b60a06040518083038186803b158015612fca57600080fd5b505afa158015612fde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061300291906155ac565b5050925092505061303e876002015483038860010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b84019350613077876003015482038860010160109054906101000a90046001600160801b03166001600160801b0316600160801b6134d1565b60028801929092556003870155015b6000806001600160801b0384166130a360608e0160408f01615562565b6001600160801b0316116130c6576130c160608d0160408e01615562565b6130c8565b835b836001600160801b03168d60600160208101906130e59190615562565b6001600160801b0316116131085761310360808e0160608f01615562565b61310a565b835b60018901546040517f4f1eb3d80000000000000000000000000000000000000000000000000000000081529294509092506001600160a01b03871691634f1eb3d89161317d918c916a01000000000000000000008104600290810b92600160681b909204900b9088908890600401615839565b6040805180830381600087803b15801561319657600080fd5b505af11580156131aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131ce919061557e565b6004890180546fffffffffffffffffffffffffffffffff196001600160801b03918216600160801b878a0384160217168689038216179091556040519281169d50169a508c35907f40d0efd1a53d60ecbf40971b9daf7dc90178c3aadc7aab1765632738fa8b8f0190610d94908b9086908690615876565b600061148f60028361417b565b3390565b6000818152600c6020526040902080546bffffffffffffffffffffffff166c010000000000000000000000006001600160a01b0385169081029190911790915581906132a2826118ce565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006132e682613246565b6133215760405162461bcd60e51b815260040180806020018281038252602c815260200180615de0602c913960400191505060405180910390fd5b600061332c836118ce565b9050806001600160a01b0316846001600160a01b031614806133675750836001600160a01b031661335c8461080c565b6001600160a01b0316145b806110c157506110c18185612c6f565b4290565b600081602001516001600160a01b031682600001516001600160a01b0316106133a357600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516bffffffffffffffffffffffff19606086901b16602080830191909152600285810b60e890811b60348501529085900b901b60378301528251601a818403018152603a90920190925280519101205b9392505050565b600080806000198587098686029250828110908390030390508061350757600084116134fc57600080fd5b5082900490506134ca565b80841161351357600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b602083106135cc5780518252601f1990920191602091820191016135ad565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461362e576040519150601f19603f3d011682016040523d82523d6000602084013e613633565b606091505b5050905080610939576040805162461bcd60e51b815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600061148f82614187565b6000806000806000604051806060016040528087600001516001600160a01b0316815260200187602001516001600160a01b03168152602001876040015162ffffff1681525090506137067f00000000000000000000000000000000000000000000000000000000000000008261337b565b91506000826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561374357600080fd5b505afa158015613757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061377b919061560d565b50505050505090506000613792886080015161418b565b905060006137a38960a0015161418b565b90506137ba8383838c60c001518d60e001516144d9565b9750505050816001600160a01b0316633c8a7d8d876060015188608001518960a00151896040518060400160405280888152602001336001600160a01b031681525060405160200161380c9190615abd565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161383b9594939291906157f6565b6040805180830381600087803b15801561385457600080fd5b505af1158015613868573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061388c91906156f4565b610100880151919550935084108015906138ab57508561012001518310155b6138c75760405162461bcd60e51b815260040161083390615a18565b509193509193565b826001600160a01b03166138e2826118ce565b6001600160a01b0316146139275760405162461bcd60e51b8152600401808060200182810382526029815260200180615eb96029913960400191505060405180910390fd5b6001600160a01b03821661396c5760405162461bcd60e51b8152600401808060200182810382526024815260200180615d966024913960400191505060405180910390fd5b613977838383610939565b613982600082613257565b6001600160a01b03831660009081526001602052604090206139a4908261459d565b506001600160a01b03821660009081526001602052604090206139c790826145a9565b506139d4600282846145b5565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061148c83836145cb565b4690565b6000613a36826118ce565b9050613a4481600084610939565b613a4f600083613257565b6000828152600860205260409020546002600019610100600184161502019091160415613a8d576000828152600860205260408120613a8d9161501f565b6001600160a01b0381166000908152600160205260409020613aaf908361459d565b50613abb60028361462f565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000808080613b07868661463b565b909450925050505b9250929050565b60006110c18484846146b6565b6000908152600c6020526040902080546bffffffffffffffffffffffff19811660016bffffffffffffffffffffffff9283169081019092161790915590565b3b151590565b6001600160a01b038216613bc3576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b613bcc81613246565b15613c1e576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b613c2a60008383610939565b6001600160a01b0382166000908152600160205260409020613c4c90826145a9565b50613c59600282846145b5565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0382166000908152600a602052604090205469ffffffffffffffffffff168061148f5750600d8054600169ffffffffffffffffffff76010000000000000000000000000000000000000000000080840482168381019092160275ffffffffffffffffffffffffffffffffffffffffffff909316929092179092556001600160a01b038085166000908152600a6020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffff000000000000000000001686179055848352600b825291829020865181549085167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617825591870151950180549287015162ffffff16600160a01b027fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff969094169290911691909117939093161790915592915050565b613df18484846138cf565b613dfd84848484614780565b61296d5760405162461bcd60e51b8152600401808060200182810382526032815260200180615d3d6032913960400191505060405180910390fd5b6000613e44838361337b565b9050336001600160a01b0382161461148f57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316148015613e9c5750804710155b15613fbe577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015613efc57600080fd5b505af1158015613f10573d6000803e3d6000fd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015613f8c57600080fd5b505af1158015613fa0573d6000803e3d6000fd5b505050506040513d6020811015613fb657600080fd5b5061296d9050565b6001600160a01b038316301415613fdf57613fda848383613feb565b61296d565b61296d8484848461495c565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b602083106140955780518252601f199092019160209182019101614076565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146140f7576040519150601f19603f3d011682016040523d82523d6000602084013e6140fc565b606091505b509150915081801561412a57508051158061412a575080806020019051602081101561412757600080fd5b50515b612b85576040805162461bcd60e51b815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600061148c8383614af4565b5490565b60008060008360020b126141a2578260020b6141aa565b8260020b6000035b9050620d89e8811115614204576040805162461bcd60e51b815260206004820152600160248201527f5400000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006001821661421857600160801b61422a565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561425e576ffff97272373d413259a46990580e213a0260801c5b600482161561427d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561429c576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156142bb576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156142da576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156142f9576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615614318576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615614338576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615614358576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615614378576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615614398576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156143b8576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156143d8576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156143f8576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615614418576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615614439576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615614459576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615614478576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615614495576b048a170391f7dc42444e8fa20260801c5b60008460020b13156144b05780600019816144ac57fe5b0490505b6401000000008106156144c45760016144c7565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b031611156144f9579293925b846001600160a01b0316866001600160a01b0316116145245761451d858585614b0c565b9050614594565b836001600160a01b0316866001600160a01b0316101561458657600061454b878686614b0c565b9050600061455a878986614b78565b9050806001600160801b0316826001600160801b03161061457b578061457d565b815b92505050614594565b614591858584614b78565b90505b95945050505050565b600061148c8383614bbe565b600061148c8383614c84565b60006110c184846001600160a01b038516614cce565b8154600090821061460d5760405162461bcd60e51b8152600401808060200182810382526022815260200180615d1b6022913960400191505060405180910390fd5b82600001828154811061461c57fe5b9060005260206000200154905092915050565b600061148c8383614d65565b81546000908190831061467f5760405162461bcd60e51b8152600401808060200182810382526022815260200180615e976022913960400191505060405180910390fd5b600084600001848154811061469057fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816147515760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156147165781810151838201526020016146fe565b50505050905090810190601f1680156147435780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061476457fe5b9060005260206000209060020201600101549150509392505050565b6000614794846001600160a01b0316613b62565b6147a0575060016110c1565b60006148f17f150b7a02000000000000000000000000000000000000000000000000000000006147ce613253565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561483557818101518382015260200161481d565b50505050905090810190601f1680156148625780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001615d3d603291396001600160a01b0388169190614e39565b9050600081806020019051602081101561490a57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001492505050949350505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b60208310614a0e5780518252601f1990920191602091820191016149ef565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114614a70576040519150601f19603f3d011682016040523d82523d6000602084013e614a75565b606091505b5091509150818015614aa3575080511580614aa35750808060200190516020811015614aa057600080fd5b50515b6127cd576040805162461bcd60e51b815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60009081526001919091016020526040902054151590565b6000826001600160a01b0316846001600160a01b03161115614b2c579192915b6000614b58856001600160a01b0316856001600160a01b03166c010000000000000000000000006134d1565b9050614594614b7384838888036001600160a01b03166134d1565b614e48565b6000826001600160a01b0316846001600160a01b03161115614b98579192915b6110c1614b73836c010000000000000000000000008787036001600160a01b03166134d1565b60008181526001830160205260408120548015614c7a5783546000198083019190810190600090879083908110614bf157fe5b9060005260206000200154905080876000018481548110614c0e57fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080614c3e57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061148f565b600091505061148f565b6000614c908383614af4565b614cc65750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561148f565b50600061148f565b600082815260018401602052604081205480614d335750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556134ca565b82856000016001830381548110614d4657fe5b90600052602060002090600202016001018190555060009150506134ca565b60008181526001830160205260408120548015614c7a5783546000198083019190810190600090879083908110614d9857fe5b9060005260206000209060020201905080876000018481548110614db857fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080614df757fe5b600082815260208082206002600019909401938402018281556001908101839055929093558881528982019092526040822091909155945061148f9350505050565b60606110c18484600085614e5e565b806001600160801b038116811461077157600080fd5b606082471015614e9f5760405162461bcd60e51b8152600401808060200182810382526026815260200180615dba6026913960400191505060405180910390fd5b614ea885613b62565b614ef9576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310614f375780518252601f199092019160209182019101614f18565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114614f99576040519150601f19603f3d011682016040523d82523d6000602084013e614f9e565b606091505b5091509150614fae828286614fb9565b979650505050505050565b60608315614fc85750816134ca565b825115614fd85782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156147165781810151838201526020016146fe565b50805460018160011615610100020316600290046000825580601f106150455750615063565b601f0160209004906000526020600020908101906150639190615066565b50565b5b8082111561507b5760008155600101615067565b5090565b803561077181615cc4565b805161ffff8116811461077157600080fd5b803562ffffff8116811461077157600080fd5b6000602082840312156150c0578081fd5b81356134ca81615cc4565b600080604083850312156150dd578081fd5b82356150e881615cc4565b915060208301356150f881615cc4565b809150509250929050565b60008060008060808587031215615118578182fd5b843561512381615cc4565b9350602085013561513381615cc4565b92506151416040860161509c565b9150606085013561515181615cc4565b939692955090935050565b600080600060608486031215615170578081fd5b833561517b81615cc4565b9250602084013561518b81615cc4565b929592945050506040919091013590565b600080600080608085870312156151b1578182fd5b84356151bc81615cc4565b935060208501356151cc81615cc4565b925060408501359150606085013567ffffffffffffffff8111156151ee578182fd5b8501601f810187136151fe578182fd5b803561521161520c82615c76565b615c52565b818152886020838501011115615225578384fd5b81602084016020830137908101602001929092525092959194509250565b60008060408385031215615255578182fd5b823561526081615cc4565b915060208301356150f881615cd9565b60008060408385031215615282578182fd5b823561528d81615cc4565b946020939093013593505050565b6000806000606084860312156152af578081fd5b83356152ba81615cc4565b92506020840135915060408401356152d181615cc4565b809150509250925092565b60008060008060008060c087890312156152f4578384fd5b86356152ff81615cc4565b95506020870135945060408701359350606087013561531d81615d0b565b9598949750929560808101359460a0909101359350915050565b60008060208385031215615349578182fd5b823567ffffffffffffffff80821115615360578384fd5b818501915085601f830112615373578384fd5b813581811115615381578485fd5b8660208083028501011115615394578485fd5b60209290920196919550909350505050565b6000602082840312156153b7578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146134ca578182fd5b6000602082840312156153f7578081fd5b81356134ca81615ce7565b600060208284031215615413578081fd5b815167ffffffffffffffff811115615429578182fd5b8201601f81018413615439578182fd5b805161544761520c82615c76565b81815285602083850101111561545b578384fd5b614594826020830160208601615c98565b60006080828403121561547d578081fd5b50919050565b600060a0828403121561547d578081fd5b600060c0828403121561547d578081fd5b600081830360808112156154b7578182fd5b6040516040810167ffffffffffffffff82821081831117156154d557fe5b8160405260608412156154e6578485fd5b60a08301935081841081851117156154fa57fe5b50826040528435925061550c83615cc4565b91825260208401359161551e83615cc4565b8260608301526155306040860161509c565b608083015281526155436060850161507f565b6020820152949350505050565b6000610160828403121561547d578081fd5b600060208284031215615573578081fd5b81356134ca81615cf6565b60008060408385031215615590578182fd5b825161559b81615cf6565b60208401519092506150f881615cf6565b600080600080600060a086880312156155c3578283fd5b85516155ce81615cf6565b80955050602086015193506040860151925060608601516155ee81615cf6565b60808701519092506155ff81615cf6565b809150509295509295909350565b600080600080600080600060e0888a031215615627578485fd5b875161563281615cc4565b602089015190975061564381615ce7565b95506156516040890161508a565b945061565f6060890161508a565b935061566d6080890161508a565b925060a088015161567d81615d0b565b60c089015190925061568e81615cd9565b8091505092959891949750929550565b6000602082840312156156af578081fd5b61148c8261509c565b6000602082840312156156c9578081fd5b5035919050565b600080604083850312156156e2578182fd5b8235915060208301356150f881615cc4565b60008060408385031215615706578182fd5b505080516020909101519092909150565b6000806000806060858703121561572c578182fd5b8435935060208501359250604085013567ffffffffffffffff80821115615751578384fd5b818701915087601f830112615764578384fd5b813581811115615772578485fd5b886020828501011115615783578485fd5b95989497505060200194505050565b600081518084526157aa816020860160208601615c98565b601f01601f19169290920160200192915050565b60020b9052565b6001600160801b03169052565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60006001600160a01b03871682528560020b60208301528460020b60408301526001600160801b038416606083015260a06080830152614fae60a0830184615792565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b6001600160a01b039390931683526001600160801b03918216602084015216604082015260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015615911577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526158ff858351615792565b945092850192908501906001016158c5565b5092979650505050505050565b901515815260200190565b90815260200190565b6001600160a01b03929092168252602082015260400190565b600293840b81529190920b60208201526001600160801b03909116604082015260600190565b60006020825261148c6020830184615792565b6020808252600c908201527f4e6f7420617070726f7665640000000000000000000000000000000000000000604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526014908201527f507269636520736c69707061676520636865636b000000000000000000000000604082015260600190565b60208082526010908201527f496e76616c696420746f6b656e20494400000000000000000000000000000000604082015260600190565b6020808252600b908201527f4e6f7420636c6561726564000000000000000000000000000000000000000000604082015260600190565b815180516001600160a01b03908116835260208083015182168185015260409283015162ffffff1692840192909252920151909116606082015260800190565b6001600160801b039390931683526020830191909152604082015260600190565b9384526001600160801b039290921660208401526040830152606082015260800190565b918252602082015260400190565b6bffffffffffffffffffffffff8d1681526001600160a01b038c811660208301528b811660408301528a16606082015262ffffff89166080820152600288900b60a08201526101808101615ba760c08301896157be565b615bb460e08301886157c5565b8561010083015284610120830152615bd06101408301856157c5565b615bde6101608301846157c5565b9d9c50505050505050505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112615c23578283fd5b83018035915067ffffffffffffffff821115615c3d578283fd5b602001915036819003821315613b0f57600080fd5b60405181810167ffffffffffffffff81118282101715615c6e57fe5b604052919050565b600067ffffffffffffffff821115615c8a57fe5b50601f01601f191660200190565b60005b83811015615cb3578181015183820152602001615c9b565b8381111561296d5750506000910152565b6001600160a01b038116811461506357600080fd5b801515811461506357600080fd5b8060020b811461506357600080fd5b6001600160801b038116811461506357600080fd5b60ff8116811461506357600080fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732315065726d69743a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e7366657220746f20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a164736f6c6343000706000a","linkReferences":{},"deployedLinkReferences":{}}');

/***/ }),

/***/ "(rsc)/./node_modules/@uniswap/v3-periphery/artifacts/contracts/SwapRouter.sol/SwapRouter.json":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@uniswap/v3-periphery/artifacts/contracts/SwapRouter.sol/SwapRouter.json ***!
  \***********************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"SwapRouter","sourceName":"contracts/SwapRouter.sol","abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_WETH9","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"refundETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowed","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowedIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"sweepToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"feeBips","type":"uint256"},{"internalType":"address","name":"feeRecipient","type":"address"}],"name":"sweepTokenWithFee","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"unwrapWETH9","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"feeBips","type":"uint256"},{"internalType":"address","name":"feeRecipient","type":"address"}],"name":"unwrapWETH9WithFee","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"bytecode":"0x60c06040526000196000553480156200001757600080fd5b506040516200302f3803806200302f8339810160408190526200003a9162000076565b6001600160601b0319606092831b8116608052911b1660a052620000ad565b80516001600160a01b03811681146200007157600080fd5b919050565b6000806040838503121562000089578182fd5b620000948362000059565b9150620000a46020840162000059565b90509250929050565b60805160601c60a05160601c612f26620001096000398061012f528061058352806106ad5280610747528061078752806108b15280611c435280611ca35280611d24525080610dc6528061140c5280611e265250612f266000f3fe6080604052600436106101125760003560e01c8063c04b8d59116100a5578063df2ab5bb11610074578063f28c049811610059578063f28c0498146102f5578063f3995c6714610308578063fa461e331461031b576101bd565b8063df2ab5bb146102cf578063e0e189a0146102e2576101bd565b8063c04b8d5914610281578063c2e3140a14610294578063c45a0155146102a7578063db3e2198146102bc576101bd565b80634aa4a4fc116100e15780634aa4a4fc146102195780639b2c0a371461023b578063a4a78f0c1461024e578063ac9650d814610261576101bd565b806312210e8a146101c2578063414bf389146101ca5780634659a494146101f357806349404b7c14610206576101bd565b366101bd573373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101bb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f742057455448390000000000000000000000000000000000000000000000604482015290519081900360640190fd5b005b600080fd5b6101bb61033b565b6101dd6101d83660046129f8565b61034d565b6040516101ea9190612df1565b60405180910390f35b6101bb610201366004612776565b6104bf565b6101bb610214366004612aff565b61057f565b34801561022557600080fd5b5061022e610745565b6040516101ea9190612c37565b6101bb610249366004612b2e565b610769565b6101bb61025c366004612776565b610981565b61027461026f3660046127d6565b610a56565b6040516101ea9190612caa565b6101dd61028f36600461294d565b610bb0565b6101bb6102a2366004612776565b610d0f565b3480156102b357600080fd5b5061022e610dc4565b6101dd6102ca3660046129f8565b610de8565b6101bb6102dd3660046126d7565b610f78565b6101bb6102f0366004612718565b611095565b6101dd610303366004612a14565b6111fb565b6101bb610316366004612776565b61132f565b34801561032757600080fd5b506101bb610336366004612868565b6113c7565b471561034b5761034b334761150e565b565b600081608001358061035d61165c565b11156103ca57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b61047060a08401356103e260808601606087016126b4565b6103f3610100870160e088016126b4565b604080518082019091528061040b60208a018a6126b4565b61041b60608b0160408c01612adc565b61042b60408c0160208d016126b4565b60405160200161043d93929190612bc1565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff16815250611660565b91508260c001358210156104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d72565b60405180910390fd5b50919050565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e48101839052905173ffffffffffffffffffffffffffffffffffffffff881691638fcbaf0c9161010480830192600092919082900301818387803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b50505050505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561060857600080fd5b505afa15801561061c573d6000803e3d6000fd5b505050506040513d602081101561063257600080fd5b50519050828110156106a557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b8015610740577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561071e57600080fd5b505af1158015610732573d6000803e3d6000fd5b50505050610740828261150e565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008211801561077a575060648211155b61078357600080fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561080c57600080fd5b505afa158015610820573d6000803e3d6000fd5b505050506040513d602081101561083657600080fd5b50519050848110156108a957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b801561097a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b50505050600061271061095285846117e690919063ffffffff16565b8161095957fe5b049050801561096c5761096c838261150e565b6109788582840361150e565b505b5050505050565b604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015290517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b158015610a1657600080fd5b505afa158015610a2a573d6000803e3d6000fd5b505050506040513d6020811015610a4057600080fd5b50511015610978576109788686868686866104bf565b60608167ffffffffffffffff81118015610a6f57600080fd5b50604051908082528060200260200182016040528015610aa357816020015b6060815260200190600190039081610a8e5790505b50905060005b82811015610ba95760008030868685818110610ac157fe5b9050602002810190610ad39190612dfa565b604051610ae1929190612c27565b600060405180830381855af49150503d8060008114610b1c576040519150601f19603f3d011682016040523d82523d6000602084013e610b21565b606091505b509150915081610b8757604481511015610b3a57600080fd5b60048101905080806020019051810190610b5491906128e3565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b09190612d28565b80848481518110610b9457fe5b60209081029190910101525050600101610aa9565b5092915050565b6000816040015180610bc061165c565b1115610c2d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b335b6000610c3e8560000151611810565b9050610c97856060015182610c57578660200151610c59565b305b60006040518060400160405280610c738b6000015161181c565b81526020018773ffffffffffffffffffffffffffffffffffffffff16815250611660565b60608601528015610cb7578451309250610cb09061182b565b8552610cc4565b8460600151935050610cca565b50610c2f565b8360800151831015610d08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d72565b5050919050565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051869173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b158015610d8457600080fd5b505afa158015610d98573d6000803e3d6000fd5b505050506040513d6020811015610dae57600080fd5b505110156109785761097886868686868661132f565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000816080013580610df861165c565b1115610e6557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b610f0e60a0840135610e7d60808601606087016126b4565b610e8e610100870160e088016126b4565b6040518060400160405280886020016020810190610eac91906126b4565b610ebc60608b0160408c01612adc565b610ec960208c018c6126b4565b604051602001610edb93929190612bc1565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff16815250611860565b91508260c00135821115610f4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d3b565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600055919050565b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610fe157600080fd5b505afa158015610ff5573d6000803e3d6000fd5b505050506040513d602081101561100b57600080fd5b505190508281101561107e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b801561108f5761108f848383611a1c565b50505050565b6000821180156110a6575060648211155b6110af57600080fd5b60008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561111857600080fd5b505afa15801561112c573d6000803e3d6000fd5b505050506040513d602081101561114257600080fd5b50519050848110156111b557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b80156109785760006127106111ca83866117e6565b816111d157fe5b04905080156111e5576111e5878483611a1c565b6111f28786838503611a1c565b50505050505050565b600081604001358061120b61165c565b111561127857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b6112eb606084013561129060408601602087016126b4565b60408051808201909152600090806112a88980612dfa565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525033602090910152611860565b5060005491508260800135821115610f4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d3b565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c48101839052905173ffffffffffffffffffffffffffffffffffffffff88169163d505accf9160e480830192600092919082900301818387803b15801561055f57600080fd5b60008413806113d65750600083135b6113df57600080fd5b60006113ed82840184612a4c565b905060008060006114018460000151611bf1565b9250925092506114337f0000000000000000000000000000000000000000000000000000000000000000848484611c22565b5060008060008a13611474578473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610896114a5565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16108a5b9150915081156114c4576114bf8587602001513384611c41565b610573565b85516114cf90611810565b156114f45785516114df9061182b565b86526114ee8133600089611860565b50610573565b806000819055508394506105738587602001513384611c41565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff84169083906040518082805190602001908083835b6020831061158557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611548565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146115e7576040519150601f19603f3d011682016040523d82523d6000602084013e6115ec565b606091505b505090508061074057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b4290565b600073ffffffffffffffffffffffffffffffffffffffff8416611681573093505b60008060006116938560000151611bf1565b9194509250905073ffffffffffffffffffffffffffffffffffffffff808316908416106000806116c4868686611e1f565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b856116ea8f611e5d565b73ffffffffffffffffffffffffffffffffffffffff8e161561170c578d611732565b8761172b5773fffd8963efd1fc6a506488495d951d5263988d25611732565b6401000276a45b8d6040516020016117439190612da9565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611772959493929190612c58565b6040805180830381600087803b15801561178b57600080fd5b505af115801561179f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c39190612845565b91509150826117d257816117d4565b805b6000039b9a5050505050505050505050565b6000821580611801575050818102818382816117fe57fe5b04145b61180a57600080fd5b92915050565b8051604211155b919050565b606061180a826000602b611e8f565b805160609061180a9083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe901611e8f565b600073ffffffffffffffffffffffffffffffffffffffff8416611881573093505b60008060006118938560000151611bf1565b9194509250905073ffffffffffffffffffffffffffffffffffffffff808416908316106000806118c4858786611e1f565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b856118ea8f611e5d565b60000373ffffffffffffffffffffffffffffffffffffffff8e161561190f578d611935565b8761192e5773fffd8963efd1fc6a506488495d951d5263988d25611935565b6401000276a45b8d6040516020016119469190612da9565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611975959493929190612c58565b6040805180830381600087803b15801561198e57600080fd5b505af11580156119a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c69190612845565b915091506000836119db5781836000036119e1565b82826000035b909850905073ffffffffffffffffffffffffffffffffffffffff8a16611a0d578b8114611a0d57600080fd5b50505050505050949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b60208310611af157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611ab4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611b53576040519150601f19603f3d011682016040523d82523d6000602084013e611b58565b606091505b5091509150818015611b86575080511580611b865750808060200190516020811015611b8357600080fd5b50515b61097a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008080611bff8482612076565b9250611c0c846014612176565b9050611c19846017612076565b91509193909250565b6000611c3885611c33868686612266565b6122e3565b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148015611c9c5750804710155b15611de5577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611d0957600080fd5b505af1158015611d1d573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611db357600080fd5b505af1158015611dc7573d6000803e3d6000fd5b505050506040513d6020811015611ddd57600080fd5b5061108f9050565b73ffffffffffffffffffffffffffffffffffffffff8316301415611e1357611e0e848383611a1c565b61108f565b61108f84848484612313565b6000611e557f0000000000000000000000000000000000000000000000000000000000000000611e50868686612266565b6124f0565b949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210611e8b57600080fd5b5090565b60608182601f011015611f0357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015611f7457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b81830184511015611fe657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b606082158015612005576040519150600082526020820160405261206d565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561203e578051835260209283019201612026565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6000818260140110156120ea57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b816014018351101561215d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b6000818260030110156121ea57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b816003018351101561225d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b61226e612626565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1611156122a6579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b60006122ef83836124f0565b90503373ffffffffffffffffffffffffffffffffffffffff82161461180a57600080fd5b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b602083106123f057805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016123b3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612452576040519150601f19603f3d011682016040523d82523d6000602084013e612457565b606091505b5091509150818015612485575080511580612485575080806020019051602081101561248257600080fd5b50515b61097857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061253257600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516060810182526000808252602082018190529181019190915290565b803561181781612ef4565b600082601f830112612661578081fd5b813561267461266f82612e88565b612e64565b818152846020838601011115612688578283fd5b816020850160208301379081016020019190915292915050565b600061010082840312156104b9578081fd5b6000602082840312156126c5578081fd5b81356126d081612ef4565b9392505050565b6000806000606084860312156126eb578182fd5b83356126f681612ef4565b925060208401359150604084013561270d81612ef4565b809150509250925092565b600080600080600060a0868803121561272f578081fd5b853561273a81612ef4565b945060208601359350604086013561275181612ef4565b925060608601359150608086013561276881612ef4565b809150509295509295909350565b60008060008060008060c0878903121561278e578081fd5b863561279981612ef4565b95506020870135945060408701359350606087013560ff811681146127bc578182fd5b9598949750929560808101359460a0909101359350915050565b600080602083850312156127e8578182fd5b823567ffffffffffffffff808211156127ff578384fd5b818501915085601f830112612812578384fd5b813581811115612820578485fd5b8660208083028501011115612833578485fd5b60209290920196919550909350505050565b60008060408385031215612857578182fd5b505080516020909101519092909150565b6000806000806060858703121561287d578182fd5b8435935060208501359250604085013567ffffffffffffffff808211156128a2578384fd5b818701915087601f8301126128b5578384fd5b8135818111156128c3578485fd5b8860208285010111156128d4578485fd5b95989497505060200194505050565b6000602082840312156128f4578081fd5b815167ffffffffffffffff81111561290a578182fd5b8201601f8101841361291a578182fd5b805161292861266f82612e88565b81815285602083850101111561293c578384fd5b611c38826020830160208601612ec8565b60006020828403121561295e578081fd5b813567ffffffffffffffff80821115612975578283fd5b9083019060a08286031215612988578283fd5b60405160a08101818110838211171561299d57fe5b6040528235828111156129ae578485fd5b6129ba87828601612651565b8252506129c960208401612646565b602082015260408301356040820152606083013560608201526080830135608082015280935050505092915050565b60006101008284031215612a0a578081fd5b6126d083836126a2565b600060208284031215612a25578081fd5b813567ffffffffffffffff811115612a3b578182fd5b820160a081850312156126d0578182fd5b600060208284031215612a5d578081fd5b813567ffffffffffffffff80821115612a74578283fd5b9083019060408286031215612a87578283fd5b604051604081018181108382111715612a9c57fe5b604052823582811115612aad578485fd5b612ab987828601612651565b82525060208301359250612acc83612ef4565b6020810192909252509392505050565b600060208284031215612aed578081fd5b813562ffffff811681146126d0578182fd5b60008060408385031215612b11578182fd5b823591506020830135612b2381612ef4565b809150509250929050565b60008060008060808587031215612b43578182fd5b843593506020850135612b5581612ef4565b9250604085013591506060850135612b6c81612ef4565b939692955090935050565b60008151808452612b8f816020860160208601612ec8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b6000828483379101908152919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152612c9f60a0830184612b77565b979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015612d1b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612d09858351612b77565b94509285019290850190600101612ccf565b5092979650505050505050565b6000602082526126d06020830184612b77565b60208082526012908201527f546f6f206d756368207265717565737465640000000000000000000000000000604082015260600190565b60208082526013908201527f546f6f206c6974746c6520726563656976656400000000000000000000000000604082015260600190565b600060208252825160406020840152612dc56060840182612b77565b905073ffffffffffffffffffffffffffffffffffffffff60208501511660408401528091505092915050565b90815260200190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612e2e578283fd5b83018035915067ffffffffffffffff821115612e48578283fd5b602001915036819003821315612e5d57600080fd5b9250929050565b60405181810167ffffffffffffffff81118282101715612e8057fe5b604052919050565b600067ffffffffffffffff821115612e9c57fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b83811015612ee3578181015183820152602001612ecb565b8381111561108f5750506000910152565b73ffffffffffffffffffffffffffffffffffffffff81168114612f1657600080fd5b5056fea164736f6c6343000706000a","deployedBytecode":"0x6080604052600436106101125760003560e01c8063c04b8d59116100a5578063df2ab5bb11610074578063f28c049811610059578063f28c0498146102f5578063f3995c6714610308578063fa461e331461031b576101bd565b8063df2ab5bb146102cf578063e0e189a0146102e2576101bd565b8063c04b8d5914610281578063c2e3140a14610294578063c45a0155146102a7578063db3e2198146102bc576101bd565b80634aa4a4fc116100e15780634aa4a4fc146102195780639b2c0a371461023b578063a4a78f0c1461024e578063ac9650d814610261576101bd565b806312210e8a146101c2578063414bf389146101ca5780634659a494146101f357806349404b7c14610206576101bd565b366101bd573373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101bb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f742057455448390000000000000000000000000000000000000000000000604482015290519081900360640190fd5b005b600080fd5b6101bb61033b565b6101dd6101d83660046129f8565b61034d565b6040516101ea9190612df1565b60405180910390f35b6101bb610201366004612776565b6104bf565b6101bb610214366004612aff565b61057f565b34801561022557600080fd5b5061022e610745565b6040516101ea9190612c37565b6101bb610249366004612b2e565b610769565b6101bb61025c366004612776565b610981565b61027461026f3660046127d6565b610a56565b6040516101ea9190612caa565b6101dd61028f36600461294d565b610bb0565b6101bb6102a2366004612776565b610d0f565b3480156102b357600080fd5b5061022e610dc4565b6101dd6102ca3660046129f8565b610de8565b6101bb6102dd3660046126d7565b610f78565b6101bb6102f0366004612718565b611095565b6101dd610303366004612a14565b6111fb565b6101bb610316366004612776565b61132f565b34801561032757600080fd5b506101bb610336366004612868565b6113c7565b471561034b5761034b334761150e565b565b600081608001358061035d61165c565b11156103ca57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b61047060a08401356103e260808601606087016126b4565b6103f3610100870160e088016126b4565b604080518082019091528061040b60208a018a6126b4565b61041b60608b0160408c01612adc565b61042b60408c0160208d016126b4565b60405160200161043d93929190612bc1565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff16815250611660565b91508260c001358210156104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d72565b60405180910390fd5b50919050565b604080517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101879052606481018690526001608482015260ff851660a482015260c4810184905260e48101839052905173ffffffffffffffffffffffffffffffffffffffff881691638fcbaf0c9161010480830192600092919082900301818387803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b50505050505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561060857600080fd5b505afa15801561061c573d6000803e3d6000fd5b505050506040513d602081101561063257600080fd5b50519050828110156106a557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b8015610740577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561071e57600080fd5b505af1158015610732573d6000803e3d6000fd5b50505050610740828261150e565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008211801561077a575060648211155b61078357600080fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561080c57600080fd5b505afa158015610820573d6000803e3d6000fd5b505050506040513d602081101561083657600080fd5b50519050848110156108a957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015290519081900360640190fd5b801561097a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b50505050600061271061095285846117e690919063ffffffff16565b8161095957fe5b049050801561096c5761096c838261150e565b6109788582840361150e565b505b5050505050565b604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815233600482015230602482015290517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b158015610a1657600080fd5b505afa158015610a2a573d6000803e3d6000fd5b505050506040513d6020811015610a4057600080fd5b50511015610978576109788686868686866104bf565b60608167ffffffffffffffff81118015610a6f57600080fd5b50604051908082528060200260200182016040528015610aa357816020015b6060815260200190600190039081610a8e5790505b50905060005b82811015610ba95760008030868685818110610ac157fe5b9050602002810190610ad39190612dfa565b604051610ae1929190612c27565b600060405180830381855af49150503d8060008114610b1c576040519150601f19603f3d011682016040523d82523d6000602084013e610b21565b606091505b509150915081610b8757604481511015610b3a57600080fd5b60048101905080806020019051810190610b5491906128e3565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b09190612d28565b80848481518110610b9457fe5b60209081029190910101525050600101610aa9565b5092915050565b6000816040015180610bc061165c565b1115610c2d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b335b6000610c3e8560000151611810565b9050610c97856060015182610c57578660200151610c59565b305b60006040518060400160405280610c738b6000015161181c565b81526020018773ffffffffffffffffffffffffffffffffffffffff16815250611660565b60608601528015610cb7578451309250610cb09061182b565b8552610cc4565b8460600151935050610cca565b50610c2f565b8360800151831015610d08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d72565b5050919050565b604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201529051869173ffffffffffffffffffffffffffffffffffffffff89169163dd62ed3e91604480820192602092909190829003018186803b158015610d8457600080fd5b505afa158015610d98573d6000803e3d6000fd5b505050506040513d6020811015610dae57600080fd5b505110156109785761097886868686868661132f565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000816080013580610df861165c565b1115610e6557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b610f0e60a0840135610e7d60808601606087016126b4565b610e8e610100870160e088016126b4565b6040518060400160405280886020016020810190610eac91906126b4565b610ebc60608b0160408c01612adc565b610ec960208c018c6126b4565b604051602001610edb93929190612bc1565b60405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff16815250611860565b91508260c00135821115610f4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d3b565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600055919050565b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610fe157600080fd5b505afa158015610ff5573d6000803e3d6000fd5b505050506040513d602081101561100b57600080fd5b505190508281101561107e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b801561108f5761108f848383611a1c565b50505050565b6000821180156110a6575060648211155b6110af57600080fd5b60008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561111857600080fd5b505afa15801561112c573d6000803e3d6000fd5b505050506040513d602081101561114257600080fd5b50519050848110156111b557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015290519081900360640190fd5b80156109785760006127106111ca83866117e6565b816111d157fe5b04905080156111e5576111e5878483611a1c565b6111f28786838503611a1c565b50505050505050565b600081604001358061120b61165c565b111561127857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c6400000000000000000000000000604482015290519081900360640190fd5b6112eb606084013561129060408601602087016126b4565b60408051808201909152600090806112a88980612dfa565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525033602090910152611860565b5060005491508260800135821115610f4e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090612d3b565b604080517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526064810186905260ff8516608482015260a4810184905260c48101839052905173ffffffffffffffffffffffffffffffffffffffff88169163d505accf9160e480830192600092919082900301818387803b15801561055f57600080fd5b60008413806113d65750600083135b6113df57600080fd5b60006113ed82840184612a4c565b905060008060006114018460000151611bf1565b9250925092506114337f0000000000000000000000000000000000000000000000000000000000000000848484611c22565b5060008060008a13611474578473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610896114a5565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16108a5b9150915081156114c4576114bf8587602001513384611c41565b610573565b85516114cf90611810565b156114f45785516114df9061182b565b86526114ee8133600089611860565b50610573565b806000819055508394506105738587602001513384611c41565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff84169083906040518082805190602001908083835b6020831061158557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611548565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146115e7576040519150601f19603f3d011682016040523d82523d6000602084013e6115ec565b606091505b505090508061074057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b4290565b600073ffffffffffffffffffffffffffffffffffffffff8416611681573093505b60008060006116938560000151611bf1565b9194509250905073ffffffffffffffffffffffffffffffffffffffff808316908416106000806116c4868686611e1f565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b856116ea8f611e5d565b73ffffffffffffffffffffffffffffffffffffffff8e161561170c578d611732565b8761172b5773fffd8963efd1fc6a506488495d951d5263988d25611732565b6401000276a45b8d6040516020016117439190612da9565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611772959493929190612c58565b6040805180830381600087803b15801561178b57600080fd5b505af115801561179f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c39190612845565b91509150826117d257816117d4565b805b6000039b9a5050505050505050505050565b6000821580611801575050818102818382816117fe57fe5b04145b61180a57600080fd5b92915050565b8051604211155b919050565b606061180a826000602b611e8f565b805160609061180a9083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe901611e8f565b600073ffffffffffffffffffffffffffffffffffffffff8416611881573093505b60008060006118938560000151611bf1565b9194509250905073ffffffffffffffffffffffffffffffffffffffff808416908316106000806118c4858786611e1f565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b856118ea8f611e5d565b60000373ffffffffffffffffffffffffffffffffffffffff8e161561190f578d611935565b8761192e5773fffd8963efd1fc6a506488495d951d5263988d25611935565b6401000276a45b8d6040516020016119469190612da9565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611975959493929190612c58565b6040805180830381600087803b15801561198e57600080fd5b505af11580156119a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c69190612845565b915091506000836119db5781836000036119e1565b82826000035b909850905073ffffffffffffffffffffffffffffffffffffffff8a16611a0d578b8114611a0d57600080fd5b50505050505050949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b60208310611af157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611ab4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611b53576040519150601f19603f3d011682016040523d82523d6000602084013e611b58565b606091505b5091509150818015611b86575080511580611b865750808060200190516020811015611b8357600080fd5b50515b61097a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008080611bff8482612076565b9250611c0c846014612176565b9050611c19846017612076565b91509193909250565b6000611c3885611c33868686612266565b6122e3565b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148015611c9c5750804710155b15611de5577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611d0957600080fd5b505af1158015611d1d573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611db357600080fd5b505af1158015611dc7573d6000803e3d6000fd5b505050506040513d6020811015611ddd57600080fd5b5061108f9050565b73ffffffffffffffffffffffffffffffffffffffff8316301415611e1357611e0e848383611a1c565b61108f565b61108f84848484612313565b6000611e557f0000000000000000000000000000000000000000000000000000000000000000611e50868686612266565b6124f0565b949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210611e8b57600080fd5b5090565b60608182601f011015611f0357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015611f7457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b81830184511015611fe657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b606082158015612005576040519150600082526020820160405261206d565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561203e578051835260209283019201612026565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b6000818260140110156120ea57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b816014018351101561215d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b6000818260030110156121ea57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b816003018351101561225d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b61226e612626565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1611156122a6579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b60006122ef83836124f0565b90503373ffffffffffffffffffffffffffffffffffffffff82161461180a57600080fd5b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b602083106123f057805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016123b3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612452576040519150601f19603f3d011682016040523d82523d6000602084013e612457565b606091505b5091509150818015612485575080511580612485575080806020019051602081101561248257600080fd5b50515b61097857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161061253257600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516060810182526000808252602082018190529181019190915290565b803561181781612ef4565b600082601f830112612661578081fd5b813561267461266f82612e88565b612e64565b818152846020838601011115612688578283fd5b816020850160208301379081016020019190915292915050565b600061010082840312156104b9578081fd5b6000602082840312156126c5578081fd5b81356126d081612ef4565b9392505050565b6000806000606084860312156126eb578182fd5b83356126f681612ef4565b925060208401359150604084013561270d81612ef4565b809150509250925092565b600080600080600060a0868803121561272f578081fd5b853561273a81612ef4565b945060208601359350604086013561275181612ef4565b925060608601359150608086013561276881612ef4565b809150509295509295909350565b60008060008060008060c0878903121561278e578081fd5b863561279981612ef4565b95506020870135945060408701359350606087013560ff811681146127bc578182fd5b9598949750929560808101359460a0909101359350915050565b600080602083850312156127e8578182fd5b823567ffffffffffffffff808211156127ff578384fd5b818501915085601f830112612812578384fd5b813581811115612820578485fd5b8660208083028501011115612833578485fd5b60209290920196919550909350505050565b60008060408385031215612857578182fd5b505080516020909101519092909150565b6000806000806060858703121561287d578182fd5b8435935060208501359250604085013567ffffffffffffffff808211156128a2578384fd5b818701915087601f8301126128b5578384fd5b8135818111156128c3578485fd5b8860208285010111156128d4578485fd5b95989497505060200194505050565b6000602082840312156128f4578081fd5b815167ffffffffffffffff81111561290a578182fd5b8201601f8101841361291a578182fd5b805161292861266f82612e88565b81815285602083850101111561293c578384fd5b611c38826020830160208601612ec8565b60006020828403121561295e578081fd5b813567ffffffffffffffff80821115612975578283fd5b9083019060a08286031215612988578283fd5b60405160a08101818110838211171561299d57fe5b6040528235828111156129ae578485fd5b6129ba87828601612651565b8252506129c960208401612646565b602082015260408301356040820152606083013560608201526080830135608082015280935050505092915050565b60006101008284031215612a0a578081fd5b6126d083836126a2565b600060208284031215612a25578081fd5b813567ffffffffffffffff811115612a3b578182fd5b820160a081850312156126d0578182fd5b600060208284031215612a5d578081fd5b813567ffffffffffffffff80821115612a74578283fd5b9083019060408286031215612a87578283fd5b604051604081018181108382111715612a9c57fe5b604052823582811115612aad578485fd5b612ab987828601612651565b82525060208301359250612acc83612ef4565b6020810192909252509392505050565b600060208284031215612aed578081fd5b813562ffffff811681146126d0578182fd5b60008060408385031215612b11578182fd5b823591506020830135612b2381612ef4565b809150509250929050565b60008060008060808587031215612b43578182fd5b843593506020850135612b5581612ef4565b9250604085013591506060850135612b6c81612ef4565b939692955090935050565b60008151808452612b8f816020860160208601612ec8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b6000828483379101908152919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152612c9f60a0830184612b77565b979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015612d1b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612d09858351612b77565b94509285019290850190600101612ccf565b5092979650505050505050565b6000602082526126d06020830184612b77565b60208082526012908201527f546f6f206d756368207265717565737465640000000000000000000000000000604082015260600190565b60208082526013908201527f546f6f206c6974746c6520726563656976656400000000000000000000000000604082015260600190565b600060208252825160406020840152612dc56060840182612b77565b905073ffffffffffffffffffffffffffffffffffffffff60208501511660408401528091505092915050565b90815260200190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612e2e578283fd5b83018035915067ffffffffffffffff821115612e48578283fd5b602001915036819003821315612e5d57600080fd5b9250929050565b60405181810167ffffffffffffffff81118282101715612e8057fe5b604052919050565b600067ffffffffffffffff821115612e9c57fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b83811015612ee3578181015183820152602001612ecb565b8381111561108f5750506000910152565b73ffffffffffffffffffffffffffffffffffffffff81168114612f1657600080fd5b5056fea164736f6c6343000706000a","linkReferences":{},"deployedLinkReferences":{}}');

/***/ }),

/***/ "(rsc)/./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/IMulticall.sol/IMulticall.json":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/IMulticall.sol/IMulticall.json ***!
  \**********************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"IMulticall","sourceName":"contracts/interfaces/IMulticall.sol","abi":[{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}}');

/***/ }),

/***/ "(rsc)/./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/IPeripheryPaymentsWithFee.sol/IPeripheryPaymentsWithFee.json":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/IPeripheryPaymentsWithFee.sol/IPeripheryPaymentsWithFee.json ***!
  \****************************************************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"IPeripheryPaymentsWithFee","sourceName":"contracts/interfaces/IPeripheryPaymentsWithFee.sol","abi":[{"inputs":[],"name":"refundETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"sweepToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"feeBips","type":"uint256"},{"internalType":"address","name":"feeRecipient","type":"address"}],"name":"sweepTokenWithFee","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"unwrapWETH9","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"feeBips","type":"uint256"},{"internalType":"address","name":"feeRecipient","type":"address"}],"name":"unwrapWETH9WithFee","outputs":[],"stateMutability":"payable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}}');

/***/ }),

/***/ "(rsc)/./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/ISelfPermit.sol/ISelfPermit.json":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/ISelfPermit.sol/ISelfPermit.json ***!
  \************************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"ISelfPermit","sourceName":"contracts/interfaces/ISelfPermit.sol","abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowed","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitAllowedIfNecessary","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"selfPermitIfNecessary","outputs":[],"stateMutability":"payable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}}');

/***/ }),

/***/ "(rsc)/./node_modules/@uniswap/v3-periphery/artifacts/contracts/lens/Quoter.sol/Quoter.json":
/*!********************************************************************************************!*\
  !*** ./node_modules/@uniswap/v3-periphery/artifacts/contracts/lens/Quoter.sol/Quoter.json ***!
  \********************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"Quoter","sourceName":"contracts/lens/Quoter.sol","abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_WETH9","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"name":"quoteExactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"name":"quoteExactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"quoteExactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"name":"quoteExactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"path","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"view","type":"function"}],"bytecode":"0x60c060405234801561001057600080fd5b506040516112e53803806112e583398101604081905261002f91610069565b6001600160601b0319606092831b8116608052911b1660a05261009b565b80516001600160a01b038116811461006457600080fd5b919050565b6000806040838503121561007b578182fd5b6100848361004d565b91506100926020840161004d565b90509250929050565b60805160601c60a05160601c6112176100ce60003980610342525080610366528061058652806106d552506112176000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100d3578063cdca1753146100db578063f7729d43146100ee578063fa461e33146101015761007d565b80632f80bb1d1461008257806330d07f21146100ab5780634aa4a4fc146100be575b600080fd5b610095610090366004610e9e565b610116565b6040516100a29190611148565b60405180910390f35b6100956100b9366004610e30565b61017b565b6100c6610340565b6040516100a29190611084565b6100c6610364565b6100956100e9366004610e9e565b610388565b6100956100fc366004610e30565b6103d6565b61011461010f366004610f04565b610555565b005b60005b600061012484610660565b9050600080600061013487610668565b92509250925061014882848389600061017b565b955083156101605761015987610699565b965061016c565b85945050505050610175565b50505050610119565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff808616878216109083166101a65760008490555b6101b18787876106ce565b73ffffffffffffffffffffffffffffffffffffffff1663128acb0830836101d78861070c565b60000373ffffffffffffffffffffffffffffffffffffffff8816156101fc5787610222565b8561021b5773fffd8963efd1fc6a506488495d951d5263988d25610222565b6401000276a45b8b8b8e6040516020016102379392919061101e565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016102669594939291906110a5565b6040805180830381600087803b15801561027f57600080fd5b505af19250505080156102cd575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526102ca91810190610ee1565b60015b610333573d8080156102fb576040519150601f19603f3d011682016040523d82523d6000602084013e610300565b606091505b5073ffffffffffffffffffffffffffffffffffffffff841661032157600080555b61032a8161073e565b92505050610337565b5050505b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005b600061039684610660565b905060008060006103a687610668565b9250925092506103ba8383838960006103d6565b95508315610160576103cb87610699565b96505050505061038b565b600073ffffffffffffffffffffffffffffffffffffffff808616908716106103ff8787876106ce565b73ffffffffffffffffffffffffffffffffffffffff1663128acb0830836104258861070c565b73ffffffffffffffffffffffffffffffffffffffff881615610447578761046d565b856104665773fffd8963efd1fc6a506488495d951d5263988d2561046d565b6401000276a45b8c8b8d6040516020016104829392919061101e565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016104b19594939291906110a5565b6040805180830381600087803b1580156104ca57600080fd5b505af1925050508015610518575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261051591810190610ee1565b60015b610333573d808015610546576040519150601f19603f3d011682016040523d82523d6000602084013e61054b565b606091505b5061032a8161073e565b60008313806105645750600082135b61056d57600080fd5b600080600061057b84610668565b9250925092506105ad7f00000000000000000000000000000000000000000000000000000000000000008484846107ef565b5060008060008089136105f3578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a600003610628565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b925092509250821561063f57604051818152602081fd5b6000541561065557600054811461065557600080fd5b604051828152602081fd5b516042111590565b600080806106768482610805565b9250610683846014610905565b9050610690846017610805565b91509193909250565b80516060906101759083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9016109f5565b60006107047f00000000000000000000000000000000000000000000000000000000000000006106ff868686610bdc565b610c59565b949350505050565b60007f8000000000000000000000000000000000000000000000000000000000000000821061073a57600080fd5b5090565b600081516020146107db5760448251101561078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078590611111565b60405180910390fd5b600482019150818060200190518101906107a89190610f52565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078591906110f7565b818060200190518101906101759190610fbc565b600061033785610800868686610bdc565b610d8f565b60008182601401101561087957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b81601401835110156108ec57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b60008182600301101561097957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b81600301835110156109ec57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b60608182601f011015610a6957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015610ada57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b81830184511015610b4c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b606082158015610b6b5760405191506000825260208201604052610bd3565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610ba4578051835260209283019201610b8c565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b610be4610dbf565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115610c1c579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1610610c9b57600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b6000610d9b8383610c59565b90503373ffffffffffffffffffffffffffffffffffffffff82161461017557600080fd5b604080516060810182526000808252602082018190529181019190915290565b600082601f830112610def578081fd5b8135610e02610dfd82611175565b611151565b818152846020838601011115610e16578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a08688031215610e47578081fd5b8535610e52816111e5565b94506020860135610e62816111e5565b9350604086013562ffffff81168114610e79578182fd5b9250606086013591506080860135610e90816111e5565b809150509295509295909350565b60008060408385031215610eb0578182fd5b823567ffffffffffffffff811115610ec6578283fd5b610ed285828601610ddf565b95602094909401359450505050565b60008060408385031215610ef3578182fd5b505080516020909101519092909150565b600080600060608486031215610f18578283fd5b8335925060208401359150604084013567ffffffffffffffff811115610f3c578182fd5b610f4886828701610ddf565b9150509250925092565b600060208284031215610f63578081fd5b815167ffffffffffffffff811115610f79578182fd5b8201601f81018413610f89578182fd5b8051610f97610dfd82611175565b818152856020838501011115610fab578384fd5b6103378260208301602086016111b5565b600060208284031215610fcd578081fd5b5051919050565b60008151808452610fec8160208601602086016111b5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a060808301526110ec60a0830184610fd4565b979650505050505050565b60006020825261110a6020830184610fd4565b9392505050565b60208082526010908201527f556e6578706563746564206572726f7200000000000000000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561116d57fe5b604052919050565b600067ffffffffffffffff82111561118957fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b838110156111d05781810151838201526020016111b8565b838111156111df576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461120757600080fd5b5056fea164736f6c6343000706000a","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100d3578063cdca1753146100db578063f7729d43146100ee578063fa461e33146101015761007d565b80632f80bb1d1461008257806330d07f21146100ab5780634aa4a4fc146100be575b600080fd5b610095610090366004610e9e565b610116565b6040516100a29190611148565b60405180910390f35b6100956100b9366004610e30565b61017b565b6100c6610340565b6040516100a29190611084565b6100c6610364565b6100956100e9366004610e9e565b610388565b6100956100fc366004610e30565b6103d6565b61011461010f366004610f04565b610555565b005b60005b600061012484610660565b9050600080600061013487610668565b92509250925061014882848389600061017b565b955083156101605761015987610699565b965061016c565b85945050505050610175565b50505050610119565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff808616878216109083166101a65760008490555b6101b18787876106ce565b73ffffffffffffffffffffffffffffffffffffffff1663128acb0830836101d78861070c565b60000373ffffffffffffffffffffffffffffffffffffffff8816156101fc5787610222565b8561021b5773fffd8963efd1fc6a506488495d951d5263988d25610222565b6401000276a45b8b8b8e6040516020016102379392919061101e565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016102669594939291906110a5565b6040805180830381600087803b15801561027f57600080fd5b505af19250505080156102cd575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526102ca91810190610ee1565b60015b610333573d8080156102fb576040519150601f19603f3d011682016040523d82523d6000602084013e610300565b606091505b5073ffffffffffffffffffffffffffffffffffffffff841661032157600080555b61032a8161073e565b92505050610337565b5050505b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005b600061039684610660565b905060008060006103a687610668565b9250925092506103ba8383838960006103d6565b95508315610160576103cb87610699565b96505050505061038b565b600073ffffffffffffffffffffffffffffffffffffffff808616908716106103ff8787876106ce565b73ffffffffffffffffffffffffffffffffffffffff1663128acb0830836104258861070c565b73ffffffffffffffffffffffffffffffffffffffff881615610447578761046d565b856104665773fffd8963efd1fc6a506488495d951d5263988d2561046d565b6401000276a45b8c8b8d6040516020016104829392919061101e565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016104b19594939291906110a5565b6040805180830381600087803b1580156104ca57600080fd5b505af1925050508015610518575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261051591810190610ee1565b60015b610333573d808015610546576040519150601f19603f3d011682016040523d82523d6000602084013e61054b565b606091505b5061032a8161073e565b60008313806105645750600082135b61056d57600080fd5b600080600061057b84610668565b9250925092506105ad7f00000000000000000000000000000000000000000000000000000000000000008484846107ef565b5060008060008089136105f3578573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610888a600003610628565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161089896000035b925092509250821561063f57604051818152602081fd5b6000541561065557600054811461065557600080fd5b604051828152602081fd5b516042111590565b600080806106768482610805565b9250610683846014610905565b9050610690846017610805565b91509193909250565b80516060906101759083906017907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9016109f5565b60006107047f00000000000000000000000000000000000000000000000000000000000000006106ff868686610bdc565b610c59565b949350505050565b60007f8000000000000000000000000000000000000000000000000000000000000000821061073a57600080fd5b5090565b600081516020146107db5760448251101561078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078590611111565b60405180910390fd5b600482019150818060200190518101906107a89190610f52565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078591906110f7565b818060200190518101906101759190610fbc565b600061033785610800868686610bdc565b610d8f565b60008182601401101561087957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f746f416464726573735f6f766572666c6f770000000000000000000000000000604482015290519081900360640190fd5b81601401835110156108ec57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015290519081900360640190fd5b5001602001516c01000000000000000000000000900490565b60008182600301101561097957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f77000000000000000000000000000000604482015290519081900360640190fd5b81600301835110156109ec57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e6473000000000000000000000000604482015290519081900360640190fd5b50016003015190565b60608182601f011015610a6957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b828284011015610ada57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f77000000000000000000000000000000000000604482015290519081900360640190fd5b81830184511015610b4c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e6473000000000000000000000000000000604482015290519081900360640190fd5b606082158015610b6b5760405191506000825260208201604052610bd3565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610ba4578051835260209283019201610b8c565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b610be4610dbf565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115610c1c579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1610610c9b57600080fd5b508051602080830151604093840151845173ffffffffffffffffffffffffffffffffffffffff94851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b6000610d9b8383610c59565b90503373ffffffffffffffffffffffffffffffffffffffff82161461017557600080fd5b604080516060810182526000808252602082018190529181019190915290565b600082601f830112610def578081fd5b8135610e02610dfd82611175565b611151565b818152846020838601011115610e16578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a08688031215610e47578081fd5b8535610e52816111e5565b94506020860135610e62816111e5565b9350604086013562ffffff81168114610e79578182fd5b9250606086013591506080860135610e90816111e5565b809150509295509295909350565b60008060408385031215610eb0578182fd5b823567ffffffffffffffff811115610ec6578283fd5b610ed285828601610ddf565b95602094909401359450505050565b60008060408385031215610ef3578182fd5b505080516020909101519092909150565b600080600060608486031215610f18578283fd5b8335925060208401359150604084013567ffffffffffffffff811115610f3c578182fd5b610f4886828701610ddf565b9150509250925092565b600060208284031215610f63578081fd5b815167ffffffffffffffff811115610f79578182fd5b8201601f81018413610f89578182fd5b8051610f97610dfd82611175565b818152856020838501011115610fab578384fd5b6103378260208301602086016111b5565b600060208284031215610fcd578081fd5b5051919050565b60008151808452610fec8160208601602086016111b5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116825260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166014820152921b166017820152602b0190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a060808301526110ec60a0830184610fd4565b979650505050505050565b60006020825261110a6020830184610fd4565b9392505050565b60208082526010908201527f556e6578706563746564206572726f7200000000000000000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561116d57fe5b604052919050565b600067ffffffffffffffff82111561118957fe5b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b838110156111d05781810151838201526020016111b8565b838111156111df576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461120757600080fd5b5056fea164736f6c6343000706000a","linkReferences":{},"deployedLinkReferences":{}}');

/***/ }),

/***/ "(rsc)/./node_modules/@uniswap/v3-sdk/dist/v3-sdk.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/@uniswap/v3-sdk/dist/v3-sdk.esm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ADDRESS_ZERO: () => (/* binding */ ADDRESS_ZERO),\n/* harmony export */   FACTORY_ADDRESS: () => (/* binding */ FACTORY_ADDRESS),\n/* harmony export */   FeeAmount: () => (/* binding */ FeeAmount),\n/* harmony export */   FullMath: () => (/* binding */ FullMath),\n/* harmony export */   LiquidityMath: () => (/* binding */ LiquidityMath),\n/* harmony export */   Multicall: () => (/* binding */ Multicall),\n/* harmony export */   NoTickDataProvider: () => (/* binding */ NoTickDataProvider),\n/* harmony export */   NonfungiblePositionManager: () => (/* binding */ NonfungiblePositionManager),\n/* harmony export */   POOL_INIT_CODE_HASH: () => (/* binding */ POOL_INIT_CODE_HASH),\n/* harmony export */   Payments: () => (/* binding */ Payments),\n/* harmony export */   Pool: () => (/* binding */ Pool),\n/* harmony export */   Position: () => (/* binding */ Position),\n/* harmony export */   PositionLibrary: () => (/* binding */ PositionLibrary),\n/* harmony export */   Route: () => (/* binding */ Route),\n/* harmony export */   SelfPermit: () => (/* binding */ SelfPermit),\n/* harmony export */   SqrtPriceMath: () => (/* binding */ SqrtPriceMath),\n/* harmony export */   Staker: () => (/* binding */ Staker),\n/* harmony export */   SwapMath: () => (/* binding */ SwapMath),\n/* harmony export */   SwapQuoter: () => (/* binding */ SwapQuoter),\n/* harmony export */   SwapRouter: () => (/* binding */ SwapRouter),\n/* harmony export */   TICK_SPACINGS: () => (/* binding */ TICK_SPACINGS),\n/* harmony export */   Tick: () => (/* binding */ Tick),\n/* harmony export */   TickLibrary: () => (/* binding */ TickLibrary),\n/* harmony export */   TickList: () => (/* binding */ TickList),\n/* harmony export */   TickListDataProvider: () => (/* binding */ TickListDataProvider),\n/* harmony export */   TickMath: () => (/* binding */ TickMath),\n/* harmony export */   Trade: () => (/* binding */ Trade),\n/* harmony export */   computePoolAddress: () => (/* binding */ computePoolAddress),\n/* harmony export */   encodeRouteToPath: () => (/* binding */ encodeRouteToPath),\n/* harmony export */   encodeSqrtRatioX96: () => (/* binding */ encodeSqrtRatioX96),\n/* harmony export */   isSorted: () => (/* binding */ isSorted),\n/* harmony export */   maxLiquidityForAmounts: () => (/* binding */ maxLiquidityForAmounts),\n/* harmony export */   mostSignificantBit: () => (/* binding */ mostSignificantBit),\n/* harmony export */   nearestUsableTick: () => (/* binding */ nearestUsableTick),\n/* harmony export */   poolInitCodeHash: () => (/* binding */ poolInitCodeHash),\n/* harmony export */   priceToClosestTick: () => (/* binding */ priceToClosestTick),\n/* harmony export */   subIn256: () => (/* binding */ subIn256),\n/* harmony export */   tickToPrice: () => (/* binding */ tickToPrice),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   tradeComparator: () => (/* binding */ tradeComparator),\n/* harmony export */   v3Swap: () => (/* binding */ v3Swap)\n/* harmony export */ });\n/* harmony import */ var _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @uniswap/sdk-core */ \"(rsc)/./node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js\");\n/* harmony import */ var jsbi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsbi */ \"(rsc)/./node_modules/jsbi/dist/jsbi.mjs\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tiny-invariant */ \"(rsc)/./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var _ethersproject_abi__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ethersproject/abi */ \"(rsc)/./node_modules/@ethersproject/abi/lib.esm/abi-coder.js\");\n/* harmony import */ var _ethersproject_abi__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ethersproject/abi */ \"(rsc)/./node_modules/@ethersproject/abi/lib.esm/interface.js\");\n/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ethersproject/address */ \"(rsc)/./node_modules/@ethersproject/address/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_solidity__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ethersproject/solidity */ \"(rsc)/./node_modules/@ethersproject/solidity/lib.esm/index.js\");\n/* harmony import */ var _uniswap_v3_periphery_artifacts_contracts_interfaces_IMulticall_sol_IMulticall_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @uniswap/v3-periphery/artifacts/contracts/interfaces/IMulticall.sol/IMulticall.json */ \"(rsc)/./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/IMulticall.sol/IMulticall.json\");\n/* harmony import */ var _uniswap_v3_periphery_artifacts_contracts_NonfungiblePositionManager_sol_NonfungiblePositionManager_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json */ \"(rsc)/./node_modules/@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json\");\n/* harmony import */ var _uniswap_v3_periphery_artifacts_contracts_interfaces_ISelfPermit_sol_ISelfPermit_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @uniswap/v3-periphery/artifacts/contracts/interfaces/ISelfPermit.sol/ISelfPermit.json */ \"(rsc)/./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/ISelfPermit.sol/ISelfPermit.json\");\n/* harmony import */ var _uniswap_v3_periphery_artifacts_contracts_interfaces_IPeripheryPaymentsWithFee_sol_IPeripheryPaymentsWithFee_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @uniswap/v3-periphery/artifacts/contracts/interfaces/IPeripheryPaymentsWithFee.sol/IPeripheryPaymentsWithFee.json */ \"(rsc)/./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/IPeripheryPaymentsWithFee.sol/IPeripheryPaymentsWithFee.json\");\n/* harmony import */ var _uniswap_v3_periphery_artifacts_contracts_lens_Quoter_sol_Quoter_json__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @uniswap/v3-periphery/artifacts/contracts/lens/Quoter.sol/Quoter.json */ \"(rsc)/./node_modules/@uniswap/v3-periphery/artifacts/contracts/lens/Quoter.sol/Quoter.json\");\n/* harmony import */ var _uniswap_swap_router_contracts_artifacts_contracts_lens_QuoterV2_sol_QuoterV2_json__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @uniswap/swap-router-contracts/artifacts/contracts/lens/QuoterV2.sol/QuoterV2.json */ \"(rsc)/./node_modules/@uniswap/swap-router-contracts/artifacts/contracts/lens/QuoterV2.sol/QuoterV2.json\");\n/* harmony import */ var _uniswap_v3_staker_artifacts_contracts_UniswapV3Staker_sol_UniswapV3Staker_json__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @uniswap/v3-staker/artifacts/contracts/UniswapV3Staker.sol/UniswapV3Staker.json */ \"(rsc)/./node_modules/@uniswap/v3-staker/artifacts/contracts/UniswapV3Staker.sol/UniswapV3Staker.json\");\n/* harmony import */ var _uniswap_v3_periphery_artifacts_contracts_SwapRouter_sol_SwapRouter_json__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @uniswap/v3-periphery/artifacts/contracts/SwapRouter.sol/SwapRouter.json */ \"(rsc)/./node_modules/@uniswap/v3-periphery/artifacts/contracts/SwapRouter.sol/SwapRouter.json\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nfunction _createForOfIteratorHelperLoose(r, e) {\n  var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (t) return (t = t.call(r)).next.bind(t);\n  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) {\n    t && (r = t);\n    var o = 0;\n    return function () {\n      return o >= r.length ? {\n        done: !0\n      } : {\n        done: !1,\n        value: r[o++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nfunction _regeneratorRuntime() {\n  _regeneratorRuntime = function () {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function (t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function (t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(typeof e + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function () {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function (e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function (t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function (t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    catch: function (t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nvar _TICK_SPACINGS;\nvar FACTORY_ADDRESS = '0x1F98431c8aD98523631AE4a59f267346ea31F984';\nvar ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';\n// @deprecated please use poolInitCodeHash(chainId: ChainId)\nvar POOL_INIT_CODE_HASH = '0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54';\nfunction poolInitCodeHash(chainId) {\n  switch (chainId) {\n    case _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.ChainId.ZKSYNC:\n      return '0x010013f177ea1fcbc4520f9a3ca7cd2d1d77959e05aa66484027cb38e712aeed';\n    default:\n      return POOL_INIT_CODE_HASH;\n  }\n}\n/**\r\n * The default factory enabled fee amounts, denominated in hundredths of bips.\r\n */\nvar FeeAmount;\n(function (FeeAmount) {\n  FeeAmount[FeeAmount[\"LOWEST\"] = 100] = \"LOWEST\";\n  FeeAmount[FeeAmount[\"LOW_200\"] = 200] = \"LOW_200\";\n  FeeAmount[FeeAmount[\"LOW_300\"] = 300] = \"LOW_300\";\n  FeeAmount[FeeAmount[\"LOW_400\"] = 400] = \"LOW_400\";\n  FeeAmount[FeeAmount[\"LOW\"] = 500] = \"LOW\";\n  FeeAmount[FeeAmount[\"MEDIUM\"] = 3000] = \"MEDIUM\";\n  FeeAmount[FeeAmount[\"HIGH\"] = 10000] = \"HIGH\";\n})(FeeAmount || (FeeAmount = {}));\n/**\r\n * The default factory tick spacings by fee amount.\r\n */\nvar TICK_SPACINGS = (_TICK_SPACINGS = {}, _TICK_SPACINGS[FeeAmount.LOWEST] = 1, _TICK_SPACINGS[FeeAmount.LOW_200] = 4, _TICK_SPACINGS[FeeAmount.LOW_300] = 6, _TICK_SPACINGS[FeeAmount.LOW_400] = 8, _TICK_SPACINGS[FeeAmount.LOW] = 10, _TICK_SPACINGS[FeeAmount.MEDIUM] = 60, _TICK_SPACINGS[FeeAmount.HIGH] = 200, _TICK_SPACINGS);\n\n// constants used internally but not expected to be used externally\nvar NEGATIVE_ONE = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(-1);\nvar ZERO = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(0);\nvar ONE = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(1);\n// used in liquidity amount math\nvar Q96 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].exponentiate(/*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(2), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(96));\nvar Q192 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].exponentiate(Q96, /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(2));\n\n/**\r\n * Computes a pool address\r\n * @param factoryAddress The Uniswap V3 factory address\r\n * @param tokenA The first token of the pair, irrespective of sort order\r\n * @param tokenB The second token of the pair, irrespective of sort order\r\n * @param fee The fee tier of the pool\r\n * @param initCodeHashManualOverride Override the init code hash used to compute the pool address if necessary\r\n * @param chainId\r\n * @returns The pool address\r\n */\nfunction computePoolAddress(_ref) {\n  var factoryAddress = _ref.factoryAddress,\n    tokenA = _ref.tokenA,\n    tokenB = _ref.tokenB,\n    fee = _ref.fee,\n    initCodeHashManualOverride = _ref.initCodeHashManualOverride,\n    chainId = _ref.chainId;\n  var _ref2 = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA],\n    token0 = _ref2[0],\n    token1 = _ref2[1]; // does safety checks\n  var salt = (0,_ethersproject_solidity__WEBPACK_IMPORTED_MODULE_11__.keccak256)(['bytes'], [_ethersproject_abi__WEBPACK_IMPORTED_MODULE_12__.defaultAbiCoder.encode(['address', 'address', 'uint24'], [token0.address, token1.address, fee])]);\n  var initCodeHash = initCodeHashManualOverride != null ? initCodeHashManualOverride : poolInitCodeHash(chainId);\n  // ZKSync uses a different create2 address computation\n  // Most likely all ZKEVM chains will use the different computation from standard create2\n  switch (chainId) {\n    case _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.ChainId.ZKSYNC:\n      return (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.computeZksyncCreate2Address)(factoryAddress, initCodeHash, salt);\n    default:\n      return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_13__.getCreate2Address)(factoryAddress, salt, initCodeHash);\n  }\n}\n\nvar FullMath = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function FullMath() {}\n  FullMath.mulDivRoundingUp = function mulDivRoundingUp(a, b, denominator) {\n    var product = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(a, b);\n    var result = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(product, denominator);\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEqual(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].remainder(product, denominator), ZERO)) result = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(result, ONE);\n    return result;\n  };\n  return FullMath;\n}();\n\nvar MaxUint160 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(/*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].exponentiate(/*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(2), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(160)), ONE);\nfunction multiplyIn256(x, y) {\n  var product = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(x, y);\n  return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].bitwiseAnd(product, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.MaxUint256);\n}\nfunction addIn256(x, y) {\n  var sum = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(x, y);\n  return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].bitwiseAnd(sum, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.MaxUint256);\n}\nvar SqrtPriceMath = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function SqrtPriceMath() {}\n  SqrtPriceMath.getAmount0Delta = function getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp) {\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n      var _ref = [sqrtRatioBX96, sqrtRatioAX96];\n      sqrtRatioAX96 = _ref[0];\n      sqrtRatioBX96 = _ref[1];\n    }\n    var numerator1 = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].leftShift(liquidity, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(96));\n    var numerator2 = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(sqrtRatioBX96, sqrtRatioAX96);\n    return roundUp ? FullMath.mulDivRoundingUp(FullMath.mulDivRoundingUp(numerator1, numerator2, sqrtRatioBX96), ONE, sqrtRatioAX96) : jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(numerator1, numerator2), sqrtRatioBX96), sqrtRatioAX96);\n  };\n  SqrtPriceMath.getAmount1Delta = function getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp) {\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n      var _ref2 = [sqrtRatioBX96, sqrtRatioAX96];\n      sqrtRatioAX96 = _ref2[0];\n      sqrtRatioBX96 = _ref2[1];\n    }\n    return roundUp ? FullMath.mulDivRoundingUp(liquidity, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(sqrtRatioBX96, sqrtRatioAX96), Q96) : jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(liquidity, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(sqrtRatioBX96, sqrtRatioAX96)), Q96);\n  };\n  SqrtPriceMath.getNextSqrtPriceFromInput = function getNextSqrtPriceFromInput(sqrtPX96, liquidity, amountIn, zeroForOne) {\n    !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(sqrtPX96, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false) : 0 : void 0;\n    !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(liquidity, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false) : 0 : void 0;\n    return zeroForOne ? this.getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountIn, true) : this.getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountIn, true);\n  };\n  SqrtPriceMath.getNextSqrtPriceFromOutput = function getNextSqrtPriceFromOutput(sqrtPX96, liquidity, amountOut, zeroForOne) {\n    !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(sqrtPX96, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false) : 0 : void 0;\n    !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(liquidity, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false) : 0 : void 0;\n    return zeroForOne ? this.getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountOut, false) : this.getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountOut, false);\n  };\n  SqrtPriceMath.getNextSqrtPriceFromAmount0RoundingUp = function getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amount, add) {\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].equal(amount, ZERO)) return sqrtPX96;\n    var numerator1 = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].leftShift(liquidity, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(96));\n    if (add) {\n      var product = multiplyIn256(amount, sqrtPX96);\n      if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].equal(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(product, amount), sqrtPX96)) {\n        var denominator = addIn256(numerator1, product);\n        if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThanOrEqual(denominator, numerator1)) {\n          return FullMath.mulDivRoundingUp(numerator1, sqrtPX96, denominator);\n        }\n      }\n      return FullMath.mulDivRoundingUp(numerator1, ONE, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(numerator1, sqrtPX96), amount));\n    } else {\n      var _product = multiplyIn256(amount, sqrtPX96);\n      !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].equal(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(_product, amount), sqrtPX96) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false) : 0 : void 0;\n      !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(numerator1, _product) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false) : 0 : void 0;\n      var _denominator = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(numerator1, _product);\n      return FullMath.mulDivRoundingUp(numerator1, sqrtPX96, _denominator);\n    }\n  };\n  SqrtPriceMath.getNextSqrtPriceFromAmount1RoundingDown = function getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amount, add) {\n    if (add) {\n      var quotient = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThanOrEqual(amount, MaxUint160) ? jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].leftShift(amount, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(96)), liquidity) : jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(amount, Q96), liquidity);\n      return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(sqrtPX96, quotient);\n    } else {\n      var _quotient = FullMath.mulDivRoundingUp(amount, Q96, liquidity);\n      !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(sqrtPX96, _quotient) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false) : 0 : void 0;\n      return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(sqrtPX96, _quotient);\n    }\n  };\n  return SqrtPriceMath;\n}();\n\nvar MAX_FEE = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].exponentiate(/*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(10), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(6));\nvar SwapMath = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function SwapMath() {}\n  SwapMath.computeSwapStep = function computeSwapStep(sqrtRatioCurrentX96, sqrtRatioTargetX96, liquidity, amountRemaining, feePips) {\n    var returnValues = {};\n    feePips = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(feePips);\n    var zeroForOne = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThanOrEqual(sqrtRatioCurrentX96, sqrtRatioTargetX96);\n    var exactIn = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThanOrEqual(amountRemaining, ZERO);\n    if (exactIn) {\n      var amountRemainingLessFee = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(amountRemaining, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(MAX_FEE, feePips)), MAX_FEE);\n      returnValues.amountIn = zeroForOne ? SqrtPriceMath.getAmount0Delta(sqrtRatioTargetX96, sqrtRatioCurrentX96, liquidity, true) : SqrtPriceMath.getAmount1Delta(sqrtRatioCurrentX96, sqrtRatioTargetX96, liquidity, true);\n      if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThanOrEqual(amountRemainingLessFee, returnValues.amountIn)) {\n        returnValues.sqrtRatioNextX96 = sqrtRatioTargetX96;\n      } else {\n        returnValues.sqrtRatioNextX96 = SqrtPriceMath.getNextSqrtPriceFromInput(sqrtRatioCurrentX96, liquidity, amountRemainingLessFee, zeroForOne);\n      }\n    } else {\n      returnValues.amountOut = zeroForOne ? SqrtPriceMath.getAmount1Delta(sqrtRatioTargetX96, sqrtRatioCurrentX96, liquidity, false) : SqrtPriceMath.getAmount0Delta(sqrtRatioCurrentX96, sqrtRatioTargetX96, liquidity, false);\n      if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThanOrEqual(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(amountRemaining, NEGATIVE_ONE), returnValues.amountOut)) {\n        returnValues.sqrtRatioNextX96 = sqrtRatioTargetX96;\n      } else {\n        returnValues.sqrtRatioNextX96 = SqrtPriceMath.getNextSqrtPriceFromOutput(sqrtRatioCurrentX96, liquidity, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(amountRemaining, NEGATIVE_ONE), zeroForOne);\n      }\n    }\n    var max = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].equal(sqrtRatioTargetX96, returnValues.sqrtRatioNextX96);\n    if (zeroForOne) {\n      returnValues.amountIn = max && exactIn ? returnValues.amountIn : SqrtPriceMath.getAmount0Delta(returnValues.sqrtRatioNextX96, sqrtRatioCurrentX96, liquidity, true);\n      returnValues.amountOut = max && !exactIn ? returnValues.amountOut : SqrtPriceMath.getAmount1Delta(returnValues.sqrtRatioNextX96, sqrtRatioCurrentX96, liquidity, false);\n    } else {\n      returnValues.amountIn = max && exactIn ? returnValues.amountIn : SqrtPriceMath.getAmount1Delta(sqrtRatioCurrentX96, returnValues.sqrtRatioNextX96, liquidity, true);\n      returnValues.amountOut = max && !exactIn ? returnValues.amountOut : SqrtPriceMath.getAmount0Delta(sqrtRatioCurrentX96, returnValues.sqrtRatioNextX96, liquidity, false);\n    }\n    if (!exactIn && jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(returnValues.amountOut, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(amountRemaining, NEGATIVE_ONE))) {\n      returnValues.amountOut = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(amountRemaining, NEGATIVE_ONE);\n    }\n    if (exactIn && jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEqual(returnValues.sqrtRatioNextX96, sqrtRatioTargetX96)) {\n      // we didn't reach the target, so take the remainder of the maximum input as fee\n      returnValues.feeAmount = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(amountRemaining, returnValues.amountIn);\n    } else {\n      returnValues.feeAmount = FullMath.mulDivRoundingUp(returnValues.amountIn, feePips, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(MAX_FEE, feePips));\n    }\n    return [returnValues.sqrtRatioNextX96, returnValues.amountIn, returnValues.amountOut, returnValues.feeAmount];\n  };\n  return SwapMath;\n}();\n\nvar LiquidityMath = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function LiquidityMath() {}\n  LiquidityMath.addDelta = function addDelta(x, y) {\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThan(y, ZERO)) {\n      return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(x, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(y, NEGATIVE_ONE));\n    } else {\n      return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(x, y);\n    }\n  };\n  return LiquidityMath;\n}();\n\nvar TWO = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(2);\nvar POWERS_OF_2 = /*#__PURE__*/[128, 64, 32, 16, 8, 4, 2, 1].map(function (pow) {\n  return [pow, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].exponentiate(TWO, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(pow))];\n});\nfunction mostSignificantBit(x) {\n  !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(x, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'ZERO') : 0 : void 0;\n  !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThanOrEqual(x, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.MaxUint256) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'MAX') : 0 : void 0;\n  var msb = 0;\n  for (var _iterator = _createForOfIteratorHelperLoose(POWERS_OF_2), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n      power = _step$value[0],\n      min = _step$value[1];\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThanOrEqual(x, min)) {\n      x = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].signedRightShift(x, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(power));\n      msb += power;\n    }\n  }\n  return msb;\n}\n\nfunction mulShift(val, mulBy) {\n  return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].signedRightShift(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(val, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(mulBy)), jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(128));\n}\nvar Q32 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].exponentiate(/*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(2), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(32));\nvar TickMath = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function TickMath() {}\n  /**\r\n   * Returns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tick\r\n   * @param tick the tick for which to compute the sqrt ratio\r\n   */\n  TickMath.getSqrtRatioAtTick = function getSqrtRatioAtTick(tick) {\n    !(tick >= TickMath.MIN_TICK && tick <= TickMath.MAX_TICK && Number.isInteger(tick)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TICK') : 0 : void 0;\n    var absTick = tick < 0 ? tick * -1 : tick;\n    var ratio = (absTick & 0x1) !== 0 ? jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt('0xfffcb933bd6fad37aa2d162d1a594001') : jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt('0x100000000000000000000000000000000');\n    if ((absTick & 0x2) !== 0) ratio = mulShift(ratio, '0xfff97272373d413259a46990580e213a');\n    if ((absTick & 0x4) !== 0) ratio = mulShift(ratio, '0xfff2e50f5f656932ef12357cf3c7fdcc');\n    if ((absTick & 0x8) !== 0) ratio = mulShift(ratio, '0xffe5caca7e10e4e61c3624eaa0941cd0');\n    if ((absTick & 0x10) !== 0) ratio = mulShift(ratio, '0xffcb9843d60f6159c9db58835c926644');\n    if ((absTick & 0x20) !== 0) ratio = mulShift(ratio, '0xff973b41fa98c081472e6896dfb254c0');\n    if ((absTick & 0x40) !== 0) ratio = mulShift(ratio, '0xff2ea16466c96a3843ec78b326b52861');\n    if ((absTick & 0x80) !== 0) ratio = mulShift(ratio, '0xfe5dee046a99a2a811c461f1969c3053');\n    if ((absTick & 0x100) !== 0) ratio = mulShift(ratio, '0xfcbe86c7900a88aedcffc83b479aa3a4');\n    if ((absTick & 0x200) !== 0) ratio = mulShift(ratio, '0xf987a7253ac413176f2b074cf7815e54');\n    if ((absTick & 0x400) !== 0) ratio = mulShift(ratio, '0xf3392b0822b70005940c7a398e4b70f3');\n    if ((absTick & 0x800) !== 0) ratio = mulShift(ratio, '0xe7159475a2c29b7443b29c7fa6e889d9');\n    if ((absTick & 0x1000) !== 0) ratio = mulShift(ratio, '0xd097f3bdfd2022b8845ad8f792aa5825');\n    if ((absTick & 0x2000) !== 0) ratio = mulShift(ratio, '0xa9f746462d870fdf8a65dc1f90e061e5');\n    if ((absTick & 0x4000) !== 0) ratio = mulShift(ratio, '0x70d869a156d2a1b890bb3df62baf32f7');\n    if ((absTick & 0x8000) !== 0) ratio = mulShift(ratio, '0x31be135f97d08fd981231505542fcfa6');\n    if ((absTick & 0x10000) !== 0) ratio = mulShift(ratio, '0x9aa508b5b7a84e1c677de54f3e99bc9');\n    if ((absTick & 0x20000) !== 0) ratio = mulShift(ratio, '0x5d6af8dedb81196699c329225ee604');\n    if ((absTick & 0x40000) !== 0) ratio = mulShift(ratio, '0x2216e584f5fa1ea926041bedfe98');\n    if ((absTick & 0x80000) !== 0) ratio = mulShift(ratio, '0x48a170391f7dc42444e8fa2');\n    if (tick > 0) ratio = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.MaxUint256, ratio);\n    // back to Q96\n    return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].remainder(ratio, Q32), ZERO) ? jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(ratio, Q32), ONE) : jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(ratio, Q32);\n  }\n  /**\r\n   * Returns the tick corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtTick(tick) <= sqrtRatioX96\r\n   * and #getSqrtRatioAtTick(tick + 1) > sqrtRatioX96\r\n   * @param sqrtRatioX96 the sqrt ratio as a Q64.96 for which to compute the tick\r\n   */;\n  TickMath.getTickAtSqrtRatio = function getTickAtSqrtRatio(sqrtRatioX96) {\n    !(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO) && jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThan(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'SQRT_RATIO') : 0 : void 0;\n    var sqrtRatioX128 = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].leftShift(sqrtRatioX96, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(32));\n    var msb = mostSignificantBit(sqrtRatioX128);\n    var r;\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThanOrEqual(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(msb), jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(128))) {\n      r = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].signedRightShift(sqrtRatioX128, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(msb - 127));\n    } else {\n      r = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].leftShift(sqrtRatioX128, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(127 - msb));\n    }\n    var log_2 = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].leftShift(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(msb), jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(128)), jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(64));\n    for (var i = 0; i < 14; i++) {\n      r = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].signedRightShift(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(r, r), jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(127));\n      var f = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].signedRightShift(r, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(128));\n      log_2 = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].bitwiseOr(log_2, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].leftShift(f, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(63 - i)));\n      r = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].signedRightShift(r, f);\n    }\n    var log_sqrt10001 = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(log_2, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt('255738958999603826347141'));\n    var tickLow = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toNumber(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].signedRightShift(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(log_sqrt10001, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt('3402992956809132418596140100660247210')), jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(128)));\n    var tickHigh = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toNumber(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].signedRightShift(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(log_sqrt10001, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt('291339464771989622907027621153398088495')), jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(128)));\n    return tickLow === tickHigh ? tickLow : jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThanOrEqual(TickMath.getSqrtRatioAtTick(tickHigh), sqrtRatioX96) ? tickHigh : tickLow;\n  };\n  return TickMath;\n}();\n/**\r\n * The minimum tick that can be used on any pool.\r\n */\nTickMath.MIN_TICK = -887272;\n/**\r\n * The maximum tick that can be used on any pool.\r\n */\nTickMath.MAX_TICK = -TickMath.MIN_TICK;\n/**\r\n * The sqrt ratio corresponding to the minimum tick that could be used on any pool.\r\n */\nTickMath.MIN_SQRT_RATIO = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt('4295128739');\n/**\r\n * The sqrt ratio corresponding to the maximum tick that could be used on any pool.\r\n */\nTickMath.MAX_SQRT_RATIO = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt('1461446703485210103287273052203988822378723970342');\n\nfunction v3Swap(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9) {\n  return _v3Swap.apply(this, arguments);\n}\nfunction _v3Swap() {\n  _v3Swap = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(fee, sqrtRatioX96, tickCurrent, liquidity, tickSpacing, tickDataProvider, zeroForOne, amountSpecified, sqrtPriceLimitX96) {\n    var exactInput, state, step, _yield$tickDataProvid, _SwapMath$computeSwap, liquidityNet;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!sqrtPriceLimitX96) sqrtPriceLimitX96 = zeroForOne ? jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(TickMath.MIN_SQRT_RATIO, ONE) : jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(TickMath.MAX_SQRT_RATIO, ONE);\n          if (zeroForOne) {\n            !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(sqrtPriceLimitX96, TickMath.MIN_SQRT_RATIO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'RATIO_MIN') : 0 : void 0;\n            !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThan(sqrtPriceLimitX96, sqrtRatioX96) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'RATIO_CURRENT') : 0 : void 0;\n          } else {\n            !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThan(sqrtPriceLimitX96, TickMath.MAX_SQRT_RATIO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'RATIO_MAX') : 0 : void 0;\n            !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(sqrtPriceLimitX96, sqrtRatioX96) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'RATIO_CURRENT') : 0 : void 0;\n          }\n          exactInput = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThanOrEqual(amountSpecified, ZERO); // keep track of swap state\n          state = {\n            amountSpecifiedRemaining: amountSpecified,\n            amountCalculated: ZERO,\n            sqrtPriceX96: sqrtRatioX96,\n            tick: tickCurrent,\n            liquidity: liquidity\n          }; // start swap while loop\n        case 4:\n          if (!(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEqual(state.amountSpecifiedRemaining, ZERO) && state.sqrtPriceX96 !== sqrtPriceLimitX96)) {\n            _context.next = 35;\n            break;\n          }\n          step = {};\n          step.sqrtPriceStartX96 = state.sqrtPriceX96;\n          _context.next = 9;\n          return tickDataProvider.nextInitializedTickWithinOneWord(state.tick, zeroForOne, tickSpacing);\n        case 9:\n          _yield$tickDataProvid = _context.sent;\n          step.tickNext = _yield$tickDataProvid[0];\n          step.initialized = _yield$tickDataProvid[1];\n          if (step.tickNext < TickMath.MIN_TICK) {\n            step.tickNext = TickMath.MIN_TICK;\n          } else if (step.tickNext > TickMath.MAX_TICK) {\n            step.tickNext = TickMath.MAX_TICK;\n          }\n          step.sqrtPriceNextX96 = TickMath.getSqrtRatioAtTick(step.tickNext);\n          _SwapMath$computeSwap = SwapMath.computeSwapStep(state.sqrtPriceX96, (zeroForOne ? jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThan(step.sqrtPriceNextX96, sqrtPriceLimitX96) : jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(step.sqrtPriceNextX96, sqrtPriceLimitX96)) ? sqrtPriceLimitX96 : step.sqrtPriceNextX96, state.liquidity, state.amountSpecifiedRemaining, fee);\n          state.sqrtPriceX96 = _SwapMath$computeSwap[0];\n          step.amountIn = _SwapMath$computeSwap[1];\n          step.amountOut = _SwapMath$computeSwap[2];\n          step.feeAmount = _SwapMath$computeSwap[3];\n          if (exactInput) {\n            state.amountSpecifiedRemaining = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(state.amountSpecifiedRemaining, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(step.amountIn, step.feeAmount));\n            state.amountCalculated = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(state.amountCalculated, step.amountOut);\n          } else {\n            state.amountSpecifiedRemaining = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(state.amountSpecifiedRemaining, step.amountOut);\n            state.amountCalculated = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(state.amountCalculated, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(step.amountIn, step.feeAmount));\n          }\n          // TODO\n          if (!jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].equal(state.sqrtPriceX96, step.sqrtPriceNextX96)) {\n            _context.next = 32;\n            break;\n          }\n          if (!step.initialized) {\n            _context.next = 29;\n            break;\n          }\n          _context.t0 = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n          _context.next = 25;\n          return tickDataProvider.getTick(step.tickNext);\n        case 25:\n          _context.t1 = _context.sent.liquidityNet;\n          liquidityNet = _context.t0.BigInt.call(_context.t0, _context.t1);\n          // if we're moving leftward, we interpret liquidityNet as the opposite sign\n          // safe because liquidityNet cannot be type(int128).min\n          if (zeroForOne) liquidityNet = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(liquidityNet, NEGATIVE_ONE);\n          state.liquidity = LiquidityMath.addDelta(state.liquidity, liquidityNet);\n        case 29:\n          state.tick = zeroForOne ? step.tickNext - 1 : step.tickNext;\n          _context.next = 33;\n          break;\n        case 32:\n          if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEqual(state.sqrtPriceX96, step.sqrtPriceStartX96)) {\n            // updated comparison function\n            // recompute unless we're on a lower tick boundary (i.e. already transitioned ticks), and haven't moved\n            state.tick = TickMath.getTickAtSqrtRatio(state.sqrtPriceX96);\n          }\n        case 33:\n          _context.next = 4;\n          break;\n        case 35:\n          return _context.abrupt(\"return\", {\n            amountCalculated: state.amountCalculated,\n            sqrtRatioX96: state.sqrtPriceX96,\n            liquidity: state.liquidity,\n            tickCurrent: state.tick\n          });\n        case 36:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _v3Swap.apply(this, arguments);\n}\n\n/**\r\n * This tick data provider does not know how to fetch any tick data. It throws whenever it is required. Useful if you\r\n * do not need to load tick data for your use case.\r\n */\nvar NoTickDataProvider = /*#__PURE__*/function () {\n  function NoTickDataProvider() {}\n  var _proto = NoTickDataProvider.prototype;\n  _proto.getTick = /*#__PURE__*/function () {\n    var _getTick = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_tick) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            throw new Error(NoTickDataProvider.ERROR_MESSAGE);\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    function getTick(_x) {\n      return _getTick.apply(this, arguments);\n    }\n    return getTick;\n  }();\n  _proto.nextInitializedTickWithinOneWord = /*#__PURE__*/function () {\n    var _nextInitializedTickWithinOneWord = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_tick, _lte, _tickSpacing) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            throw new Error(NoTickDataProvider.ERROR_MESSAGE);\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    function nextInitializedTickWithinOneWord(_x2, _x3, _x4) {\n      return _nextInitializedTickWithinOneWord.apply(this, arguments);\n    }\n    return nextInitializedTickWithinOneWord;\n  }();\n  return NoTickDataProvider;\n}();\nNoTickDataProvider.ERROR_MESSAGE = 'No tick data provider was given';\n\n/**\r\n * Determines if a tick list is sorted\r\n * @param list The tick list\r\n * @param comparator The comparator\r\n * @returns true if sorted\r\n */\nfunction isSorted(list, comparator) {\n  for (var i = 0; i < list.length - 1; i++) {\n    if (comparator(list[i], list[i + 1]) > 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction tickComparator(a, b) {\n  return a.index - b.index;\n}\n/**\r\n * Utility methods for interacting with sorted lists of ticks\r\n */\nvar TickList = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed\r\n   */\n  function TickList() {}\n  TickList.validateList = function validateList(ticks, tickSpacing) {\n    !(tickSpacing > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TICK_SPACING_NONZERO') : 0 : void 0;\n    // ensure ticks are spaced appropriately\n    !ticks.every(function (_ref) {\n      var index = _ref.index;\n      return index % tickSpacing === 0;\n    }) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TICK_SPACING') : 0 : void 0;\n    // ensure tick liquidity deltas sum to 0\n    !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].equal(ticks.reduce(function (accumulator, _ref2) {\n      var liquidityNet = _ref2.liquidityNet;\n      return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(accumulator, liquidityNet);\n    }, ZERO), ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'ZERO_NET') : 0 : void 0;\n    !isSorted(ticks, tickComparator) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'SORTED') : 0 : void 0;\n  };\n  TickList.isBelowSmallest = function isBelowSmallest(ticks, tick) {\n    !(ticks.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'LENGTH') : 0 : void 0;\n    return tick < ticks[0].index;\n  };\n  TickList.isAtOrAboveLargest = function isAtOrAboveLargest(ticks, tick) {\n    !(ticks.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'LENGTH') : 0 : void 0;\n    return tick >= ticks[ticks.length - 1].index;\n  };\n  TickList.getTick = function getTick(ticks, index) {\n    var tick = ticks[this.binarySearch(ticks, index)];\n    !(tick.index === index) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'NOT_CONTAINED') : 0 : void 0;\n    return tick;\n  }\n  /**\r\n   * Finds the largest tick in the list of ticks that is less than or equal to tick\r\n   * @param ticks list of ticks\r\n   * @param tick tick to find the largest tick that is less than or equal to tick\r\n   * @private\r\n   */;\n  TickList.binarySearch = function binarySearch(ticks, tick) {\n    !!this.isBelowSmallest(ticks, tick) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'BELOW_SMALLEST') : 0 : void 0;\n    var l = 0;\n    var r = ticks.length - 1;\n    var i;\n    while (true) {\n      i = Math.floor((l + r) / 2);\n      if (ticks[i].index <= tick && (i === ticks.length - 1 || ticks[i + 1].index > tick)) {\n        return i;\n      }\n      if (ticks[i].index < tick) {\n        l = i + 1;\n      } else {\n        r = i - 1;\n      }\n    }\n  };\n  TickList.nextInitializedTick = function nextInitializedTick(ticks, tick, lte) {\n    if (lte) {\n      !!TickList.isBelowSmallest(ticks, tick) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'BELOW_SMALLEST') : 0 : void 0;\n      if (TickList.isAtOrAboveLargest(ticks, tick)) {\n        return ticks[ticks.length - 1];\n      }\n      var index = this.binarySearch(ticks, tick);\n      return ticks[index];\n    } else {\n      !!this.isAtOrAboveLargest(ticks, tick) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'AT_OR_ABOVE_LARGEST') : 0 : void 0;\n      if (this.isBelowSmallest(ticks, tick)) {\n        return ticks[0];\n      }\n      var _index = this.binarySearch(ticks, tick);\n      return ticks[_index + 1];\n    }\n  };\n  TickList.nextInitializedTickWithinOneWord = function nextInitializedTickWithinOneWord(ticks, tick, lte, tickSpacing) {\n    var compressed = Math.floor(tick / tickSpacing); // matches rounding in the code\n    if (lte) {\n      var wordPos = compressed >> 8;\n      var minimum = (wordPos << 8) * tickSpacing;\n      if (TickList.isBelowSmallest(ticks, tick)) {\n        return [minimum, false];\n      }\n      var index = TickList.nextInitializedTick(ticks, tick, lte).index;\n      var nextInitializedTick = Math.max(minimum, index);\n      return [nextInitializedTick, nextInitializedTick === index];\n    } else {\n      var _wordPos = compressed + 1 >> 8;\n      var maximum = ((_wordPos + 1 << 8) - 1) * tickSpacing;\n      if (this.isAtOrAboveLargest(ticks, tick)) {\n        return [maximum, false];\n      }\n      var _index2 = this.nextInitializedTick(ticks, tick, lte).index;\n      var _nextInitializedTick = Math.min(maximum, _index2);\n      return [_nextInitializedTick, _nextInitializedTick === _index2];\n    }\n  };\n  return TickList;\n}();\n\n/**\r\n * Converts a big int to a hex string\r\n * @param bigintIsh\r\n * @returns The hex encoded calldata\r\n */\nfunction toHex(bigintIsh) {\n  var bigInt = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(bigintIsh);\n  var hex = bigInt.toString(16);\n  if (hex.length % 2 !== 0) {\n    hex = \"0\" + hex;\n  }\n  return \"0x\" + hex;\n}\n\n/**\r\n * Converts a route to a hex encoded path\r\n * @param route the v3 path to convert to an encoded path\r\n * @param exactOutput whether the route should be encoded in reverse, for making exact output swaps\r\n */\nfunction encodeRouteToPath(route, exactOutput) {\n  var firstInputToken = route.input.wrapped;\n  var _route$pools$reduce = route.pools.reduce(function (_ref, pool, index) {\n      var inputToken = _ref.inputToken,\n        path = _ref.path,\n        types = _ref.types;\n      var outputToken = pool.token0.equals(inputToken) ? pool.token1 : pool.token0;\n      if (index === 0) {\n        return {\n          inputToken: outputToken,\n          types: ['address', 'uint24', 'address'],\n          path: [inputToken.address, pool.fee, outputToken.address]\n        };\n      } else {\n        return {\n          inputToken: outputToken,\n          types: [].concat(types, ['uint24', 'address']),\n          path: [].concat(path, [pool.fee, outputToken.address])\n        };\n      }\n    }, {\n      inputToken: firstInputToken,\n      path: [],\n      types: []\n    }),\n    path = _route$pools$reduce.path,\n    types = _route$pools$reduce.types;\n  return exactOutput ? (0,_ethersproject_solidity__WEBPACK_IMPORTED_MODULE_11__.pack)(types.reverse(), path.reverse()) : (0,_ethersproject_solidity__WEBPACK_IMPORTED_MODULE_11__.pack)(types, path);\n}\n\n/**\r\n * Returns the sqrt ratio as a Q64.96 corresponding to a given ratio of amount1 and amount0\r\n * @param amount1 The numerator amount i.e., the amount of token1\r\n * @param amount0 The denominator amount i.e., the amount of token0\r\n * @returns The sqrt ratio\r\n */\nfunction encodeSqrtRatioX96(amount1, amount0) {\n  var numerator = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].leftShift(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(amount1), jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(192));\n  var denominator = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(amount0);\n  var ratioX192 = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(numerator, denominator);\n  return (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.sqrt)(ratioX192);\n}\n\n/**\r\n * Returns an imprecise maximum amount of liquidity received for a given amount of token 0.\r\n * This function is available to accommodate LiquidityAmounts#getLiquidityForAmount0 in the v3 periphery,\r\n * which could be more precise by at least 32 bits by dividing by Q64 instead of Q96 in the intermediate step,\r\n * and shifting the subtracted ratio left by 32 bits. This imprecise calculation will likely be replaced in a future\r\n * v3 router contract.\r\n * @param sqrtRatioAX96 The price at the lower boundary\r\n * @param sqrtRatioBX96 The price at the upper boundary\r\n * @param amount0 The token0 amount\r\n * @returns liquidity for amount0, imprecise\r\n */\nfunction maxLiquidityForAmount0Imprecise(sqrtRatioAX96, sqrtRatioBX96, amount0) {\n  if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n    var _ref = [sqrtRatioBX96, sqrtRatioAX96];\n    sqrtRatioAX96 = _ref[0];\n    sqrtRatioBX96 = _ref[1];\n  }\n  var intermediate = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(sqrtRatioAX96, sqrtRatioBX96), Q96);\n  return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(amount0), intermediate), jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(sqrtRatioBX96, sqrtRatioAX96));\n}\n/**\r\n * Returns a precise maximum amount of liquidity received for a given amount of token 0 by dividing by Q64 instead of Q96 in the intermediate step,\r\n * and shifting the subtracted ratio left by 32 bits.\r\n * @param sqrtRatioAX96 The price at the lower boundary\r\n * @param sqrtRatioBX96 The price at the upper boundary\r\n * @param amount0 The token0 amount\r\n * @returns liquidity for amount0, precise\r\n */\nfunction maxLiquidityForAmount0Precise(sqrtRatioAX96, sqrtRatioBX96, amount0) {\n  if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n    var _ref2 = [sqrtRatioBX96, sqrtRatioAX96];\n    sqrtRatioAX96 = _ref2[0];\n    sqrtRatioBX96 = _ref2[1];\n  }\n  var numerator = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(amount0), sqrtRatioAX96), sqrtRatioBX96);\n  var denominator = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(Q96, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(sqrtRatioBX96, sqrtRatioAX96));\n  return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(numerator, denominator);\n}\n/**\r\n * Computes the maximum amount of liquidity received for a given amount of token1\r\n * @param sqrtRatioAX96 The price at the lower tick boundary\r\n * @param sqrtRatioBX96 The price at the upper tick boundary\r\n * @param amount1 The token1 amount\r\n * @returns liquidity for amount1\r\n */\nfunction maxLiquidityForAmount1(sqrtRatioAX96, sqrtRatioBX96, amount1) {\n  if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n    var _ref3 = [sqrtRatioBX96, sqrtRatioAX96];\n    sqrtRatioAX96 = _ref3[0];\n    sqrtRatioBX96 = _ref3[1];\n  }\n  return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(amount1), Q96), jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(sqrtRatioBX96, sqrtRatioAX96));\n}\n/**\r\n * Computes the maximum amount of liquidity received for a given amount of token0, token1,\r\n * and the prices at the tick boundaries.\r\n * @param sqrtRatioCurrentX96 the current price\r\n * @param sqrtRatioAX96 price at lower boundary\r\n * @param sqrtRatioBX96 price at upper boundary\r\n * @param amount0 token0 amount\r\n * @param amount1 token1 amount\r\n * @param useFullPrecision if false, liquidity will be maximized according to what the router can calculate,\r\n * not what core can theoretically support\r\n */\nfunction maxLiquidityForAmounts(sqrtRatioCurrentX96, sqrtRatioAX96, sqrtRatioBX96, amount0, amount1, useFullPrecision) {\n  if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(sqrtRatioAX96, sqrtRatioBX96)) {\n    var _ref4 = [sqrtRatioBX96, sqrtRatioAX96];\n    sqrtRatioAX96 = _ref4[0];\n    sqrtRatioBX96 = _ref4[1];\n  }\n  var maxLiquidityForAmount0 = useFullPrecision ? maxLiquidityForAmount0Precise : maxLiquidityForAmount0Imprecise;\n  if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThanOrEqual(sqrtRatioCurrentX96, sqrtRatioAX96)) {\n    return maxLiquidityForAmount0(sqrtRatioAX96, sqrtRatioBX96, amount0);\n  } else if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThan(sqrtRatioCurrentX96, sqrtRatioBX96)) {\n    var liquidity0 = maxLiquidityForAmount0(sqrtRatioCurrentX96, sqrtRatioBX96, amount0);\n    var liquidity1 = maxLiquidityForAmount1(sqrtRatioAX96, sqrtRatioCurrentX96, amount1);\n    return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThan(liquidity0, liquidity1) ? liquidity0 : liquidity1;\n  } else {\n    return maxLiquidityForAmount1(sqrtRatioAX96, sqrtRatioBX96, amount1);\n  }\n}\n\n/**\r\n * Returns the closest tick that is nearest a given tick and usable for the given tick spacing\r\n * @param tick the target tick\r\n * @param tickSpacing the spacing of the pool\r\n */\nfunction nearestUsableTick(tick, tickSpacing) {\n  !(Number.isInteger(tick) && Number.isInteger(tickSpacing)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'INTEGERS') : 0 : void 0;\n  !(tickSpacing > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TICK_SPACING') : 0 : void 0;\n  !(tick >= TickMath.MIN_TICK && tick <= TickMath.MAX_TICK) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TICK_BOUND') : 0 : void 0;\n  var rounded = Math.round(tick / tickSpacing) * tickSpacing;\n  if (rounded < TickMath.MIN_TICK) return rounded + tickSpacing;else if (rounded > TickMath.MAX_TICK) return rounded - tickSpacing;else return rounded;\n}\n\nvar Q128 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].exponentiate(/*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(2), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(128));\nvar PositionLibrary = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function PositionLibrary() {}\n  // replicates the portions of Position#update required to compute unaccounted fees\n  PositionLibrary.getTokensOwed = function getTokensOwed(feeGrowthInside0LastX128, feeGrowthInside1LastX128, liquidity, feeGrowthInside0X128, feeGrowthInside1X128) {\n    var tokensOwed0 = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(subIn256(feeGrowthInside0X128, feeGrowthInside0LastX128), liquidity), Q128);\n    var tokensOwed1 = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(subIn256(feeGrowthInside1X128, feeGrowthInside1LastX128), liquidity), Q128);\n    return [tokensOwed0, tokensOwed1];\n  };\n  return PositionLibrary;\n}();\n\n/**\r\n * Returns a price object corresponding to the input tick and the base/quote token\r\n * Inputs must be tokens because the address order is used to interpret the price represented by the tick\r\n * @param baseToken the base token of the price\r\n * @param quoteToken the quote token of the price\r\n * @param tick the tick for which to return the price\r\n */\nfunction tickToPrice(baseToken, quoteToken, tick) {\n  var sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick);\n  var ratioX192 = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(sqrtRatioX96, sqrtRatioX96);\n  return baseToken.sortsBefore(quoteToken) ? new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(baseToken, quoteToken, Q192, ratioX192) : new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(baseToken, quoteToken, ratioX192, Q192);\n}\n/**\r\n * Returns the first tick for which the given price is greater than or equal to the tick price\r\n * @param price for which to return the closest tick that represents a price less than or equal to the input price,\r\n * i.e. the price of the returned tick is less than or equal to the input price\r\n */\nfunction priceToClosestTick(price) {\n  var sorted = price.baseCurrency.sortsBefore(price.quoteCurrency);\n  var sqrtRatioX96 = sorted ? encodeSqrtRatioX96(price.numerator, price.denominator) : encodeSqrtRatioX96(price.denominator, price.numerator);\n  var tick = TickMath.getTickAtSqrtRatio(sqrtRatioX96);\n  var nextTickPrice = tickToPrice(price.baseCurrency, price.quoteCurrency, tick + 1);\n  if (sorted) {\n    if (!price.lessThan(nextTickPrice)) {\n      tick++;\n    }\n  } else {\n    if (!price.greaterThan(nextTickPrice)) {\n      tick++;\n    }\n  }\n  return tick;\n}\n\nvar Q256 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].exponentiate(/*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(2), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(256));\nfunction subIn256(x, y) {\n  var difference = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(x, y);\n  if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThan(difference, ZERO)) {\n    return jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(Q256, difference);\n  } else {\n    return difference;\n  }\n}\nvar TickLibrary = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function TickLibrary() {}\n  TickLibrary.getFeeGrowthInside = function getFeeGrowthInside(feeGrowthOutsideLower, feeGrowthOutsideUpper, tickLower, tickUpper, tickCurrent, feeGrowthGlobal0X128, feeGrowthGlobal1X128) {\n    var feeGrowthBelow0X128;\n    var feeGrowthBelow1X128;\n    if (tickCurrent >= tickLower) {\n      feeGrowthBelow0X128 = feeGrowthOutsideLower.feeGrowthOutside0X128;\n      feeGrowthBelow1X128 = feeGrowthOutsideLower.feeGrowthOutside1X128;\n    } else {\n      feeGrowthBelow0X128 = subIn256(feeGrowthGlobal0X128, feeGrowthOutsideLower.feeGrowthOutside0X128);\n      feeGrowthBelow1X128 = subIn256(feeGrowthGlobal1X128, feeGrowthOutsideLower.feeGrowthOutside1X128);\n    }\n    var feeGrowthAbove0X128;\n    var feeGrowthAbove1X128;\n    if (tickCurrent < tickUpper) {\n      feeGrowthAbove0X128 = feeGrowthOutsideUpper.feeGrowthOutside0X128;\n      feeGrowthAbove1X128 = feeGrowthOutsideUpper.feeGrowthOutside1X128;\n    } else {\n      feeGrowthAbove0X128 = subIn256(feeGrowthGlobal0X128, feeGrowthOutsideUpper.feeGrowthOutside0X128);\n      feeGrowthAbove1X128 = subIn256(feeGrowthGlobal1X128, feeGrowthOutsideUpper.feeGrowthOutside1X128);\n    }\n    return [subIn256(subIn256(feeGrowthGlobal0X128, feeGrowthBelow0X128), feeGrowthAbove0X128), subIn256(subIn256(feeGrowthGlobal1X128, feeGrowthBelow1X128), feeGrowthAbove1X128)];\n  };\n  return TickLibrary;\n}();\n\nvar Tick = function Tick(_ref) {\n  var index = _ref.index,\n    liquidityGross = _ref.liquidityGross,\n    liquidityNet = _ref.liquidityNet;\n  !(index >= TickMath.MIN_TICK && index <= TickMath.MAX_TICK) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TICK') : 0 : void 0;\n  this.index = index;\n  this.liquidityGross = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(liquidityGross);\n  this.liquidityNet = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(liquidityNet);\n};\n\n/**\r\n * A data provider for ticks that is backed by an in-memory array of ticks.\r\n */\nvar TickListDataProvider = /*#__PURE__*/function () {\n  function TickListDataProvider(ticks, tickSpacing) {\n    var ticksMapped = ticks.map(function (t) {\n      return t instanceof Tick ? t : new Tick(t);\n    });\n    TickList.validateList(ticksMapped, tickSpacing);\n    this.ticks = ticksMapped;\n  }\n  var _proto = TickListDataProvider.prototype;\n  _proto.getTick = /*#__PURE__*/function () {\n    var _getTick = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(tick) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", TickList.getTick(this.ticks, tick));\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this);\n    }));\n    function getTick(_x) {\n      return _getTick.apply(this, arguments);\n    }\n    return getTick;\n  }();\n  _proto.nextInitializedTickWithinOneWord = /*#__PURE__*/function () {\n    var _nextInitializedTickWithinOneWord = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(tick, lte, tickSpacing) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", TickList.nextInitializedTickWithinOneWord(this.ticks, tick, lte, tickSpacing));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, this);\n    }));\n    function nextInitializedTickWithinOneWord(_x2, _x3, _x4) {\n      return _nextInitializedTickWithinOneWord.apply(this, arguments);\n    }\n    return nextInitializedTickWithinOneWord;\n  }();\n  return TickListDataProvider;\n}();\n\n/**\r\n * By default, pools will not allow operations that require ticks.\r\n */\nvar NO_TICK_DATA_PROVIDER_DEFAULT = /*#__PURE__*/new NoTickDataProvider();\n/**\r\n * Represents a V3 pool\r\n */\nvar Pool = /*#__PURE__*/function () {\n  /**\r\n   * Construct a pool\r\n   * @param tokenA One of the tokens in the pool\r\n   * @param tokenB The other token in the pool\r\n   * @param fee The fee in hundredths of a bips of the input amount of every swap that is collected by the pool\r\n   * @param sqrtRatioX96 The sqrt of the current ratio of amounts of token1 to token0\r\n   * @param liquidity The current value of in range liquidity\r\n   * @param tickCurrent The current tick of the pool\r\n   * @param ticks The current state of the pool ticks or a data provider that can return tick data\r\n   */\n  function Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks) {\n    if (ticks === void 0) {\n      ticks = NO_TICK_DATA_PROVIDER_DEFAULT;\n    }\n    !(Number.isInteger(fee) && fee < 1000000) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'FEE') : 0 : void 0;\n    var tickCurrentSqrtRatioX96 = TickMath.getSqrtRatioAtTick(tickCurrent);\n    var nextTickSqrtRatioX96 = TickMath.getSqrtRatioAtTick(tickCurrent + 1);\n    !(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThanOrEqual(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(sqrtRatioX96), tickCurrentSqrtRatioX96) && jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThanOrEqual(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(sqrtRatioX96), nextTickSqrtRatioX96)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'PRICE_BOUNDS') : 0 : void 0;\n    var _ref = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\n    this.token0 = _ref[0];\n    this.token1 = _ref[1];\n    this.fee = fee;\n    this.sqrtRatioX96 = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(sqrtRatioX96);\n    this.liquidity = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(liquidity);\n    this.tickCurrent = tickCurrent;\n    this.tickDataProvider = Array.isArray(ticks) ? new TickListDataProvider(ticks, TICK_SPACINGS[fee]) : ticks;\n  }\n  Pool.getAddress = function getAddress(tokenA, tokenB, fee, initCodeHashManualOverride, factoryAddressOverride) {\n    return computePoolAddress({\n      factoryAddress: factoryAddressOverride != null ? factoryAddressOverride : FACTORY_ADDRESS,\n      fee: fee,\n      tokenA: tokenA,\n      tokenB: tokenB,\n      initCodeHashManualOverride: initCodeHashManualOverride\n    });\n  }\n  /**\r\n   * Returns true if the token is either token0 or token1\r\n   * @param token The token to check\r\n   * @returns True if token is either token0 or token\r\n   */;\n  var _proto = Pool.prototype;\n  _proto.involvesToken = function involvesToken(token) {\n    return token.equals(this.token0) || token.equals(this.token1);\n  }\n  /**\r\n   * Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0\r\n   */;\n  /**\r\n   * Return the price of the given token in terms of the other token in the pool.\r\n   * @param token The token to return price of\r\n   * @returns The price of the given token, in terms of the other.\r\n   */\n  _proto.priceOf = function priceOf(token) {\n    !this.involvesToken(token) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TOKEN') : 0 : void 0;\n    return token.equals(this.token0) ? this.token0Price : this.token1Price;\n  }\n  /**\r\n   * Returns the chain ID of the tokens in the pool.\r\n   */;\n  /**\r\n   * Given an input amount of a token, return the computed output amount, and a pool with state updated after the trade\r\n   * @param inputAmount The input amount for which to quote the output amount\r\n   * @param sqrtPriceLimitX96 The Q64.96 sqrt price limit\r\n   * @returns The output amount and the pool with updated state\r\n   */\n  _proto.getOutputAmount =\n  /*#__PURE__*/\n  function () {\n    var _getOutputAmount = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(inputAmount, sqrtPriceLimitX96) {\n      var zeroForOne, _yield$this$swap, outputAmount, sqrtRatioX96, liquidity, tickCurrent, outputToken;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            !this.involvesToken(inputAmount.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TOKEN') : 0 : void 0;\n            zeroForOne = inputAmount.currency.equals(this.token0);\n            _context.next = 4;\n            return this.swap(zeroForOne, inputAmount.quotient, sqrtPriceLimitX96);\n          case 4:\n            _yield$this$swap = _context.sent;\n            outputAmount = _yield$this$swap.amountCalculated;\n            sqrtRatioX96 = _yield$this$swap.sqrtRatioX96;\n            liquidity = _yield$this$swap.liquidity;\n            tickCurrent = _yield$this$swap.tickCurrent;\n            outputToken = zeroForOne ? this.token1 : this.token0;\n            return _context.abrupt(\"return\", [_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(outputToken, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(outputAmount, NEGATIVE_ONE)), new Pool(this.token0, this.token1, this.fee, sqrtRatioX96, liquidity, tickCurrent, this.tickDataProvider)]);\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this);\n    }));\n    function getOutputAmount(_x, _x2) {\n      return _getOutputAmount.apply(this, arguments);\n    }\n    return getOutputAmount;\n  }()\n  /**\r\n   * Given a desired output amount of a token, return the computed input amount and a pool with state updated after the trade\r\n   * @param outputAmount the output amount for which to quote the input amount\r\n   * @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\r\n   * @returns The input amount and the pool with updated state\r\n   */\n  ;\n  _proto.getInputAmount =\n  /*#__PURE__*/\n  function () {\n    var _getInputAmount = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(outputAmount, sqrtPriceLimitX96) {\n      var zeroForOne, _yield$this$swap2, inputAmount, sqrtRatioX96, liquidity, tickCurrent, inputToken;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            !(outputAmount.currency.isToken && this.involvesToken(outputAmount.currency)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TOKEN') : 0 : void 0;\n            zeroForOne = outputAmount.currency.equals(this.token1);\n            _context2.next = 4;\n            return this.swap(zeroForOne, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(outputAmount.quotient, NEGATIVE_ONE), sqrtPriceLimitX96);\n          case 4:\n            _yield$this$swap2 = _context2.sent;\n            inputAmount = _yield$this$swap2.amountCalculated;\n            sqrtRatioX96 = _yield$this$swap2.sqrtRatioX96;\n            liquidity = _yield$this$swap2.liquidity;\n            tickCurrent = _yield$this$swap2.tickCurrent;\n            inputToken = zeroForOne ? this.token0 : this.token1;\n            return _context2.abrupt(\"return\", [_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(inputToken, inputAmount), new Pool(this.token0, this.token1, this.fee, sqrtRatioX96, liquidity, tickCurrent, this.tickDataProvider)]);\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, this);\n    }));\n    function getInputAmount(_x3, _x4) {\n      return _getInputAmount.apply(this, arguments);\n    }\n    return getInputAmount;\n  }()\n  /**\r\n   * Executes a swap\r\n   * @param zeroForOne Whether the amount in is token0 or token1\r\n   * @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\r\n   * @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\r\n   * @returns amountCalculated\r\n   * @returns sqrtRatioX96\r\n   * @returns liquidity\r\n   * @returns tickCurrent\r\n   */\n  ;\n  _proto.swap =\n  /*#__PURE__*/\n  function () {\n    var _swap = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(zeroForOne, amountSpecified, sqrtPriceLimitX96) {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", v3Swap(jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(this.fee), this.sqrtRatioX96, this.tickCurrent, this.liquidity, this.tickSpacing, this.tickDataProvider, zeroForOne, amountSpecified, sqrtPriceLimitX96));\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, this);\n    }));\n    function swap(_x5, _x6, _x7) {\n      return _swap.apply(this, arguments);\n    }\n    return swap;\n  }();\n  return _createClass(Pool, [{\n    key: \"token0Price\",\n    get: function get() {\n      var _this$_token0Price;\n      return (_this$_token0Price = this._token0Price) != null ? _this$_token0Price : this._token0Price = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(this.token0, this.token1, Q192, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(this.sqrtRatioX96, this.sqrtRatioX96));\n    }\n    /**\r\n     * Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1\r\n     */\n  }, {\n    key: \"token1Price\",\n    get: function get() {\n      var _this$_token1Price;\n      return (_this$_token1Price = this._token1Price) != null ? _this$_token1Price : this._token1Price = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(this.token1, this.token0, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(this.sqrtRatioX96, this.sqrtRatioX96), Q192);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return this.token0.chainId;\n    }\n  }, {\n    key: \"tickSpacing\",\n    get: function get() {\n      return TICK_SPACINGS[this.fee];\n    }\n  }]);\n}();\n\n/**\r\n * Represents a position on a Uniswap V3 Pool\r\n */\nvar Position = /*#__PURE__*/function () {\n  /**\r\n   * Constructs a position for a given pool with the given liquidity\r\n   * @param pool For which pool the liquidity is assigned\r\n   * @param liquidity The amount of liquidity that is in the position\r\n   * @param tickLower The lower tick of the position\r\n   * @param tickUpper The upper tick of the position\r\n   */\n  function Position(_ref) {\n    var pool = _ref.pool,\n      liquidity = _ref.liquidity,\n      tickLower = _ref.tickLower,\n      tickUpper = _ref.tickUpper;\n    // cached resuts for the getters\n    this._token0Amount = null;\n    this._token1Amount = null;\n    this._mintAmounts = null;\n    !(tickLower < tickUpper) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TICK_ORDER') : 0 : void 0;\n    !(tickLower >= TickMath.MIN_TICK && tickLower % pool.tickSpacing === 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TICK_LOWER') : 0 : void 0;\n    !(tickUpper <= TickMath.MAX_TICK && tickUpper % pool.tickSpacing === 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TICK_UPPER') : 0 : void 0;\n    this.pool = pool;\n    this.tickLower = tickLower;\n    this.tickUpper = tickUpper;\n    this.liquidity = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(liquidity);\n  }\n  /**\r\n   * Returns the price of token0 at the lower tick\r\n   */\n  var _proto = Position.prototype;\n  /**\r\n   * Returns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentage\r\n   * @param slippageTolerance The amount by which the price can 'slip' before the transaction will revert\r\n   * @returns The sqrt ratios after slippage\r\n   */\n  _proto.ratiosAfterSlippage = function ratiosAfterSlippage(slippageTolerance) {\n    var priceLower = this.pool.token0Price.asFraction.multiply(new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Percent(1).subtract(slippageTolerance));\n    var priceUpper = this.pool.token0Price.asFraction.multiply(slippageTolerance.add(1));\n    var sqrtRatioX96Lower = encodeSqrtRatioX96(priceLower.numerator, priceLower.denominator);\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].lessThanOrEqual(sqrtRatioX96Lower, TickMath.MIN_SQRT_RATIO)) {\n      sqrtRatioX96Lower = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(TickMath.MIN_SQRT_RATIO, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(1));\n    }\n    var sqrtRatioX96Upper = encodeSqrtRatioX96(priceUpper.numerator, priceUpper.denominator);\n    if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThanOrEqual(sqrtRatioX96Upper, TickMath.MAX_SQRT_RATIO)) {\n      sqrtRatioX96Upper = jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(TickMath.MAX_SQRT_RATIO, jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(1));\n    }\n    return {\n      sqrtRatioX96Lower: sqrtRatioX96Lower,\n      sqrtRatioX96Upper: sqrtRatioX96Upper\n    };\n  }\n  /**\r\n   * Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position\r\n   * with the given slippage tolerance\r\n   * @param slippageTolerance Tolerance of unfavorable slippage from the current price\r\n   * @returns The amounts, with slippage\r\n   */;\n  _proto.mintAmountsWithSlippage = function mintAmountsWithSlippage(slippageTolerance) {\n    // get lower/upper prices\n    var _this$ratiosAfterSlip = this.ratiosAfterSlippage(slippageTolerance),\n      sqrtRatioX96Upper = _this$ratiosAfterSlip.sqrtRatioX96Upper,\n      sqrtRatioX96Lower = _this$ratiosAfterSlip.sqrtRatioX96Lower;\n    // construct counterfactual pools\n    var poolLower = new Pool(this.pool.token0, this.pool.token1, this.pool.fee, sqrtRatioX96Lower, 0 /* liquidity doesn't matter */, TickMath.getTickAtSqrtRatio(sqrtRatioX96Lower));\n    var poolUpper = new Pool(this.pool.token0, this.pool.token1, this.pool.fee, sqrtRatioX96Upper, 0 /* liquidity doesn't matter */, TickMath.getTickAtSqrtRatio(sqrtRatioX96Upper));\n    // because the router is imprecise, we need to calculate the position that will be created (assuming no slippage)\n    var positionThatWillBeCreated = Position.fromAmounts(_extends({\n      pool: this.pool,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }, this.mintAmounts, {\n      useFullPrecision: false\n    }));\n    // we want the smaller amounts...\n    // ...which occurs at the upper price for amount0...\n    var amount0 = new Position({\n      pool: poolUpper,\n      liquidity: positionThatWillBeCreated.liquidity,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }).mintAmounts.amount0;\n    // ...and the lower for amount1\n    var amount1 = new Position({\n      pool: poolLower,\n      liquidity: positionThatWillBeCreated.liquidity,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }).mintAmounts.amount1;\n    return {\n      amount0: amount0,\n      amount1: amount1\n    };\n  }\n  /**\r\n   * Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the\r\n   * position with the given slippage tolerance\r\n   * @param slippageTolerance tolerance of unfavorable slippage from the current price\r\n   * @returns The amounts, with slippage\r\n   */;\n  _proto.burnAmountsWithSlippage = function burnAmountsWithSlippage(slippageTolerance) {\n    // get lower/upper prices\n    var _this$ratiosAfterSlip2 = this.ratiosAfterSlippage(slippageTolerance),\n      sqrtRatioX96Upper = _this$ratiosAfterSlip2.sqrtRatioX96Upper,\n      sqrtRatioX96Lower = _this$ratiosAfterSlip2.sqrtRatioX96Lower;\n    // construct counterfactual pools\n    var poolLower = new Pool(this.pool.token0, this.pool.token1, this.pool.fee, sqrtRatioX96Lower, 0 /* liquidity doesn't matter */, TickMath.getTickAtSqrtRatio(sqrtRatioX96Lower));\n    var poolUpper = new Pool(this.pool.token0, this.pool.token1, this.pool.fee, sqrtRatioX96Upper, 0 /* liquidity doesn't matter */, TickMath.getTickAtSqrtRatio(sqrtRatioX96Upper));\n    // we want the smaller amounts...\n    // ...which occurs at the upper price for amount0...\n    var amount0 = new Position({\n      pool: poolUpper,\n      liquidity: this.liquidity,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }).amount0;\n    // ...and the lower for amount1\n    var amount1 = new Position({\n      pool: poolLower,\n      liquidity: this.liquidity,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }).amount1;\n    return {\n      amount0: amount0.quotient,\n      amount1: amount1.quotient\n    };\n  }\n  /**\r\n   * Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at\r\n   * the current price for the pool\r\n   */;\n  /**\r\n   * Computes the maximum amount of liquidity received for a given amount of token0, token1,\r\n   * and the prices at the tick boundaries.\r\n   * @param pool The pool for which the position should be created\r\n   * @param tickLower The lower tick of the position\r\n   * @param tickUpper The upper tick of the position\r\n   * @param amount0 token0 amount\r\n   * @param amount1 token1 amount\r\n   * @param useFullPrecision If false, liquidity will be maximized according to what the router can calculate,\r\n   * not what core can theoretically support\r\n   * @returns The amount of liquidity for the position\r\n   */\n  Position.fromAmounts = function fromAmounts(_ref2) {\n    var pool = _ref2.pool,\n      tickLower = _ref2.tickLower,\n      tickUpper = _ref2.tickUpper,\n      amount0 = _ref2.amount0,\n      amount1 = _ref2.amount1,\n      useFullPrecision = _ref2.useFullPrecision;\n    var sqrtRatioAX96 = TickMath.getSqrtRatioAtTick(tickLower);\n    var sqrtRatioBX96 = TickMath.getSqrtRatioAtTick(tickUpper);\n    return new Position({\n      pool: pool,\n      tickLower: tickLower,\n      tickUpper: tickUpper,\n      liquidity: maxLiquidityForAmounts(pool.sqrtRatioX96, sqrtRatioAX96, sqrtRatioBX96, amount0, amount1, useFullPrecision)\n    });\n  }\n  /**\r\n   * Computes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1\r\n   * @param pool The pool for which the position is created\r\n   * @param tickLower The lower tick\r\n   * @param tickUpper The upper tick\r\n   * @param amount0 The desired amount of token0\r\n   * @param useFullPrecision If true, liquidity will be maximized according to what the router can calculate,\r\n   * not what core can theoretically support\r\n   * @returns The position\r\n   */;\n  Position.fromAmount0 = function fromAmount0(_ref3) {\n    var pool = _ref3.pool,\n      tickLower = _ref3.tickLower,\n      tickUpper = _ref3.tickUpper,\n      amount0 = _ref3.amount0,\n      useFullPrecision = _ref3.useFullPrecision;\n    return Position.fromAmounts({\n      pool: pool,\n      tickLower: tickLower,\n      tickUpper: tickUpper,\n      amount0: amount0,\n      amount1: _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.MaxUint256,\n      useFullPrecision: useFullPrecision\n    });\n  }\n  /**\r\n   * Computes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0\r\n   * @param pool The pool for which the position is created\r\n   * @param tickLower The lower tick\r\n   * @param tickUpper The upper tick\r\n   * @param amount1 The desired amount of token1\r\n   * @returns The position\r\n   */;\n  Position.fromAmount1 = function fromAmount1(_ref4) {\n    var pool = _ref4.pool,\n      tickLower = _ref4.tickLower,\n      tickUpper = _ref4.tickUpper,\n      amount1 = _ref4.amount1;\n    // this function always uses full precision,\n    return Position.fromAmounts({\n      pool: pool,\n      tickLower: tickLower,\n      tickUpper: tickUpper,\n      amount0: _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.MaxUint256,\n      amount1: amount1,\n      useFullPrecision: true\n    });\n  };\n  return _createClass(Position, [{\n    key: \"token0PriceLower\",\n    get: function get() {\n      return tickToPrice(this.pool.token0, this.pool.token1, this.tickLower);\n    }\n    /**\r\n     * Returns the price of token0 at the upper tick\r\n     */\n  }, {\n    key: \"token0PriceUpper\",\n    get: function get() {\n      return tickToPrice(this.pool.token0, this.pool.token1, this.tickUpper);\n    }\n    /**\r\n     * Returns the amount of token0 that this position's liquidity could be burned for at the current pool price\r\n     */\n  }, {\n    key: \"amount0\",\n    get: function get() {\n      if (this._token0Amount === null) {\n        if (this.pool.tickCurrent < this.tickLower) {\n          this._token0Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.pool.token0, SqrtPriceMath.getAmount0Delta(TickMath.getSqrtRatioAtTick(this.tickLower), TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, false));\n        } else if (this.pool.tickCurrent < this.tickUpper) {\n          this._token0Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.pool.token0, SqrtPriceMath.getAmount0Delta(this.pool.sqrtRatioX96, TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, false));\n        } else {\n          this._token0Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.pool.token0, ZERO);\n        }\n      }\n      return this._token0Amount;\n    }\n    /**\r\n     * Returns the amount of token1 that this position's liquidity could be burned for at the current pool price\r\n     */\n  }, {\n    key: \"amount1\",\n    get: function get() {\n      if (this._token1Amount === null) {\n        if (this.pool.tickCurrent < this.tickLower) {\n          this._token1Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.pool.token1, ZERO);\n        } else if (this.pool.tickCurrent < this.tickUpper) {\n          this._token1Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.pool.token1, SqrtPriceMath.getAmount1Delta(TickMath.getSqrtRatioAtTick(this.tickLower), this.pool.sqrtRatioX96, this.liquidity, false));\n        } else {\n          this._token1Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.pool.token1, SqrtPriceMath.getAmount1Delta(TickMath.getSqrtRatioAtTick(this.tickLower), TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, false));\n        }\n      }\n      return this._token1Amount;\n    }\n  }, {\n    key: \"mintAmounts\",\n    get: function get() {\n      if (this._mintAmounts === null) {\n        if (this.pool.tickCurrent < this.tickLower) {\n          return {\n            amount0: SqrtPriceMath.getAmount0Delta(TickMath.getSqrtRatioAtTick(this.tickLower), TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, true),\n            amount1: ZERO\n          };\n        } else if (this.pool.tickCurrent < this.tickUpper) {\n          return {\n            amount0: SqrtPriceMath.getAmount0Delta(this.pool.sqrtRatioX96, TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, true),\n            amount1: SqrtPriceMath.getAmount1Delta(TickMath.getSqrtRatioAtTick(this.tickLower), this.pool.sqrtRatioX96, this.liquidity, true)\n          };\n        } else {\n          return {\n            amount0: ZERO,\n            amount1: SqrtPriceMath.getAmount1Delta(TickMath.getSqrtRatioAtTick(this.tickLower), TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, true)\n          };\n        }\n      }\n      return this._mintAmounts;\n    }\n  }]);\n}();\n\n/**\r\n * Represents a list of pools through which a swap can occur\r\n * @template TInput The input token\r\n * @template TOutput The output token\r\n */\nvar Route = /*#__PURE__*/function () {\n  /**\r\n   * Creates an instance of route.\r\n   * @param pools An array of `Pool` objects, ordered by the route the swap will take\r\n   * @param input The input token\r\n   * @param output The output token\r\n   */\n  function Route(pools, input, output) {\n    this._midPrice = null;\n    !(pools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'POOLS') : 0 : void 0;\n    var chainId = pools[0].chainId;\n    var allOnSameChain = pools.every(function (pool) {\n      return pool.chainId === chainId;\n    });\n    !allOnSameChain ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'CHAIN_IDS') : 0 : void 0;\n    var wrappedInput = input.wrapped;\n    !pools[0].involvesToken(wrappedInput) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'INPUT') : 0 : void 0;\n    !pools[pools.length - 1].involvesToken(output.wrapped) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'OUTPUT') : 0 : void 0;\n    /**\r\n     * Normalizes token0-token1 order and selects the next token/fee step to add to the path\r\n     * */\n    var tokenPath = [wrappedInput];\n    for (var _iterator = _createForOfIteratorHelperLoose(pools.entries()), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n        i = _step$value[0],\n        pool = _step$value[1];\n      var currentInputToken = tokenPath[i];\n      !(currentInputToken.equals(pool.token0) || currentInputToken.equals(pool.token1)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'PATH') : 0 : void 0;\n      var nextToken = currentInputToken.equals(pool.token0) ? pool.token1 : pool.token0;\n      tokenPath.push(nextToken);\n    }\n    this.pools = pools;\n    this.tokenPath = tokenPath;\n    this.input = input;\n    this.output = output != null ? output : tokenPath[tokenPath.length - 1];\n  }\n  return _createClass(Route, [{\n    key: \"chainId\",\n    get: function get() {\n      return this.pools[0].chainId;\n    }\n    /**\r\n     * Returns the mid price of the route\r\n     */\n  }, {\n    key: \"midPrice\",\n    get: function get() {\n      if (this._midPrice !== null) return this._midPrice;\n      var price = this.pools.slice(1).reduce(function (_ref, pool) {\n        var nextInput = _ref.nextInput,\n          price = _ref.price;\n        return nextInput.equals(pool.token0) ? {\n          nextInput: pool.token1,\n          price: price.multiply(pool.token0Price)\n        } : {\n          nextInput: pool.token0,\n          price: price.multiply(pool.token1Price)\n        };\n      }, this.pools[0].token0.equals(this.input.wrapped) ? {\n        nextInput: this.pools[0].token1,\n        price: this.pools[0].token0Price\n      } : {\n        nextInput: this.pools[0].token0,\n        price: this.pools[0].token1Price\n      }).price;\n      return this._midPrice = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(this.input, this.output, price.denominator, price.numerator);\n    }\n  }]);\n}();\n\n/**\r\n * Trades comparator, an extension of the input output comparator that also considers other dimensions of the trade in ranking them\r\n * @template TInput The input token, either Ether or an ERC-20\r\n * @template TOutput The output token, either Ether or an ERC-20\r\n * @template TTradeType The trade type, either exact input or exact output\r\n * @param a The first trade to compare\r\n * @param b The second trade to compare\r\n * @returns A sorted ordering for two neighboring elements in a trade array\r\n */\nfunction tradeComparator(a, b) {\n  // must have same input and output token for comparison\n  !a.inputAmount.currency.equals(b.inputAmount.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'INPUT_CURRENCY') : 0 : void 0;\n  !a.outputAmount.currency.equals(b.outputAmount.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'OUTPUT_CURRENCY') : 0 : void 0;\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      // consider the number of hops since each hop costs gas\n      var aHops = a.swaps.reduce(function (total, cur) {\n        return total + cur.route.tokenPath.length;\n      }, 0);\n      var bHops = b.swaps.reduce(function (total, cur) {\n        return total + cur.route.tokenPath.length;\n      }, 0);\n      return aHops - bHops;\n    }\n    // trade A requires less input than trade B, so A should come first\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1;\n    } else {\n      return 1;\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n/**\r\n * Represents a trade executed against a set of routes where some percentage of the input is\r\n * split across each route.\r\n *\r\n * Each route has its own set of pools. Pools can not be re-used across routes.\r\n *\r\n * Does not account for slippage, i.e., changes in price environment that can occur between\r\n * the time the trade is submitted and when it is executed.\r\n * @template TInput The input token, either Ether or an ERC-20\r\n * @template TOutput The output token, either Ether or an ERC-20\r\n * @template TTradeType The trade type, either exact input or exact output\r\n */\nvar Trade = /*#__PURE__*/function () {\n  /**\r\n   * Construct a trade by passing in the pre-computed property values\r\n   * @param routes The routes through which the trade occurs\r\n   * @param tradeType The type of trade, exact input or exact output\r\n   */\n  function Trade(_ref) {\n    var routes = _ref.routes,\n      tradeType = _ref.tradeType;\n    var inputCurrency = routes[0].inputAmount.currency;\n    var outputCurrency = routes[0].outputAmount.currency;\n    !routes.every(function (_ref2) {\n      var route = _ref2.route;\n      return inputCurrency.wrapped.equals(route.input.wrapped);\n    }) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'INPUT_CURRENCY_MATCH') : 0 : void 0;\n    !routes.every(function (_ref3) {\n      var route = _ref3.route;\n      return outputCurrency.wrapped.equals(route.output.wrapped);\n    }) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'OUTPUT_CURRENCY_MATCH') : 0 : void 0;\n    var numPools = routes.map(function (_ref4) {\n      var route = _ref4.route;\n      return route.pools.length;\n    }).reduce(function (total, cur) {\n      return total + cur;\n    }, 0);\n    var poolAddressSet = new Set();\n    for (var _iterator = _createForOfIteratorHelperLoose(routes), _step; !(_step = _iterator()).done;) {\n      var route = _step.value.route;\n      for (var _iterator2 = _createForOfIteratorHelperLoose(route.pools), _step2; !(_step2 = _iterator2()).done;) {\n        var pool = _step2.value;\n        poolAddressSet.add(Pool.getAddress(pool.token0, pool.token1, pool.fee));\n      }\n    }\n    !(numPools === poolAddressSet.size) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'POOLS_DUPLICATED') : 0 : void 0;\n    this.swaps = routes;\n    this.tradeType = tradeType;\n  }\n  /**\r\n   * @deprecated Deprecated in favor of 'swaps' property. If the trade consists of multiple routes\r\n   * this will return an error.\r\n   *\r\n   * When the trade consists of just a single route, this returns the route of the trade,\r\n   * i.e. which pools the trade goes through.\r\n   */\n  /**\r\n   * Constructs an exact in trade with the given amount in and route\r\n   * @template TInput The input token, either Ether or an ERC-20\r\n   * @template TOutput The output token, either Ether or an ERC-20\r\n   * @param route The route of the exact in trade\r\n   * @param amountIn The amount being passed in\r\n   * @returns The exact in trade\r\n   */\n  Trade.exactIn =\n  /*#__PURE__*/\n  function () {\n    var _exactIn = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(route, amountIn) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", Trade.fromRoute(route, amountIn, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT));\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    function exactIn(_x, _x2) {\n      return _exactIn.apply(this, arguments);\n    }\n    return exactIn;\n  }()\n  /**\r\n   * Constructs an exact out trade with the given amount out and route\r\n   * @template TInput The input token, either Ether or an ERC-20\r\n   * @template TOutput The output token, either Ether or an ERC-20\r\n   * @param route The route of the exact out trade\r\n   * @param amountOut The amount returned by the trade\r\n   * @returns The exact out trade\r\n   */\n  ;\n  Trade.exactOut =\n  /*#__PURE__*/\n  function () {\n    var _exactOut = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(route, amountOut) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", Trade.fromRoute(route, amountOut, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_OUTPUT));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    function exactOut(_x3, _x4) {\n      return _exactOut.apply(this, arguments);\n    }\n    return exactOut;\n  }()\n  /**\r\n   * Constructs a trade by simulating swaps through the given route\r\n   * @template TInput The input token, either Ether or an ERC-20.\r\n   * @template TOutput The output token, either Ether or an ERC-20.\r\n   * @template TTradeType The type of the trade, either exact in or exact out.\r\n   * @param route route to swap through\r\n   * @param amount the amount specified, either input or output, depending on tradeType\r\n   * @param tradeType whether the trade is an exact input or exact output swap\r\n   * @returns The route\r\n   */\n  ;\n  Trade.fromRoute =\n  /*#__PURE__*/\n  function () {\n    var _fromRoute = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(route, amount, tradeType) {\n      var amounts, inputAmount, outputAmount, i, pool, _yield$pool$getOutput, _outputAmount, _i, _pool, _yield$_pool$getInput, _inputAmount;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            amounts = new Array(route.tokenPath.length);\n            if (!(tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT)) {\n              _context3.next = 19;\n              break;\n            }\n            !amount.currency.equals(route.input) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'INPUT') : 0 : void 0;\n            amounts[0] = amount.wrapped;\n            i = 0;\n          case 5:\n            if (!(i < route.tokenPath.length - 1)) {\n              _context3.next = 15;\n              break;\n            }\n            pool = route.pools[i];\n            _context3.next = 9;\n            return pool.getOutputAmount(amounts[i]);\n          case 9:\n            _yield$pool$getOutput = _context3.sent;\n            _outputAmount = _yield$pool$getOutput[0];\n            amounts[i + 1] = _outputAmount;\n          case 12:\n            i++;\n            _context3.next = 5;\n            break;\n          case 15:\n            inputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator);\n            outputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.output, amounts[amounts.length - 1].numerator, amounts[amounts.length - 1].denominator);\n            _context3.next = 34;\n            break;\n          case 19:\n            !amount.currency.equals(route.output) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'OUTPUT') : 0 : void 0;\n            amounts[amounts.length - 1] = amount.wrapped;\n            _i = route.tokenPath.length - 1;\n          case 22:\n            if (!(_i > 0)) {\n              _context3.next = 32;\n              break;\n            }\n            _pool = route.pools[_i - 1];\n            _context3.next = 26;\n            return _pool.getInputAmount(amounts[_i]);\n          case 26:\n            _yield$_pool$getInput = _context3.sent;\n            _inputAmount = _yield$_pool$getInput[0];\n            amounts[_i - 1] = _inputAmount;\n          case 29:\n            _i--;\n            _context3.next = 22;\n            break;\n          case 32:\n            inputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.input, amounts[0].numerator, amounts[0].denominator);\n            outputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator);\n          case 34:\n            return _context3.abrupt(\"return\", new Trade({\n              routes: [{\n                inputAmount: inputAmount,\n                outputAmount: outputAmount,\n                route: route\n              }],\n              tradeType: tradeType\n            }));\n          case 35:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    function fromRoute(_x5, _x6, _x7) {\n      return _fromRoute.apply(this, arguments);\n    }\n    return fromRoute;\n  }()\n  /**\r\n   * Constructs a trade from routes by simulating swaps\r\n   *\r\n   * @template TInput The input token, either Ether or an ERC-20.\r\n   * @template TOutput The output token, either Ether or an ERC-20.\r\n   * @template TTradeType The type of the trade, either exact in or exact out.\r\n   * @param routes the routes to swap through and how much of the amount should be routed through each\r\n   * @param tradeType whether the trade is an exact input or exact output swap\r\n   * @returns The trade\r\n   */\n  ;\n  Trade.fromRoutes =\n  /*#__PURE__*/\n  function () {\n    var _fromRoutes = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(routes, tradeType) {\n      var populatedRoutes, _iterator3, _step3, _step3$value, route, amount, amounts, inputAmount, outputAmount, i, pool, _yield$pool$getOutput2, _outputAmount2, _i2, _pool2, _yield$_pool2$getInpu, _inputAmount2;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            populatedRoutes = [];\n            _iterator3 = _createForOfIteratorHelperLoose(routes);\n          case 2:\n            if ((_step3 = _iterator3()).done) {\n              _context4.next = 43;\n              break;\n            }\n            _step3$value = _step3.value, route = _step3$value.route, amount = _step3$value.amount;\n            amounts = new Array(route.tokenPath.length);\n            inputAmount = void 0;\n            outputAmount = void 0;\n            if (!(tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT)) {\n              _context4.next = 25;\n              break;\n            }\n            !amount.currency.equals(route.input) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'INPUT') : 0 : void 0;\n            inputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator);\n            amounts[0] = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.input.wrapped, amount.numerator, amount.denominator);\n            i = 0;\n          case 12:\n            if (!(i < route.tokenPath.length - 1)) {\n              _context4.next = 22;\n              break;\n            }\n            pool = route.pools[i];\n            _context4.next = 16;\n            return pool.getOutputAmount(amounts[i]);\n          case 16:\n            _yield$pool$getOutput2 = _context4.sent;\n            _outputAmount2 = _yield$pool$getOutput2[0];\n            amounts[i + 1] = _outputAmount2;\n          case 19:\n            i++;\n            _context4.next = 12;\n            break;\n          case 22:\n            outputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.output, amounts[amounts.length - 1].numerator, amounts[amounts.length - 1].denominator);\n            _context4.next = 40;\n            break;\n          case 25:\n            !amount.currency.equals(route.output) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'OUTPUT') : 0 : void 0;\n            outputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator);\n            amounts[amounts.length - 1] = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.output.wrapped, amount.numerator, amount.denominator);\n            _i2 = route.tokenPath.length - 1;\n          case 29:\n            if (!(_i2 > 0)) {\n              _context4.next = 39;\n              break;\n            }\n            _pool2 = route.pools[_i2 - 1];\n            _context4.next = 33;\n            return _pool2.getInputAmount(amounts[_i2]);\n          case 33:\n            _yield$_pool2$getInpu = _context4.sent;\n            _inputAmount2 = _yield$_pool2$getInpu[0];\n            amounts[_i2 - 1] = _inputAmount2;\n          case 36:\n            _i2--;\n            _context4.next = 29;\n            break;\n          case 39:\n            inputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromFractionalAmount(route.input, amounts[0].numerator, amounts[0].denominator);\n          case 40:\n            populatedRoutes.push({\n              route: route,\n              inputAmount: inputAmount,\n              outputAmount: outputAmount\n            });\n          case 41:\n            _context4.next = 2;\n            break;\n          case 43:\n            return _context4.abrupt(\"return\", new Trade({\n              routes: populatedRoutes,\n              tradeType: tradeType\n            }));\n          case 44:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    function fromRoutes(_x8, _x9) {\n      return _fromRoutes.apply(this, arguments);\n    }\n    return fromRoutes;\n  }()\n  /**\r\n   * Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade\r\n   * elsewhere and do not have any tick data\r\n   * @template TInput The input token, either Ether or an ERC-20\r\n   * @template TOutput The output token, either Ether or an ERC-20\r\n   * @template TTradeType The type of the trade, either exact in or exact out\r\n   * @param constructorArguments The arguments passed to the trade constructor\r\n   * @returns The unchecked trade\r\n   */\n  ;\n  Trade.createUncheckedTrade = function createUncheckedTrade(constructorArguments) {\n    return new Trade(_extends({}, constructorArguments, {\n      routes: [{\n        inputAmount: constructorArguments.inputAmount,\n        outputAmount: constructorArguments.outputAmount,\n        route: constructorArguments.route\n      }]\n    }));\n  }\n  /**\r\n   * Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade\r\n   * elsewhere and do not have any tick data\r\n   * @template TInput The input token, either Ether or an ERC-20\r\n   * @template TOutput The output token, either Ether or an ERC-20\r\n   * @template TTradeType The type of the trade, either exact in or exact out\r\n   * @param constructorArguments The arguments passed to the trade constructor\r\n   * @returns The unchecked trade\r\n   */;\n  Trade.createUncheckedTradeWithMultipleRoutes = function createUncheckedTradeWithMultipleRoutes(constructorArguments) {\n    return new Trade(constructorArguments);\n  }\n  /**\r\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\r\n   * @param slippageTolerance The tolerance of unfavorable slippage from the execution price of this trade\r\n   * @returns The amount out\r\n   */;\n  var _proto = Trade.prototype;\n  _proto.minimumAmountOut = function minimumAmountOut(slippageTolerance, amountOut) {\n    if (amountOut === void 0) {\n      amountOut = this.outputAmount;\n    }\n    !!slippageTolerance.lessThan(ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'SLIPPAGE_TOLERANCE') : 0 : void 0;\n    if (this.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_OUTPUT) {\n      return amountOut;\n    } else {\n      var slippageAdjustedAmountOut = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Fraction(ONE).add(slippageTolerance).invert().multiply(amountOut.quotient).quotient;\n      return _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(amountOut.currency, slippageAdjustedAmountOut);\n    }\n  }\n  /**\r\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\r\n   * @param slippageTolerance The tolerance of unfavorable slippage from the execution price of this trade\r\n   * @returns The amount in\r\n   */;\n  _proto.maximumAmountIn = function maximumAmountIn(slippageTolerance, amountIn) {\n    if (amountIn === void 0) {\n      amountIn = this.inputAmount;\n    }\n    !!slippageTolerance.lessThan(ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'SLIPPAGE_TOLERANCE') : 0 : void 0;\n    if (this.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT) {\n      return amountIn;\n    } else {\n      var slippageAdjustedAmountIn = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Fraction(ONE).add(slippageTolerance).multiply(amountIn.quotient).quotient;\n      return _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(amountIn.currency, slippageAdjustedAmountIn);\n    }\n  }\n  /**\r\n   * Return the execution price after accounting for slippage tolerance\r\n   * @param slippageTolerance the allowed tolerated slippage\r\n   * @returns The execution price\r\n   */;\n  _proto.worstExecutionPrice = function worstExecutionPrice(slippageTolerance) {\n    return new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(this.inputAmount.currency, this.outputAmount.currency, this.maximumAmountIn(slippageTolerance).quotient, this.minimumAmountOut(slippageTolerance).quotient);\n  }\n  /**\r\n   * Given a list of pools, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\r\n   * amount to an output token, making at most `maxHops` hops.\r\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\r\n   * the amount in among multiple routes.\r\n   * @param pools the pools to consider in finding the best trade\r\n   * @param nextAmountIn exact amount of input currency to spend\r\n   * @param currencyOut the desired currency out\r\n   * @param maxNumResults maximum number of results to return\r\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pool\r\n   * @param currentPools used in recursion; the current list of pools\r\n   * @param currencyAmountIn used in recursion; the original value of the currencyAmountIn parameter\r\n   * @param bestTrades used in recursion; the current list of best trades\r\n   * @returns The exact in trade\r\n   */;\n  Trade.bestTradeExactIn =\n  /*#__PURE__*/\n  function () {\n    var _bestTradeExactIn = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(pools, currencyAmountIn, currencyOut, _temp,\n    // used in recursion.\n    currentPools, nextAmountIn, bestTrades) {\n      var _ref5, _ref5$maxNumResults, maxNumResults, _ref5$maxHops, maxHops, amountIn, tokenOut, i, pool, amountOut, _yield$pool$getOutput3, poolsExcludingThisPool;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _ref5 = _temp === void 0 ? {} : _temp, _ref5$maxNumResults = _ref5.maxNumResults, maxNumResults = _ref5$maxNumResults === void 0 ? 3 : _ref5$maxNumResults, _ref5$maxHops = _ref5.maxHops, maxHops = _ref5$maxHops === void 0 ? 3 : _ref5$maxHops;\n            if (currentPools === void 0) {\n              currentPools = [];\n            }\n            if (nextAmountIn === void 0) {\n              nextAmountIn = currencyAmountIn;\n            }\n            if (bestTrades === void 0) {\n              bestTrades = [];\n            }\n            !(pools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'POOLS') : 0 : void 0;\n            !(maxHops > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'MAX_HOPS') : 0 : void 0;\n            !(currencyAmountIn === nextAmountIn || currentPools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'INVALID_RECURSION') : 0 : void 0;\n            amountIn = nextAmountIn.wrapped;\n            tokenOut = currencyOut.wrapped;\n            i = 0;\n          case 10:\n            if (!(i < pools.length)) {\n              _context5.next = 46;\n              break;\n            }\n            pool = pools[i]; // pool irrelevant\n            if (!(!pool.token0.equals(amountIn.currency) && !pool.token1.equals(amountIn.currency))) {\n              _context5.next = 14;\n              break;\n            }\n            return _context5.abrupt(\"continue\", 43);\n          case 14:\n            amountOut = void 0;\n            _context5.prev = 15;\n            _context5.next = 19;\n            return pool.getOutputAmount(amountIn);\n          case 19:\n            _yield$pool$getOutput3 = _context5.sent;\n            amountOut = _yield$pool$getOutput3[0];\n            _context5.next = 28;\n            break;\n          case 23:\n            _context5.prev = 23;\n            _context5.t0 = _context5[\"catch\"](15);\n            if (!_context5.t0.isInsufficientInputAmountError) {\n              _context5.next = 27;\n              break;\n            }\n            return _context5.abrupt(\"continue\", 43);\n          case 27:\n            throw _context5.t0;\n          case 28:\n            if (!(amountOut.currency.isToken && amountOut.currency.equals(tokenOut))) {\n              _context5.next = 39;\n              break;\n            }\n            _context5.t1 = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.sortedInsert;\n            _context5.t2 = bestTrades;\n            _context5.next = 33;\n            return Trade.fromRoute(new Route([].concat(currentPools, [pool]), currencyAmountIn.currency, currencyOut), currencyAmountIn, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT);\n          case 33:\n            _context5.t3 = _context5.sent;\n            _context5.t4 = maxNumResults;\n            _context5.t5 = tradeComparator;\n            (0, _context5.t1)(_context5.t2, _context5.t3, _context5.t4, _context5.t5);\n            _context5.next = 43;\n            break;\n          case 39:\n            if (!(maxHops > 1 && pools.length > 1)) {\n              _context5.next = 43;\n              break;\n            }\n            poolsExcludingThisPool = pools.slice(0, i).concat(pools.slice(i + 1, pools.length)); // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n            _context5.next = 43;\n            return Trade.bestTradeExactIn(poolsExcludingThisPool, currencyAmountIn, currencyOut, {\n              maxNumResults: maxNumResults,\n              maxHops: maxHops - 1\n            }, [].concat(currentPools, [pool]), amountOut, bestTrades);\n          case 43:\n            i++;\n            _context5.next = 10;\n            break;\n          case 46:\n            return _context5.abrupt(\"return\", bestTrades);\n          case 47:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[15, 23]]);\n    }));\n    function bestTradeExactIn(_x10, _x11, _x12, _x13, _x14, _x15, _x16) {\n      return _bestTradeExactIn.apply(this, arguments);\n    }\n    return bestTradeExactIn;\n  }()\n  /**\r\n   * similar to the above method but instead targets a fixed output amount\r\n   * given a list of pools, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\r\n   * to an output token amount, making at most `maxHops` hops\r\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\r\n   * the amount in among multiple routes.\r\n   * @param pools the pools to consider in finding the best trade\r\n   * @param currencyIn the currency to spend\r\n   * @param currencyAmountOut the desired currency amount out\r\n   * @param nextAmountOut the exact amount of currency out\r\n   * @param maxNumResults maximum number of results to return\r\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pool\r\n   * @param currentPools used in recursion; the current list of pools\r\n   * @param bestTrades used in recursion; the current list of best trades\r\n   * @returns The exact out trade\r\n   */\n  ;\n  Trade.bestTradeExactOut =\n  /*#__PURE__*/\n  function () {\n    var _bestTradeExactOut = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(pools, currencyIn, currencyAmountOut, _temp2,\n    // used in recursion.\n    currentPools, nextAmountOut, bestTrades) {\n      var _ref6, _ref6$maxNumResults, maxNumResults, _ref6$maxHops, maxHops, amountOut, tokenIn, i, pool, amountIn, _yield$pool$getInputA, poolsExcludingThisPool;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            _ref6 = _temp2 === void 0 ? {} : _temp2, _ref6$maxNumResults = _ref6.maxNumResults, maxNumResults = _ref6$maxNumResults === void 0 ? 3 : _ref6$maxNumResults, _ref6$maxHops = _ref6.maxHops, maxHops = _ref6$maxHops === void 0 ? 3 : _ref6$maxHops;\n            if (currentPools === void 0) {\n              currentPools = [];\n            }\n            if (nextAmountOut === void 0) {\n              nextAmountOut = currencyAmountOut;\n            }\n            if (bestTrades === void 0) {\n              bestTrades = [];\n            }\n            !(pools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'POOLS') : 0 : void 0;\n            !(maxHops > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'MAX_HOPS') : 0 : void 0;\n            !(currencyAmountOut === nextAmountOut || currentPools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'INVALID_RECURSION') : 0 : void 0;\n            amountOut = nextAmountOut.wrapped;\n            tokenIn = currencyIn.wrapped;\n            i = 0;\n          case 10:\n            if (!(i < pools.length)) {\n              _context6.next = 46;\n              break;\n            }\n            pool = pools[i]; // pool irrelevant\n            if (!(!pool.token0.equals(amountOut.currency) && !pool.token1.equals(amountOut.currency))) {\n              _context6.next = 14;\n              break;\n            }\n            return _context6.abrupt(\"continue\", 43);\n          case 14:\n            amountIn = void 0;\n            _context6.prev = 15;\n            _context6.next = 19;\n            return pool.getInputAmount(amountOut);\n          case 19:\n            _yield$pool$getInputA = _context6.sent;\n            amountIn = _yield$pool$getInputA[0];\n            _context6.next = 28;\n            break;\n          case 23:\n            _context6.prev = 23;\n            _context6.t0 = _context6[\"catch\"](15);\n            if (!_context6.t0.isInsufficientReservesError) {\n              _context6.next = 27;\n              break;\n            }\n            return _context6.abrupt(\"continue\", 43);\n          case 27:\n            throw _context6.t0;\n          case 28:\n            if (!amountIn.currency.equals(tokenIn)) {\n              _context6.next = 39;\n              break;\n            }\n            _context6.t1 = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.sortedInsert;\n            _context6.t2 = bestTrades;\n            _context6.next = 33;\n            return Trade.fromRoute(new Route([pool].concat(currentPools), currencyIn, currencyAmountOut.currency), currencyAmountOut, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_OUTPUT);\n          case 33:\n            _context6.t3 = _context6.sent;\n            _context6.t4 = maxNumResults;\n            _context6.t5 = tradeComparator;\n            (0, _context6.t1)(_context6.t2, _context6.t3, _context6.t4, _context6.t5);\n            _context6.next = 43;\n            break;\n          case 39:\n            if (!(maxHops > 1 && pools.length > 1)) {\n              _context6.next = 43;\n              break;\n            }\n            poolsExcludingThisPool = pools.slice(0, i).concat(pools.slice(i + 1, pools.length)); // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n            _context6.next = 43;\n            return Trade.bestTradeExactOut(poolsExcludingThisPool, currencyIn, currencyAmountOut, {\n              maxNumResults: maxNumResults,\n              maxHops: maxHops - 1\n            }, [pool].concat(currentPools), amountIn, bestTrades);\n          case 43:\n            i++;\n            _context6.next = 10;\n            break;\n          case 46:\n            return _context6.abrupt(\"return\", bestTrades);\n          case 47:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[15, 23]]);\n    }));\n    function bestTradeExactOut(_x17, _x18, _x19, _x20, _x21, _x22, _x23) {\n      return _bestTradeExactOut.apply(this, arguments);\n    }\n    return bestTradeExactOut;\n  }();\n  return _createClass(Trade, [{\n    key: \"route\",\n    get: function get() {\n      !(this.swaps.length === 1) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'MULTIPLE_ROUTES') : 0 : void 0;\n      return this.swaps[0].route;\n    }\n    /**\r\n     * The input amount for the trade assuming no slippage.\r\n     */\n  }, {\n    key: \"inputAmount\",\n    get: function get() {\n      if (this._inputAmount) {\n        return this._inputAmount;\n      }\n      var inputCurrency = this.swaps[0].inputAmount.currency;\n      var totalInputFromRoutes = this.swaps.map(function (_ref7) {\n        var inputAmount = _ref7.inputAmount;\n        return inputAmount;\n      }).reduce(function (total, cur) {\n        return total.add(cur);\n      }, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(inputCurrency, 0));\n      this._inputAmount = totalInputFromRoutes;\n      return this._inputAmount;\n    }\n    /**\r\n     * The output amount for the trade assuming no slippage.\r\n     */\n  }, {\n    key: \"outputAmount\",\n    get: function get() {\n      if (this._outputAmount) {\n        return this._outputAmount;\n      }\n      var outputCurrency = this.swaps[0].outputAmount.currency;\n      var totalOutputFromRoutes = this.swaps.map(function (_ref8) {\n        var outputAmount = _ref8.outputAmount;\n        return outputAmount;\n      }).reduce(function (total, cur) {\n        return total.add(cur);\n      }, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(outputCurrency, 0));\n      this._outputAmount = totalOutputFromRoutes;\n      return this._outputAmount;\n    }\n    /**\r\n     * The price expressed in terms of output amount/input amount.\r\n     */\n  }, {\n    key: \"executionPrice\",\n    get: function get() {\n      var _this$_executionPrice;\n      return (_this$_executionPrice = this._executionPrice) != null ? _this$_executionPrice : this._executionPrice = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Price(this.inputAmount.currency, this.outputAmount.currency, this.inputAmount.quotient, this.outputAmount.quotient);\n    }\n    /**\r\n     * Returns the percent difference between the route's mid price and the price impact\r\n     */\n  }, {\n    key: \"priceImpact\",\n    get: function get() {\n      if (this._priceImpact) {\n        return this._priceImpact;\n      }\n      var spotOutputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(this.outputAmount.currency, 0);\n      for (var _iterator4 = _createForOfIteratorHelperLoose(this.swaps), _step4; !(_step4 = _iterator4()).done;) {\n        var _step4$value = _step4.value,\n          route = _step4$value.route,\n          inputAmount = _step4$value.inputAmount;\n        var midPrice = route.midPrice;\n        spotOutputAmount = spotOutputAmount.add(midPrice.quote(inputAmount));\n      }\n      var priceImpact = spotOutputAmount.subtract(this.outputAmount).divide(spotOutputAmount);\n      this._priceImpact = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Percent(priceImpact.numerator, priceImpact.denominator);\n      return this._priceImpact;\n    }\n  }]);\n}();\n\nvar Multicall = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function Multicall() {}\n  Multicall.encodeMulticall = function encodeMulticall(calldatas) {\n    if (!Array.isArray(calldatas)) {\n      calldatas = [calldatas];\n    }\n    return calldatas.length === 1 ? calldatas[0] : Multicall.INTERFACE.encodeFunctionData('multicall', [calldatas]);\n  };\n  Multicall.decodeMulticall = function decodeMulticall(multicall) {\n    return Multicall.INTERFACE.decodeFunctionData('multicall', multicall).data;\n  };\n  return Multicall;\n}();\nMulticall.INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_14__.Interface(_uniswap_v3_periphery_artifacts_contracts_interfaces_IMulticall_sol_IMulticall_json__WEBPACK_IMPORTED_MODULE_3__.abi);\n\nfunction isAllowedPermit(permitOptions) {\n  return 'nonce' in permitOptions;\n}\nvar SelfPermit = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function SelfPermit() {}\n  SelfPermit.encodePermit = function encodePermit(token, options) {\n    return isAllowedPermit(options) ? SelfPermit.INTERFACE.encodeFunctionData('selfPermitAllowed', [token.address, toHex(options.nonce), toHex(options.expiry), options.v, options.r, options.s]) : SelfPermit.INTERFACE.encodeFunctionData('selfPermit', [token.address, toHex(options.amount), toHex(options.deadline), options.v, options.r, options.s]);\n  };\n  return SelfPermit;\n}();\nSelfPermit.INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_14__.Interface(_uniswap_v3_periphery_artifacts_contracts_interfaces_ISelfPermit_sol_ISelfPermit_json__WEBPACK_IMPORTED_MODULE_5__.abi);\n\nvar Payments = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function Payments() {}\n  Payments.encodeFeeBips = function encodeFeeBips(fee) {\n    return toHex(fee.multiply(10000).quotient);\n  };\n  Payments.encodeUnwrapWETH9 = function encodeUnwrapWETH9(amountMinimum, recipient, feeOptions) {\n    recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(recipient);\n    if (!!feeOptions) {\n      var feeBips = this.encodeFeeBips(feeOptions.fee);\n      var feeRecipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(feeOptions.recipient);\n      return Payments.INTERFACE.encodeFunctionData('unwrapWETH9WithFee', [toHex(amountMinimum), recipient, feeBips, feeRecipient]);\n    } else {\n      return Payments.INTERFACE.encodeFunctionData('unwrapWETH9', [toHex(amountMinimum), recipient]);\n    }\n  };\n  Payments.encodeSweepToken = function encodeSweepToken(token, amountMinimum, recipient, feeOptions) {\n    recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(recipient);\n    if (!!feeOptions) {\n      var feeBips = this.encodeFeeBips(feeOptions.fee);\n      var feeRecipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(feeOptions.recipient);\n      return Payments.INTERFACE.encodeFunctionData('sweepTokenWithFee', [token.address, toHex(amountMinimum), recipient, feeBips, feeRecipient]);\n    } else {\n      return Payments.INTERFACE.encodeFunctionData('sweepToken', [token.address, toHex(amountMinimum), recipient]);\n    }\n  };\n  Payments.encodeRefundETH = function encodeRefundETH() {\n    return Payments.INTERFACE.encodeFunctionData('refundETH');\n  };\n  return Payments;\n}();\nPayments.INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_14__.Interface(_uniswap_v3_periphery_artifacts_contracts_interfaces_IPeripheryPaymentsWithFee_sol_IPeripheryPaymentsWithFee_json__WEBPACK_IMPORTED_MODULE_6__.abi);\n\nvar _excluded = [\"expectedCurrencyOwed0\", \"expectedCurrencyOwed1\"];\nvar MaxUint128 = /*#__PURE__*/toHex(/*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(/*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].exponentiate(/*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(2), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(128)), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].BigInt(1)));\n// type guard\nfunction isMint(options) {\n  return Object.keys(options).some(function (k) {\n    return k === 'recipient';\n  });\n}\nvar NFT_PERMIT_TYPES = {\n  Permit: [{\n    name: 'spender',\n    type: 'address'\n  }, {\n    name: 'tokenId',\n    type: 'uint256'\n  }, {\n    name: 'nonce',\n    type: 'uint256'\n  }, {\n    name: 'deadline',\n    type: 'uint256'\n  }]\n};\nvar NonfungiblePositionManager = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function NonfungiblePositionManager() {}\n  NonfungiblePositionManager.encodeCreate = function encodeCreate(pool) {\n    return NonfungiblePositionManager.INTERFACE.encodeFunctionData('createAndInitializePoolIfNecessary', [pool.token0.address, pool.token1.address, pool.fee, toHex(pool.sqrtRatioX96)]);\n  };\n  NonfungiblePositionManager.createCallParameters = function createCallParameters(pool) {\n    return {\n      calldata: this.encodeCreate(pool),\n      value: toHex(0)\n    };\n  };\n  NonfungiblePositionManager.addCallParameters = function addCallParameters(position, options) {\n    !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(position.liquidity, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'ZERO_LIQUIDITY') : 0 : void 0;\n    var calldatas = [];\n    // get amounts\n    var _position$mintAmounts = position.mintAmounts,\n      amount0Desired = _position$mintAmounts.amount0,\n      amount1Desired = _position$mintAmounts.amount1;\n    // adjust for slippage\n    var minimumAmounts = position.mintAmountsWithSlippage(options.slippageTolerance);\n    var amount0Min = toHex(minimumAmounts.amount0);\n    var amount1Min = toHex(minimumAmounts.amount1);\n    var deadline = toHex(options.deadline);\n    // create pool if needed\n    if (isMint(options) && options.createPool) {\n      calldatas.push(this.encodeCreate(position.pool));\n    }\n    // permits if necessary\n    if (options.token0Permit) {\n      calldatas.push(SelfPermit.encodePermit(position.pool.token0, options.token0Permit));\n    }\n    if (options.token1Permit) {\n      calldatas.push(SelfPermit.encodePermit(position.pool.token1, options.token1Permit));\n    }\n    // mint\n    if (isMint(options)) {\n      var recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.recipient);\n      calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('mint', [{\n        token0: position.pool.token0.address,\n        token1: position.pool.token1.address,\n        fee: position.pool.fee,\n        tickLower: position.tickLower,\n        tickUpper: position.tickUpper,\n        amount0Desired: toHex(amount0Desired),\n        amount1Desired: toHex(amount1Desired),\n        amount0Min: amount0Min,\n        amount1Min: amount1Min,\n        recipient: recipient,\n        deadline: deadline\n      }]));\n    } else {\n      // increase\n      calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('increaseLiquidity', [{\n        tokenId: toHex(options.tokenId),\n        amount0Desired: toHex(amount0Desired),\n        amount1Desired: toHex(amount1Desired),\n        amount0Min: amount0Min,\n        amount1Min: amount1Min,\n        deadline: deadline\n      }]));\n    }\n    var value = toHex(0);\n    if (options.useNative) {\n      var wrapped = options.useNative.wrapped;\n      !(position.pool.token0.equals(wrapped) || position.pool.token1.equals(wrapped)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'NO_WETH') : 0 : void 0;\n      var wrappedValue = position.pool.token0.equals(wrapped) ? amount0Desired : amount1Desired;\n      // we only need to refund if we're actually sending ETH\n      if (jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(wrappedValue, ZERO)) {\n        calldatas.push(Payments.encodeRefundETH());\n      }\n      value = toHex(wrappedValue);\n    }\n    return {\n      calldata: Multicall.encodeMulticall(calldatas),\n      value: value\n    };\n  };\n  NonfungiblePositionManager.encodeCollect = function encodeCollect(options) {\n    var calldatas = [];\n    var tokenId = toHex(options.tokenId);\n    var involvesETH = options.expectedCurrencyOwed0.currency.isNative || options.expectedCurrencyOwed1.currency.isNative;\n    var recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.recipient);\n    // collect\n    calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('collect', [{\n      tokenId: tokenId,\n      recipient: involvesETH ? ADDRESS_ZERO : recipient,\n      amount0Max: MaxUint128,\n      amount1Max: MaxUint128\n    }]));\n    if (involvesETH) {\n      var ethAmount = options.expectedCurrencyOwed0.currency.isNative ? options.expectedCurrencyOwed0.quotient : options.expectedCurrencyOwed1.quotient;\n      var token = options.expectedCurrencyOwed0.currency.isNative ? options.expectedCurrencyOwed1.currency : options.expectedCurrencyOwed0.currency;\n      var tokenAmount = options.expectedCurrencyOwed0.currency.isNative ? options.expectedCurrencyOwed1.quotient : options.expectedCurrencyOwed0.quotient;\n      calldatas.push(Payments.encodeUnwrapWETH9(ethAmount, recipient));\n      calldatas.push(Payments.encodeSweepToken(token, tokenAmount, recipient));\n    }\n    return calldatas;\n  };\n  NonfungiblePositionManager.collectCallParameters = function collectCallParameters(options) {\n    var calldatas = NonfungiblePositionManager.encodeCollect(options);\n    return {\n      calldata: Multicall.encodeMulticall(calldatas),\n      value: toHex(0)\n    };\n  }\n  /**\r\n   * Produces the calldata for completely or partially exiting a position\r\n   * @param position The position to exit\r\n   * @param options Additional information necessary for generating the calldata\r\n   * @returns The call parameters\r\n   */;\n  NonfungiblePositionManager.removeCallParameters = function removeCallParameters(position, options) {\n    var calldatas = [];\n    var deadline = toHex(options.deadline);\n    var tokenId = toHex(options.tokenId);\n    // construct a partial position with a percentage of liquidity\n    var partialPosition = new Position({\n      pool: position.pool,\n      liquidity: options.liquidityPercentage.multiply(position.liquidity).quotient,\n      tickLower: position.tickLower,\n      tickUpper: position.tickUpper\n    });\n    !jsbi__WEBPACK_IMPORTED_MODULE_1__[\"default\"].greaterThan(partialPosition.liquidity, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'ZERO_LIQUIDITY') : 0 : void 0;\n    // slippage-adjusted underlying amounts\n    var _partialPosition$burn = partialPosition.burnAmountsWithSlippage(options.slippageTolerance),\n      amount0Min = _partialPosition$burn.amount0,\n      amount1Min = _partialPosition$burn.amount1;\n    if (options.permit) {\n      calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('permit', [(0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.permit.spender), tokenId, toHex(options.permit.deadline), options.permit.v, options.permit.r, options.permit.s]));\n    }\n    // remove liquidity\n    calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('decreaseLiquidity', [{\n      tokenId: tokenId,\n      liquidity: toHex(partialPosition.liquidity),\n      amount0Min: toHex(amount0Min),\n      amount1Min: toHex(amount1Min),\n      deadline: deadline\n    }]));\n    var _options$collectOptio = options.collectOptions,\n      expectedCurrencyOwed0 = _options$collectOptio.expectedCurrencyOwed0,\n      expectedCurrencyOwed1 = _options$collectOptio.expectedCurrencyOwed1,\n      rest = _objectWithoutPropertiesLoose(_options$collectOptio, _excluded);\n    calldatas.push.apply(calldatas, NonfungiblePositionManager.encodeCollect(_extends({\n      tokenId: toHex(options.tokenId),\n      // add the underlying value to the expected currency already owed\n      expectedCurrencyOwed0: expectedCurrencyOwed0.add(_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(expectedCurrencyOwed0.currency, amount0Min)),\n      expectedCurrencyOwed1: expectedCurrencyOwed1.add(_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(expectedCurrencyOwed1.currency, amount1Min))\n    }, rest)));\n    if (options.liquidityPercentage.equalTo(ONE)) {\n      if (options.burnToken) {\n        calldatas.push(NonfungiblePositionManager.INTERFACE.encodeFunctionData('burn', [tokenId]));\n      }\n    } else {\n      !(options.burnToken !== true) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'CANNOT_BURN') : 0 : void 0;\n    }\n    return {\n      calldata: Multicall.encodeMulticall(calldatas),\n      value: toHex(0)\n    };\n  };\n  NonfungiblePositionManager.safeTransferFromParameters = function safeTransferFromParameters(options) {\n    var recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.recipient);\n    var sender = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.sender);\n    var calldata;\n    if (options.data) {\n      calldata = NonfungiblePositionManager.INTERFACE.encodeFunctionData('safeTransferFrom(address,address,uint256,bytes)', [sender, recipient, toHex(options.tokenId), options.data]);\n    } else {\n      calldata = NonfungiblePositionManager.INTERFACE.encodeFunctionData('safeTransferFrom(address,address,uint256)', [sender, recipient, toHex(options.tokenId)]);\n    }\n    return {\n      calldata: calldata,\n      value: toHex(0)\n    };\n  }\n  // Prepare the params for an EIP712 signTypedData request\n  ;\n  NonfungiblePositionManager.getPermitData = function getPermitData(permit, positionManagerAddress, chainId) {\n    return {\n      domain: {\n        name: 'Uniswap V3 Positions NFT-V1',\n        chainId: chainId,\n        version: '1',\n        verifyingContract: positionManagerAddress\n      },\n      types: NFT_PERMIT_TYPES,\n      values: permit\n    };\n  };\n  return NonfungiblePositionManager;\n}();\nNonfungiblePositionManager.INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_14__.Interface(_uniswap_v3_periphery_artifacts_contracts_NonfungiblePositionManager_sol_NonfungiblePositionManager_json__WEBPACK_IMPORTED_MODULE_4__.abi);\n\n/**\r\n * Represents the Uniswap V3 QuoterV1 contract with a method for returning the formatted\r\n * calldata needed to call the quoter contract.\r\n */\nvar SwapQuoter = /*#__PURE__*/function () {\n  function SwapQuoter() {}\n  /**\r\n   * Produces the on-chain method name of the appropriate function within QuoterV2,\r\n   * and the relevant hex encoded parameters.\r\n   * @template TInput The input token, either Ether or an ERC-20\r\n   * @template TOutput The output token, either Ether or an ERC-20\r\n   * @param route The swap route, a list of pools through which a swap can occur\r\n   * @param amount The amount of the quote, either an amount in, or an amount out\r\n   * @param tradeType The trade type, either exact input or exact output\r\n   * @param options The optional params including price limit and Quoter contract switch\r\n   * @returns The formatted calldata\r\n   */\n  SwapQuoter.quoteCallParameters = function quoteCallParameters(route, amount, tradeType, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var singleHop = route.pools.length === 1;\n    var quoteAmount = toHex(amount.quotient);\n    var calldata;\n    var swapInterface = options.useQuoterV2 ? this.V2INTERFACE : this.V1INTERFACE;\n    if (singleHop) {\n      var _options$sqrtPriceLim, _options;\n      var baseQuoteParams = {\n        tokenIn: route.tokenPath[0].address,\n        tokenOut: route.tokenPath[1].address,\n        fee: route.pools[0].fee,\n        sqrtPriceLimitX96: toHex((_options$sqrtPriceLim = (_options = options) == null ? void 0 : _options.sqrtPriceLimitX96) != null ? _options$sqrtPriceLim : 0)\n      };\n      var v2QuoteParams = _extends({}, baseQuoteParams, tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT ? {\n        amountIn: quoteAmount\n      } : {\n        amount: quoteAmount\n      });\n      var v1QuoteParams = [baseQuoteParams.tokenIn, baseQuoteParams.tokenOut, baseQuoteParams.fee, quoteAmount, baseQuoteParams.sqrtPriceLimitX96];\n      var tradeTypeFunctionName = tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT ? 'quoteExactInputSingle' : 'quoteExactOutputSingle';\n      calldata = swapInterface.encodeFunctionData(tradeTypeFunctionName, options.useQuoterV2 ? [v2QuoteParams] : v1QuoteParams);\n    } else {\n      var _options2;\n      !(((_options2 = options) == null ? void 0 : _options2.sqrtPriceLimitX96) === undefined) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'MULTIHOP_PRICE_LIMIT') : 0 : void 0;\n      var path = encodeRouteToPath(route, tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_OUTPUT);\n      var _tradeTypeFunctionName = tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT ? 'quoteExactInput' : 'quoteExactOutput';\n      calldata = swapInterface.encodeFunctionData(_tradeTypeFunctionName, [path, quoteAmount]);\n    }\n    return {\n      calldata: calldata,\n      value: toHex(0)\n    };\n  };\n  return SwapQuoter;\n}();\nSwapQuoter.V1INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_14__.Interface(_uniswap_v3_periphery_artifacts_contracts_lens_Quoter_sol_Quoter_json__WEBPACK_IMPORTED_MODULE_7__.abi);\nSwapQuoter.V2INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_14__.Interface(_uniswap_swap_router_contracts_artifacts_contracts_lens_QuoterV2_sol_QuoterV2_json__WEBPACK_IMPORTED_MODULE_8__.abi);\n\nvar Staker = /*#__PURE__*/function () {\n  function Staker() {}\n  /**\r\n   *  To claim rewards, must unstake and then claim.\r\n   * @param incentiveKey The unique identifier of a staking program.\r\n   * @param options Options for producing the calldata to claim. Can't claim unless you unstake.\r\n   * @returns The calldatas for 'unstakeToken' and 'claimReward'.\r\n   */\n  Staker.encodeClaim = function encodeClaim(incentiveKey, options) {\n    var _options$amount;\n    var calldatas = [];\n    calldatas.push(Staker.INTERFACE.encodeFunctionData('unstakeToken', [this._encodeIncentiveKey(incentiveKey), toHex(options.tokenId)]));\n    var recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.recipient);\n    var amount = (_options$amount = options.amount) != null ? _options$amount : 0;\n    calldatas.push(Staker.INTERFACE.encodeFunctionData('claimReward', [incentiveKey.rewardToken.address, recipient, toHex(amount)]));\n    return calldatas;\n  }\n  /**\r\n   *\r\n   * Note:  A `tokenId` can be staked in many programs but to claim rewards and continue the program you must unstake, claim, and then restake.\r\n   * @param incentiveKeys An IncentiveKey or array of IncentiveKeys that `tokenId` is staked in.\r\n   * Input an array of IncentiveKeys to claim rewards for each program.\r\n   * @param options ClaimOptions to specify tokenId, recipient, and amount wanting to collect.\r\n   * Note that you can only specify one amount and one recipient across the various programs if you are collecting from multiple programs at once.\r\n   * @returns\r\n   */;\n  Staker.collectRewards = function collectRewards(incentiveKeys, options) {\n    incentiveKeys = Array.isArray(incentiveKeys) ? incentiveKeys : [incentiveKeys];\n    var calldatas = [];\n    for (var i = 0; i < incentiveKeys.length; i++) {\n      // the unique program tokenId is staked in\n      var incentiveKey = incentiveKeys[i];\n      // unstakes and claims for the unique program\n      calldatas = calldatas.concat(this.encodeClaim(incentiveKey, options));\n      // re-stakes the position for the unique program\n      calldatas.push(Staker.INTERFACE.encodeFunctionData('stakeToken', [this._encodeIncentiveKey(incentiveKey), toHex(options.tokenId)]));\n    }\n    return {\n      calldata: Multicall.encodeMulticall(calldatas),\n      value: toHex(0)\n    };\n  }\n  /**\r\n   *\r\n   * @param incentiveKeys A list of incentiveKeys to unstake from. Should include all incentiveKeys (unique staking programs) that `options.tokenId` is staked in.\r\n   * @param withdrawOptions Options for producing claim calldata and withdraw calldata. Can't withdraw without unstaking all programs for `tokenId`.\r\n   * @returns Calldata for unstaking, claiming, and withdrawing.\r\n   */;\n  Staker.withdrawToken = function withdrawToken(incentiveKeys, withdrawOptions) {\n    var calldatas = [];\n    incentiveKeys = Array.isArray(incentiveKeys) ? incentiveKeys : [incentiveKeys];\n    var claimOptions = {\n      tokenId: withdrawOptions.tokenId,\n      recipient: withdrawOptions.recipient,\n      amount: withdrawOptions.amount\n    };\n    for (var i = 0; i < incentiveKeys.length; i++) {\n      var incentiveKey = incentiveKeys[i];\n      calldatas = calldatas.concat(this.encodeClaim(incentiveKey, claimOptions));\n    }\n    var owner = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(withdrawOptions.owner);\n    calldatas.push(Staker.INTERFACE.encodeFunctionData('withdrawToken', [toHex(withdrawOptions.tokenId), owner, withdrawOptions.data ? withdrawOptions.data : toHex(0)]));\n    return {\n      calldata: Multicall.encodeMulticall(calldatas),\n      value: toHex(0)\n    };\n  }\n  /**\r\n   *\r\n   * @param incentiveKeys A single IncentiveKey or array of IncentiveKeys to be encoded and used in the data parameter in `safeTransferFrom`\r\n   * @returns An IncentiveKey as a string\r\n   */;\n  Staker.encodeDeposit = function encodeDeposit(incentiveKeys) {\n    incentiveKeys = Array.isArray(incentiveKeys) ? incentiveKeys : [incentiveKeys];\n    var data;\n    if (incentiveKeys.length > 1) {\n      var keys = [];\n      for (var i = 0; i < incentiveKeys.length; i++) {\n        var incentiveKey = incentiveKeys[i];\n        keys.push(this._encodeIncentiveKey(incentiveKey));\n      }\n      data = _ethersproject_abi__WEBPACK_IMPORTED_MODULE_12__.defaultAbiCoder.encode([Staker.INCENTIVE_KEY_ABI + \"[]\"], [keys]);\n    } else {\n      data = _ethersproject_abi__WEBPACK_IMPORTED_MODULE_12__.defaultAbiCoder.encode([Staker.INCENTIVE_KEY_ABI], [this._encodeIncentiveKey(incentiveKeys[0])]);\n    }\n    return data;\n  }\n  /**\r\n   *\r\n   * @param incentiveKey An `IncentiveKey` which represents a unique staking program.\r\n   * @returns An encoded IncentiveKey to be read by ethers\r\n   */;\n  Staker._encodeIncentiveKey = function _encodeIncentiveKey(incentiveKey) {\n    var _incentiveKey$pool = incentiveKey.pool,\n      token0 = _incentiveKey$pool.token0,\n      token1 = _incentiveKey$pool.token1,\n      fee = _incentiveKey$pool.fee;\n    var refundee = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(incentiveKey.refundee);\n    return {\n      rewardToken: incentiveKey.rewardToken.address,\n      pool: Pool.getAddress(token0, token1, fee),\n      startTime: toHex(incentiveKey.startTime),\n      endTime: toHex(incentiveKey.endTime),\n      refundee: refundee\n    };\n  };\n  return Staker;\n}();\nStaker.INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_14__.Interface(_uniswap_v3_staker_artifacts_contracts_UniswapV3Staker_sol_UniswapV3Staker_json__WEBPACK_IMPORTED_MODULE_9__.abi);\nStaker.INCENTIVE_KEY_ABI = 'tuple(address rewardToken, address pool, uint256 startTime, uint256 endTime, address refundee)';\n\n/**\r\n * Represents the Uniswap V3 SwapRouter, and has static methods for helping execute trades.\r\n */\nvar SwapRouter = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function SwapRouter() {}\n  /**\r\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\r\n   * @param trade to produce call parameters for\r\n   * @param options options for the call parameters\r\n   */\n  SwapRouter.swapCallParameters = function swapCallParameters(trades, options) {\n    if (!Array.isArray(trades)) {\n      trades = [trades];\n    }\n    var sampleTrade = trades[0];\n    var tokenIn = sampleTrade.inputAmount.currency.wrapped;\n    var tokenOut = sampleTrade.outputAmount.currency.wrapped;\n    // All trades should have the same starting and ending token.\n    !trades.every(function (trade) {\n      return trade.inputAmount.currency.wrapped.equals(tokenIn);\n    }) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TOKEN_IN_DIFF') : 0 : void 0;\n    !trades.every(function (trade) {\n      return trade.outputAmount.currency.wrapped.equals(tokenOut);\n    }) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'TOKEN_OUT_DIFF') : 0 : void 0;\n    var calldatas = [];\n    var ZERO_IN = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(trades[0].inputAmount.currency, 0);\n    var ZERO_OUT = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.CurrencyAmount.fromRawAmount(trades[0].outputAmount.currency, 0);\n    var totalAmountOut = trades.reduce(function (sum, trade) {\n      return sum.add(trade.minimumAmountOut(options.slippageTolerance));\n    }, ZERO_OUT);\n    // flag for whether a refund needs to happen\n    var mustRefund = sampleTrade.inputAmount.currency.isNative && sampleTrade.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_OUTPUT;\n    var inputIsNative = sampleTrade.inputAmount.currency.isNative;\n    // flags for whether funds should be send first to the router\n    var outputIsNative = sampleTrade.outputAmount.currency.isNative;\n    var routerMustCustody = outputIsNative || !!options.fee;\n    var totalValue = inputIsNative ? trades.reduce(function (sum, trade) {\n      return sum.add(trade.maximumAmountIn(options.slippageTolerance));\n    }, ZERO_IN) : ZERO_IN;\n    // encode permit if necessary\n    if (options.inputTokenPermit) {\n      !sampleTrade.inputAmount.currency.isToken ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'NON_TOKEN_PERMIT') : 0 : void 0;\n      calldatas.push(SelfPermit.encodePermit(sampleTrade.inputAmount.currency, options.inputTokenPermit));\n    }\n    var recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.validateAndParseAddress)(options.recipient);\n    var deadline = toHex(options.deadline);\n    for (var _iterator = _createForOfIteratorHelperLoose(trades), _step; !(_step = _iterator()).done;) {\n      var trade = _step.value;\n      for (var _iterator2 = _createForOfIteratorHelperLoose(trade.swaps), _step2; !(_step2 = _iterator2()).done;) {\n        var _step2$value = _step2.value,\n          route = _step2$value.route,\n          inputAmount = _step2$value.inputAmount,\n          outputAmount = _step2$value.outputAmount;\n        var amountIn = toHex(trade.maximumAmountIn(options.slippageTolerance, inputAmount).quotient);\n        var amountOut = toHex(trade.minimumAmountOut(options.slippageTolerance, outputAmount).quotient);\n        // flag for whether the trade is single hop or not\n        var singleHop = route.pools.length === 1;\n        if (singleHop) {\n          if (trade.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT) {\n            var _options$sqrtPriceLim;\n            var exactInputSingleParams = {\n              tokenIn: route.tokenPath[0].address,\n              tokenOut: route.tokenPath[1].address,\n              fee: route.pools[0].fee,\n              recipient: routerMustCustody ? ADDRESS_ZERO : recipient,\n              deadline: deadline,\n              amountIn: amountIn,\n              amountOutMinimum: amountOut,\n              sqrtPriceLimitX96: toHex((_options$sqrtPriceLim = options.sqrtPriceLimitX96) != null ? _options$sqrtPriceLim : 0)\n            };\n            calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('exactInputSingle', [exactInputSingleParams]));\n          } else {\n            var _options$sqrtPriceLim2;\n            var exactOutputSingleParams = {\n              tokenIn: route.tokenPath[0].address,\n              tokenOut: route.tokenPath[1].address,\n              fee: route.pools[0].fee,\n              recipient: routerMustCustody ? ADDRESS_ZERO : recipient,\n              deadline: deadline,\n              amountOut: amountOut,\n              amountInMaximum: amountIn,\n              sqrtPriceLimitX96: toHex((_options$sqrtPriceLim2 = options.sqrtPriceLimitX96) != null ? _options$sqrtPriceLim2 : 0)\n            };\n            calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('exactOutputSingle', [exactOutputSingleParams]));\n          }\n        } else {\n          !(options.sqrtPriceLimitX96 === undefined) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(false, 'MULTIHOP_PRICE_LIMIT') : 0 : void 0;\n          var path = encodeRouteToPath(route, trade.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_OUTPUT);\n          if (trade.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_0__.TradeType.EXACT_INPUT) {\n            var exactInputParams = {\n              path: path,\n              recipient: routerMustCustody ? ADDRESS_ZERO : recipient,\n              deadline: deadline,\n              amountIn: amountIn,\n              amountOutMinimum: amountOut\n            };\n            calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('exactInput', [exactInputParams]));\n          } else {\n            var exactOutputParams = {\n              path: path,\n              recipient: routerMustCustody ? ADDRESS_ZERO : recipient,\n              deadline: deadline,\n              amountOut: amountOut,\n              amountInMaximum: amountIn\n            };\n            calldatas.push(SwapRouter.INTERFACE.encodeFunctionData('exactOutput', [exactOutputParams]));\n          }\n        }\n      }\n    }\n    // unwrap\n    if (routerMustCustody) {\n      if (!!options.fee) {\n        if (outputIsNative) {\n          calldatas.push(Payments.encodeUnwrapWETH9(totalAmountOut.quotient, recipient, options.fee));\n        } else {\n          calldatas.push(Payments.encodeSweepToken(sampleTrade.outputAmount.currency.wrapped, totalAmountOut.quotient, recipient, options.fee));\n        }\n      } else {\n        calldatas.push(Payments.encodeUnwrapWETH9(totalAmountOut.quotient, recipient));\n      }\n    }\n    // refund\n    if (mustRefund) {\n      calldatas.push(Payments.encodeRefundETH());\n    }\n    return {\n      calldata: Multicall.encodeMulticall(calldatas),\n      value: toHex(totalValue.quotient)\n    };\n  };\n  return SwapRouter;\n}();\nSwapRouter.INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_14__.Interface(_uniswap_v3_periphery_artifacts_contracts_SwapRouter_sol_SwapRouter_json__WEBPACK_IMPORTED_MODULE_10__.abi);\n\n\n//# sourceMappingURL=v3-sdk.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@uniswap/v3-sdk/dist/v3-sdk.esm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@uniswap/v3-staker/artifacts/contracts/UniswapV3Staker.sol/UniswapV3Staker.json":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@uniswap/v3-staker/artifacts/contracts/UniswapV3Staker.sol/UniswapV3Staker.json ***!
  \******************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"UniswapV3Staker","sourceName":"contracts/UniswapV3Staker.sol","abi":[{"inputs":[{"internalType":"contract IUniswapV3Factory","name":"_factory","type":"address"},{"internalType":"contract INonfungiblePositionManager","name":"_nonfungiblePositionManager","type":"address"},{"internalType":"uint256","name":"_maxIncentiveStartLeadTime","type":"uint256"},{"internalType":"uint256","name":"_maxIncentiveDuration","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"DepositTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"indexed":true,"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"},{"indexed":false,"internalType":"address","name":"refundee","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"IncentiveCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"incentiveId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"refund","type":"uint256"}],"name":"IncentiveEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"incentiveId","type":"bytes32"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"}],"name":"TokenStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"incentiveId","type":"bytes32"}],"name":"TokenUnstaked","type":"event"},{"inputs":[{"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amountRequested","type":"uint256"}],"name":"claimReward","outputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"address","name":"refundee","type":"address"}],"internalType":"struct IUniswapV3Staker.IncentiveKey","name":"key","type":"tuple"},{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"createIncentive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"deposits","outputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint48","name":"numberOfStakes","type":"uint48"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"address","name":"refundee","type":"address"}],"internalType":"struct IUniswapV3Staker.IncentiveKey","name":"key","type":"tuple"}],"name":"endIncentive","outputs":[{"internalType":"uint256","name":"refund","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"contract IUniswapV3Factory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"address","name":"refundee","type":"address"}],"internalType":"struct IUniswapV3Staker.IncentiveKey","name":"key","type":"tuple"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getRewardInfo","outputs":[{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint160","name":"secondsInsideX128","type":"uint160"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"incentives","outputs":[{"internalType":"uint256","name":"totalRewardUnclaimed","type":"uint256"},{"internalType":"uint160","name":"totalSecondsClaimedX128","type":"uint160"},{"internalType":"uint96","name":"numberOfStakes","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxIncentiveDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxIncentiveStartLeadTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"nonfungiblePositionManager","outputs":[{"internalType":"contract INonfungiblePositionManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20Minimal","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"address","name":"refundee","type":"address"}],"internalType":"struct IUniswapV3Staker.IncentiveKey","name":"key","type":"tuple"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"stakeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes32","name":"incentiveId","type":"bytes32"}],"name":"stakes","outputs":[{"internalType":"uint160","name":"secondsPerLiquidityInsideInitialX128","type":"uint160"},{"internalType":"uint128","name":"liquidity","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"transferDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"contract IERC20Minimal","name":"rewardToken","type":"address"},{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"address","name":"refundee","type":"address"}],"internalType":"struct IUniswapV3Staker.IncentiveKey","name":"key","type":"tuple"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"unstakeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"","deployedBytecode":"","linkReferences":{},"deployedLinkReferences":{}}');

/***/ }),

/***/ "(rsc)/./node_modules/@uniswap/v4-sdk/dist/v4-sdk.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/@uniswap/v4-sdk/dist/v4-sdk.esm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Actions: () => (/* binding */ Actions),\n/* harmony export */   DYNAMIC_FEE_FLAG: () => (/* binding */ DYNAMIC_FEE_FLAG),\n/* harmony export */   Hook: () => (/* binding */ Hook),\n/* harmony export */   HookOptions: () => (/* binding */ HookOptions),\n/* harmony export */   Pool: () => (/* binding */ Pool),\n/* harmony export */   Position: () => (/* binding */ Position),\n/* harmony export */   Route: () => (/* binding */ Route),\n/* harmony export */   Subparser: () => (/* binding */ Subparser),\n/* harmony export */   Trade: () => (/* binding */ Trade),\n/* harmony export */   V4BaseActionsParser: () => (/* binding */ V4BaseActionsParser),\n/* harmony export */   V4Planner: () => (/* binding */ V4Planner),\n/* harmony export */   V4PositionManager: () => (/* binding */ V4PositionManager),\n/* harmony export */   V4PositionPlanner: () => (/* binding */ V4PositionPlanner),\n/* harmony export */   V4_BASE_ACTIONS_ABI_DEFINITION: () => (/* binding */ V4_BASE_ACTIONS_ABI_DEFINITION),\n/* harmony export */   amountWithPathCurrency: () => (/* binding */ amountWithPathCurrency),\n/* harmony export */   encodeRouteToPath: () => (/* binding */ encodeRouteToPath),\n/* harmony export */   getPathCurrency: () => (/* binding */ getPathCurrency),\n/* harmony export */   hookFlagIndex: () => (/* binding */ hookFlagIndex),\n/* harmony export */   priceToClosestTick: () => (/* binding */ priceToClosestTick),\n/* harmony export */   sortsBefore: () => (/* binding */ sortsBefore),\n/* harmony export */   tickToPrice: () => (/* binding */ tickToPrice),\n/* harmony export */   toAddress: () => (/* binding */ toAddress),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   tradeComparator: () => (/* binding */ tradeComparator)\n/* harmony export */ });\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"(rsc)/./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var _ethersproject_solidity__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/solidity */ \"(rsc)/./node_modules/@ethersproject/solidity/lib.esm/index.js\");\n/* harmony import */ var _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @uniswap/sdk-core */ \"(rsc)/./node_modules/@uniswap/sdk-core/dist/sdk-core.esm.js\");\n/* harmony import */ var _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @uniswap/v3-sdk */ \"(rsc)/./node_modules/@uniswap/v3-sdk/dist/v3-sdk.esm.js\");\n/* harmony import */ var ethers_lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers/lib/utils */ \"(rsc)/./node_modules/ethers/lib/utils.js\");\n/* harmony import */ var ethers_lib_utils__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(ethers_lib_utils__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var jsbi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jsbi */ \"(rsc)/./node_modules/jsbi/dist/jsbi.mjs\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"(rsc)/./node_modules/@ethersproject/constants/lib.esm/addresses.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ethers */ \"(rsc)/./node_modules/@ethersproject/constants/lib.esm/bignumbers.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ethers */ \"(rsc)/./node_modules/@ethersproject/abi/lib.esm/abi-coder.js\");\n/* harmony import */ var _ethersproject_abi__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ethersproject/abi */ \"(rsc)/./node_modules/@ethersproject/abi/lib.esm/interface.js\");\n/* harmony import */ var _uniswap_v3_periphery_artifacts_contracts_interfaces_IMulticall_sol_IMulticall_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @uniswap/v3-periphery/artifacts/contracts/interfaces/IMulticall.sol/IMulticall.json */ \"(rsc)/./node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/IMulticall.sol/IMulticall.json\");\n\n\n\n\n\n\n\n\n\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nfunction _createForOfIteratorHelperLoose(r, e) {\n  var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (t) return (t = t.call(r)).next.bind(t);\n  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) {\n    t && (r = t);\n    var o = 0;\n    return function () {\n      return o >= r.length ? {\n        done: !0\n      } : {\n        done: !1,\n        value: r[o++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);\n}\nfunction _regeneratorRuntime() {\n  _regeneratorRuntime = function () {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function (t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function (t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(typeof e + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function () {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function (e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function (t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function (t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    catch: function (t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nfunction _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nfunction sortsBefore(currencyA, currencyB) {\n  if (currencyA.isNative) return true;\n  if (currencyB.isNative) return false;\n  return currencyA.wrapped.sortsBefore(currencyB.wrapped);\n}\n\nvar _hookFlagIndex;\nvar HookOptions;\n(function (HookOptions) {\n  HookOptions[\"AfterRemoveLiquidityReturnsDelta\"] = \"afterRemoveLiquidityReturnsDelta\";\n  HookOptions[\"AfterAddLiquidityReturnsDelta\"] = \"afterAddLiquidityReturnsDelta\";\n  HookOptions[\"AfterSwapReturnsDelta\"] = \"afterSwapReturnsDelta\";\n  HookOptions[\"BeforeSwapReturnsDelta\"] = \"beforeSwapReturnsDelta\";\n  HookOptions[\"AfterDonate\"] = \"afterDonate\";\n  HookOptions[\"BeforeDonate\"] = \"beforeDonate\";\n  HookOptions[\"AfterSwap\"] = \"afterSwap\";\n  HookOptions[\"BeforeSwap\"] = \"beforeSwap\";\n  HookOptions[\"AfterRemoveLiquidity\"] = \"afterRemoveLiquidity\";\n  HookOptions[\"BeforeRemoveLiquidity\"] = \"beforeRemoveLiquidity\";\n  HookOptions[\"AfterAddLiquidity\"] = \"afterAddLiquidity\";\n  HookOptions[\"BeforeAddLiquidity\"] = \"beforeAddLiquidity\";\n  HookOptions[\"AfterInitialize\"] = \"afterInitialize\";\n  HookOptions[\"BeforeInitialize\"] = \"beforeInitialize\";\n})(HookOptions || (HookOptions = {}));\nvar hookFlagIndex = (_hookFlagIndex = {}, _hookFlagIndex[HookOptions.AfterRemoveLiquidityReturnsDelta] = 0, _hookFlagIndex[HookOptions.AfterAddLiquidityReturnsDelta] = 1, _hookFlagIndex[HookOptions.AfterSwapReturnsDelta] = 2, _hookFlagIndex[HookOptions.BeforeSwapReturnsDelta] = 3, _hookFlagIndex[HookOptions.AfterDonate] = 4, _hookFlagIndex[HookOptions.BeforeDonate] = 5, _hookFlagIndex[HookOptions.AfterSwap] = 6, _hookFlagIndex[HookOptions.BeforeSwap] = 7, _hookFlagIndex[HookOptions.AfterRemoveLiquidity] = 8, _hookFlagIndex[HookOptions.BeforeRemoveLiquidity] = 9, _hookFlagIndex[HookOptions.AfterAddLiquidity] = 10, _hookFlagIndex[HookOptions.BeforeAddLiquidity] = 11, _hookFlagIndex[HookOptions.AfterInitialize] = 12, _hookFlagIndex[HookOptions.BeforeInitialize] = 13, _hookFlagIndex);\nvar Hook = /*#__PURE__*/function () {\n  function Hook() {}\n  Hook.permissions = function permissions(address) {\n    this._checkAddress(address);\n    return {\n      beforeInitialize: this._hasPermission(address, HookOptions.BeforeInitialize),\n      afterInitialize: this._hasPermission(address, HookOptions.AfterInitialize),\n      beforeAddLiquidity: this._hasPermission(address, HookOptions.BeforeAddLiquidity),\n      afterAddLiquidity: this._hasPermission(address, HookOptions.AfterAddLiquidity),\n      beforeRemoveLiquidity: this._hasPermission(address, HookOptions.BeforeRemoveLiquidity),\n      afterRemoveLiquidity: this._hasPermission(address, HookOptions.AfterRemoveLiquidity),\n      beforeSwap: this._hasPermission(address, HookOptions.BeforeSwap),\n      afterSwap: this._hasPermission(address, HookOptions.AfterSwap),\n      beforeDonate: this._hasPermission(address, HookOptions.BeforeDonate),\n      afterDonate: this._hasPermission(address, HookOptions.AfterDonate),\n      beforeSwapReturnsDelta: this._hasPermission(address, HookOptions.BeforeSwapReturnsDelta),\n      afterSwapReturnsDelta: this._hasPermission(address, HookOptions.AfterSwapReturnsDelta),\n      afterAddLiquidityReturnsDelta: this._hasPermission(address, HookOptions.AfterAddLiquidityReturnsDelta),\n      afterRemoveLiquidityReturnsDelta: this._hasPermission(address, HookOptions.AfterRemoveLiquidityReturnsDelta)\n    };\n  };\n  Hook.hasPermission = function hasPermission(address, hookOption) {\n    this._checkAddress(address);\n    return this._hasPermission(address, hookOption);\n  };\n  Hook.hasInitializePermissions = function hasInitializePermissions(address) {\n    this._checkAddress(address);\n    return this._hasPermission(address, HookOptions.BeforeInitialize) || Hook._hasPermission(address, HookOptions.AfterInitialize);\n  };\n  Hook.hasLiquidityPermissions = function hasLiquidityPermissions(address) {\n    this._checkAddress(address);\n    // this implicitly encapsulates liquidity delta permissions\n    return this._hasPermission(address, HookOptions.BeforeAddLiquidity) || Hook._hasPermission(address, HookOptions.AfterAddLiquidity) || Hook._hasPermission(address, HookOptions.BeforeRemoveLiquidity) || Hook._hasPermission(address, HookOptions.AfterRemoveLiquidity);\n  };\n  Hook.hasSwapPermissions = function hasSwapPermissions(address) {\n    this._checkAddress(address);\n    // this implicitly encapsulates swap delta permissions\n    return this._hasPermission(address, HookOptions.BeforeSwap) || Hook._hasPermission(address, HookOptions.AfterSwap);\n  };\n  Hook.hasDonatePermissions = function hasDonatePermissions(address) {\n    this._checkAddress(address);\n    return this._hasPermission(address, HookOptions.BeforeDonate) || Hook._hasPermission(address, HookOptions.AfterDonate);\n  };\n  Hook._hasPermission = function _hasPermission(address, hookOption) {\n    return !!(parseInt(address, 16) & 1 << hookFlagIndex[hookOption]);\n  };\n  Hook._checkAddress = function _checkAddress(address) {\n    !(0,ethers_lib_utils__WEBPACK_IMPORTED_MODULE_4__.isAddress)(address) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'invalid address') : 0 : void 0;\n  };\n  return Hook;\n}();\n\nvar _TICK_SPACINGS;\n// constants used internally but not expected to be used externally\nvar ADDRESS_ZERO = ethers__WEBPACK_IMPORTED_MODULE_5__.AddressZero;\nvar NEGATIVE_ONE = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(-1);\nvar ZERO = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(0);\nvar ONE = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(1);\nvar EMPTY_BYTES = '0x';\n// used in liquidity amount math\nvar Q96 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].exponentiate(/*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(2), /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(96));\nvar Q192 = /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].exponentiate(Q96, /*#__PURE__*/jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(2));\n// used when unwrapping weth in positon manager\nvar OPEN_DELTA = ethers__WEBPACK_IMPORTED_MODULE_6__.Zero;\n// error constants\nvar NATIVE_NOT_SET = 'NATIVE_NOT_SET';\nvar ZERO_LIQUIDITY = 'ZERO_LIQUIDITY';\nvar NO_SQRT_PRICE = 'NO_SQRT_PRICE';\nvar CANNOT_BURN = 'CANNOT_BURN';\n/**\r\n * Function fragments that exist on the PositionManager contract.\r\n */\nvar PositionFunctions;\n(function (PositionFunctions) {\n  PositionFunctions[\"INITIALIZE_POOL\"] = \"initializePool\";\n  PositionFunctions[\"MODIFY_LIQUIDITIES\"] = \"modifyLiquidities\";\n  // Inherited from PermitForwarder\n  PositionFunctions[\"PERMIT_BATCH\"] = \"0x002a3e3a\";\n  // Inherited from ERC721Permit\n  PositionFunctions[\"ERC721PERMIT_PERMIT\"] = \"0x0f5730f1\";\n})(PositionFunctions || (PositionFunctions = {}));\n/**\r\n * The default factory enabled fee amounts, denominated in hundredths of bips.\r\n */\nvar FeeAmount;\n(function (FeeAmount) {\n  FeeAmount[FeeAmount[\"LOWEST\"] = 100] = \"LOWEST\";\n  FeeAmount[FeeAmount[\"LOW\"] = 500] = \"LOW\";\n  FeeAmount[FeeAmount[\"MEDIUM\"] = 3000] = \"MEDIUM\";\n  FeeAmount[FeeAmount[\"HIGH\"] = 10000] = \"HIGH\";\n})(FeeAmount || (FeeAmount = {}));\n/**\r\n * The default factory tick spacings by fee amount.\r\n */\nvar TICK_SPACINGS = (_TICK_SPACINGS = {}, _TICK_SPACINGS[FeeAmount.LOWEST] = 1, _TICK_SPACINGS[FeeAmount.LOW] = 10, _TICK_SPACINGS[FeeAmount.MEDIUM] = 60, _TICK_SPACINGS[FeeAmount.HIGH] = 200, _TICK_SPACINGS);\n\nvar DYNAMIC_FEE_FLAG = 0x800000;\nvar NO_TICK_DATA_PROVIDER_DEFAULT = /*#__PURE__*/new _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.NoTickDataProvider();\n/**\r\n * Represents a V4 pool\r\n */\nvar Pool = /*#__PURE__*/function () {\n  /**\r\n   * Construct a pool\r\n   * @param currencyA One of the currencys in the pool\r\n   * @param currencyB The other currency in the pool\r\n   * @param fee The fee in hundredths of a bips of the input amount of every swap that is collected by the pool\r\n   * @param tickSpacing The tickSpacing of the pool\r\n   * @param hooks The address of the hook contract\r\n   * @param sqrtRatioX96 The sqrt of the current ratio of amounts of currency1 to currency0\r\n   * @param liquidity The current value of in range liquidity\r\n   * @param tickCurrent The current tick of the pool\r\n   */\n  function Pool(currencyA, currencyB, fee, tickSpacing, hooks, sqrtRatioX96, liquidity, tickCurrent, ticks) {\n    if (ticks === void 0) {\n      ticks = NO_TICK_DATA_PROVIDER_DEFAULT;\n    }\n    !(0,ethers_lib_utils__WEBPACK_IMPORTED_MODULE_4__.isAddress)(hooks) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'Invalid hook address') : 0 : void 0;\n    !(Number.isInteger(fee) && (fee === DYNAMIC_FEE_FLAG || fee < 1000000)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'FEE') : 0 : void 0;\n    if (fee === DYNAMIC_FEE_FLAG) {\n      !(Number(hooks) > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'Dynamic fee pool requires a hook') : 0 : void 0;\n    }\n    var tickCurrentSqrtRatioX96 = _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(tickCurrent);\n    var nextTickSqrtRatioX96 = _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(tickCurrent + 1);\n    !(jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].greaterThanOrEqual(jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(sqrtRatioX96), tickCurrentSqrtRatioX96) && jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].lessThanOrEqual(jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(sqrtRatioX96), nextTickSqrtRatioX96)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'PRICE_BOUNDS') : 0 : void 0;\n    var _ref = sortsBefore(currencyA, currencyB) ? [currencyA, currencyB] : [currencyB, currencyA];\n    this.currency0 = _ref[0];\n    this.currency1 = _ref[1];\n    this.fee = fee;\n    this.sqrtRatioX96 = jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(sqrtRatioX96);\n    this.tickSpacing = tickSpacing;\n    this.hooks = hooks;\n    this.liquidity = jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(liquidity);\n    this.tickCurrent = tickCurrent;\n    this.tickDataProvider = Array.isArray(ticks) ? new _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickListDataProvider(ticks, tickSpacing) : ticks;\n    this.poolKey = Pool.getPoolKey(this.currency0, this.currency1, this.fee, this.tickSpacing, this.hooks);\n    this.poolId = Pool.getPoolId(this.currency0, this.currency1, this.fee, this.tickSpacing, this.hooks);\n  }\n  Pool.getPoolKey = function getPoolKey(currencyA, currencyB, fee, tickSpacing, hooks) {\n    !(0,ethers_lib_utils__WEBPACK_IMPORTED_MODULE_4__.isAddress)(hooks) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'Invalid hook address') : 0 : void 0;\n    var _ref2 = sortsBefore(currencyA, currencyB) ? [currencyA, currencyB] : [currencyB, currencyA],\n      currency0 = _ref2[0],\n      currency1 = _ref2[1];\n    var currency0Addr = currency0.isNative ? ADDRESS_ZERO : currency0.wrapped.address;\n    var currency1Addr = currency1.isNative ? ADDRESS_ZERO : currency1.wrapped.address;\n    return {\n      currency0: currency0Addr,\n      currency1: currency1Addr,\n      fee: fee,\n      tickSpacing: tickSpacing,\n      hooks: hooks\n    };\n  };\n  Pool.getPoolId = function getPoolId(currencyA, currencyB, fee, tickSpacing, hooks) {\n    var _ref3 = sortsBefore(currencyA, currencyB) ? [currencyA, currencyB] : [currencyB, currencyA],\n      currency0 = _ref3[0],\n      currency1 = _ref3[1];\n    var currency0Addr = currency0.isNative ? ADDRESS_ZERO : currency0.wrapped.address;\n    var currency1Addr = currency1.isNative ? ADDRESS_ZERO : currency1.wrapped.address;\n    return (0,_ethersproject_solidity__WEBPACK_IMPORTED_MODULE_8__.keccak256)(['bytes'], [ethers_lib_utils__WEBPACK_IMPORTED_MODULE_4__.defaultAbiCoder.encode(['address', 'address', 'uint24', 'int24', 'address'], [currency0Addr, currency1Addr, fee, tickSpacing, hooks])]);\n  }\n  /** backwards compatibility with v2/3 sdks */;\n  var _proto = Pool.prototype;\n  /**\r\n   * Returns true if the currency is either currency0 or currency1\r\n   * @param currency The currency to check\r\n   * @returns True if currency is either currency0 or currency1\r\n   */\n  _proto.involvesCurrency = function involvesCurrency(currency) {\n    return currency.equals(this.currency0) || currency.equals(this.currency1);\n  }\n  /** backwards compatibility with v2/3 sdks */;\n  _proto.involvesToken = function involvesToken(currency) {\n    return this.involvesCurrency(currency);\n  }\n  /**\r\n   * v4-only involvesToken convenience method, used for mixed route ETH <-> WETH connection only\r\n   * @param currency\r\n   */;\n  _proto.v4InvolvesToken = function v4InvolvesToken(currency) {\n    return this.involvesCurrency(currency) || currency.wrapped.equals(this.currency0) || currency.wrapped.equals(this.currency1) || currency.wrapped.equals(this.currency0.wrapped) || currency.wrapped.equals(this.currency1.wrapped);\n  }\n  /**\r\n   * Returns the current mid price of the pool in terms of currency0, i.e. the ratio of currency1 over currency0\r\n   */;\n  /**\r\n   * Return the price of the given currency in terms of the other currency in the pool.\r\n   * @param currency The currency to return price of\r\n   * @returns The price of the given currency, in terms of the other.\r\n   */\n  _proto.priceOf = function priceOf(currency) {\n    !this.involvesCurrency(currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'CURRENCY') : 0 : void 0;\n    return currency.equals(this.currency0) ? this.currency0Price : this.currency1Price;\n  }\n  /**\r\n   * Returns the chain ID of the currencies in the pool.\r\n   */;\n  /** Works only for vanilla hookless v3 pools, otherwise throws an error */\n  _proto.getOutputAmount =\n  /*#__PURE__*/\n  function () {\n    var _getOutputAmount = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(inputAmount, sqrtPriceLimitX96) {\n      var zeroForOne, _yield$this$swap, outputAmount, sqrtRatioX96, liquidity, tickCurrent, outputCurrency;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            !this.involvesCurrency(inputAmount.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'CURRENCY') : 0 : void 0;\n            zeroForOne = inputAmount.currency.equals(this.currency0);\n            _context.next = 4;\n            return this.swap(zeroForOne, inputAmount.quotient, sqrtPriceLimitX96);\n          case 4:\n            _yield$this$swap = _context.sent;\n            outputAmount = _yield$this$swap.amountCalculated;\n            sqrtRatioX96 = _yield$this$swap.sqrtRatioX96;\n            liquidity = _yield$this$swap.liquidity;\n            tickCurrent = _yield$this$swap.tickCurrent;\n            outputCurrency = zeroForOne ? this.currency1 : this.currency0;\n            return _context.abrupt(\"return\", [_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromRawAmount(outputCurrency, jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multiply(outputAmount, NEGATIVE_ONE)), new Pool(this.currency0, this.currency1, this.fee, this.tickSpacing, this.hooks, sqrtRatioX96, liquidity, tickCurrent, this.tickDataProvider)]);\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this);\n    }));\n    function getOutputAmount(_x, _x2) {\n      return _getOutputAmount.apply(this, arguments);\n    }\n    return getOutputAmount;\n  }()\n  /**\r\n   * Given a desired output amount of a currency, return the computed input amount and a pool with state updated after the trade\r\n   * Works only for vanilla hookless v3 pools, otherwise throws an error\r\n   * @param outputAmount the output amount for which to quote the input amount\r\n   * @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\r\n   * @returns The input amount and the pool with updated state\r\n   */\n  ;\n  _proto.getInputAmount =\n  /*#__PURE__*/\n  function () {\n    var _getInputAmount = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(outputAmount, sqrtPriceLimitX96) {\n      var zeroForOne, _yield$this$swap2, inputAmount, sqrtRatioX96, liquidity, tickCurrent, inputCurrency;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            !this.involvesCurrency(outputAmount.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'CURRENCY') : 0 : void 0;\n            zeroForOne = outputAmount.currency.equals(this.currency1);\n            _context2.next = 4;\n            return this.swap(zeroForOne, jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multiply(outputAmount.quotient, NEGATIVE_ONE), sqrtPriceLimitX96);\n          case 4:\n            _yield$this$swap2 = _context2.sent;\n            inputAmount = _yield$this$swap2.amountCalculated;\n            sqrtRatioX96 = _yield$this$swap2.sqrtRatioX96;\n            liquidity = _yield$this$swap2.liquidity;\n            tickCurrent = _yield$this$swap2.tickCurrent;\n            inputCurrency = zeroForOne ? this.currency0 : this.currency1;\n            return _context2.abrupt(\"return\", [_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromRawAmount(inputCurrency, inputAmount), new Pool(this.currency0, this.currency1, this.fee, this.tickSpacing, this.hooks, sqrtRatioX96, liquidity, tickCurrent, this.tickDataProvider)]);\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, this);\n    }));\n    function getInputAmount(_x3, _x4) {\n      return _getInputAmount.apply(this, arguments);\n    }\n    return getInputAmount;\n  }()\n  /**\r\n   * Executes a swap\r\n   * @param zeroForOne Whether the amount in is token0 or token1\r\n   * @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\r\n   * @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\r\n   * @returns amountCalculated\r\n   * @returns sqrtRatioX96\r\n   * @returns liquidity\r\n   * @returns tickCurrent\r\n   */\n  ;\n  _proto.swap =\n  /*#__PURE__*/\n  function () {\n    var _swap = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(zeroForOne, amountSpecified, sqrtPriceLimitX96) {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (this.hookImpactsSwap()) {\n              _context3.next = 4;\n              break;\n            }\n            return _context3.abrupt(\"return\", (0,_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.v3Swap)(jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(this.fee), this.sqrtRatioX96, this.tickCurrent, this.liquidity, this.tickSpacing, this.tickDataProvider, zeroForOne, amountSpecified, sqrtPriceLimitX96));\n          case 4:\n            throw new Error('Unsupported hook');\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, this);\n    }));\n    function swap(_x5, _x6, _x7) {\n      return _swap.apply(this, arguments);\n    }\n    return swap;\n  }();\n  _proto.hookImpactsSwap = function hookImpactsSwap() {\n    // could use this function to clear certain hooks that may have swap Permissions, but we know they don't interfere\n    // in the swap outcome\n    return Hook.hasSwapPermissions(this.hooks);\n  };\n  return _createClass(Pool, [{\n    key: \"token0\",\n    get: function get() {\n      return this.currency0;\n    }\n  }, {\n    key: \"token1\",\n    get: function get() {\n      return this.currency1;\n    }\n  }, {\n    key: \"currency0Price\",\n    get: function get() {\n      var _this$_currency0Price;\n      return (_this$_currency0Price = this._currency0Price) != null ? _this$_currency0Price : this._currency0Price = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.Price(this.currency0, this.currency1, Q192, jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multiply(this.sqrtRatioX96, this.sqrtRatioX96));\n    }\n    /** backwards compatibility with v2/3 sdks */\n  }, {\n    key: \"token0Price\",\n    get: function get() {\n      return this.currency0Price;\n    }\n    /**\r\n     * Returns the current mid price of the pool in terms of currency1, i.e. the ratio of currency0 over currency1\r\n     */\n  }, {\n    key: \"currency1Price\",\n    get: function get() {\n      var _this$_currency1Price;\n      return (_this$_currency1Price = this._currency1Price) != null ? _this$_currency1Price : this._currency1Price = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.Price(this.currency1, this.currency0, jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multiply(this.sqrtRatioX96, this.sqrtRatioX96), Q192);\n    }\n    /** backwards compatibility with v2/3 sdks */\n  }, {\n    key: \"token1Price\",\n    get: function get() {\n      return this.currency1Price;\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return this.currency0.chainId;\n    }\n  }]);\n}();\n\nfunction amountWithPathCurrency(amount, pool) {\n  return _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromFractionalAmount(getPathCurrency(amount.currency, pool), amount.numerator, amount.denominator);\n}\nfunction getPathCurrency(currency, pool) {\n  if (pool.involvesCurrency(currency)) {\n    return currency;\n  } else if (pool.involvesCurrency(currency.wrapped)) {\n    return currency.wrapped;\n  } else if (pool.currency0.wrapped.equals(currency)) {\n    return pool.currency0;\n  } else if (pool.currency1.wrapped.equals(currency)) {\n    return pool.currency1;\n  } else {\n    throw new Error(\"Expected currency \" + currency.symbol + \" to be either \" + pool.currency0.symbol + \" or \" + pool.currency1.symbol);\n  }\n}\n\n/**\r\n * Represents a list of pools through which a swap can occur\r\n * @template TInput The input currency\r\n * @template TOutput The output currency\r\n */\nvar Route = /*#__PURE__*/function () {\n  /**\r\n   * Creates an instance of route.\r\n   * @param pools An array of `Pool` objects, ordered by the route the swap will take\r\n   * @param input The input currency\r\n   * @param output The output currency\r\n   */\n  function Route(pools, input, output) {\n    this._midPrice = null;\n    !(pools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'POOLS') : 0 : void 0;\n    var chainId = pools[0].chainId;\n    var allOnSameChain = pools.every(function (pool) {\n      return pool.chainId === chainId;\n    });\n    !allOnSameChain ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'CHAIN_IDS') : 0 : void 0;\n    /**\r\n     * function throws if pools do not involve the input and output currency or the native/wrapped equivalent\r\n     **/\n    this.pathInput = getPathCurrency(input, pools[0]);\n    this.pathOutput = getPathCurrency(output, pools[pools.length - 1]);\n    /**\r\n     * Normalizes currency0-currency1 order and selects the next currency/fee step to add to the path\r\n     * */\n    var currencyPath = [this.pathInput];\n    for (var _iterator = _createForOfIteratorHelperLoose(pools.entries()), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n        i = _step$value[0],\n        pool = _step$value[1];\n      var currentInputCurrency = currencyPath[i];\n      !(currentInputCurrency.equals(pool.currency0) || currentInputCurrency.equals(pool.currency1)) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'PATH') : 0 : void 0;\n      var nextCurrency = currentInputCurrency.equals(pool.currency0) ? pool.currency1 : pool.currency0;\n      currencyPath.push(nextCurrency);\n    }\n    this.pools = pools;\n    this.currencyPath = currencyPath;\n    this.input = input;\n    this.output = output != null ? output : currencyPath[currencyPath.length - 1];\n  }\n  return _createClass(Route, [{\n    key: \"chainId\",\n    get: function get() {\n      return this.pools[0].chainId;\n    }\n    /**\r\n     * Returns the mid price of the route\r\n     */\n  }, {\n    key: \"midPrice\",\n    get: function get() {\n      if (this._midPrice !== null) return this._midPrice;\n      var price = this.pools.slice(1).reduce(function (_ref, pool) {\n        var nextInput = _ref.nextInput,\n          price = _ref.price;\n        return nextInput.equals(pool.currency0) ? {\n          nextInput: pool.currency1,\n          price: price.multiply(pool.currency0Price)\n        } : {\n          nextInput: pool.currency0,\n          price: price.multiply(pool.currency1Price)\n        };\n      }, this.pools[0].currency0.equals(this.input) ? {\n        nextInput: this.pools[0].currency1,\n        price: this.pools[0].currency0Price\n      } : {\n        nextInput: this.pools[0].currency0,\n        price: this.pools[0].currency1Price\n      }).price;\n      return this._midPrice = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.Price(this.input, this.output, price.denominator, price.numerator);\n    }\n  }]);\n}();\n\n/**\r\n * Trades comparator, an extension of the input output comparator that also considers other dimensions of the trade in ranking them\r\n * @template TInput The input currency, either Ether or an ERC-20\r\n * @template TOutput The output currency, either Ether or an ERC-20\r\n * @template TTradeType The trade type, either exact input or exact output\r\n * @param a The first trade to compare\r\n * @param b The second trade to compare\r\n * @returns A sorted ordering for two neighboring elements in a trade array\r\n */\nfunction tradeComparator(a, b) {\n  // must have same input and output currency for comparison\n  !a.inputAmount.currency.equals(b.inputAmount.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'INPUT_CURRENCY') : 0 : void 0;\n  !a.outputAmount.currency.equals(b.outputAmount.currency) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'OUTPUT_CURRENCY') : 0 : void 0;\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      // consider the number of hops since each hop costs gas\n      var aHops = a.swaps.reduce(function (total, cur) {\n        return total + cur.route.currencyPath.length;\n      }, 0);\n      var bHops = b.swaps.reduce(function (total, cur) {\n        return total + cur.route.currencyPath.length;\n      }, 0);\n      return aHops - bHops;\n    }\n    // trade A requires less input than trade B, so A should come first\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1;\n    } else {\n      return 1;\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n/**\r\n * Represents a trade executed against a set of routes where some percentage of the input is\r\n * split across each route.\r\n *\r\n * Each route has its own set of pools. Pools can not be re-used across routes.\r\n *\r\n * Does not account for slippage, i.e., changes in price environment that can occur between\r\n * the time the trade is submitted and when it is executed.\r\n * @template TInput The input currency, either Ether or an ERC-20\r\n * @template TOutput The output currency, either Ether or an ERC-20\r\n * @template TTradeType The trade type, either exact input or exact output\r\n */\nvar Trade = /*#__PURE__*/function () {\n  /**\r\n   * Construct a trade by passing in the pre-computed property values\r\n   * @param routes The routes through which the trade occurs\r\n   * @param tradeType The type of trade, exact input or exact output\r\n   */\n  function Trade(_ref) {\n    var routes = _ref.routes,\n      tradeType = _ref.tradeType;\n    var inputCurrency = routes[0].inputAmount.currency;\n    var outputCurrency = routes[0].outputAmount.currency;\n    !routes.every(function (_ref2) {\n      var route = _ref2.route;\n      return inputCurrency.equals(route.input);\n    }) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'INPUT_CURRENCY_MATCH') : 0 : void 0;\n    !routes.every(function (_ref3) {\n      var route = _ref3.route;\n      return outputCurrency.equals(route.output);\n    }) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'OUTPUT_CURRENCY_MATCH') : 0 : void 0;\n    var numPools = routes.map(function (_ref4) {\n      var route = _ref4.route;\n      return route.pools.length;\n    }).reduce(function (total, cur) {\n      return total + cur;\n    }, 0);\n    var poolIDSet = new Set();\n    for (var _iterator = _createForOfIteratorHelperLoose(routes), _step; !(_step = _iterator()).done;) {\n      var route = _step.value.route;\n      for (var _iterator2 = _createForOfIteratorHelperLoose(route.pools), _step2; !(_step2 = _iterator2()).done;) {\n        var pool = _step2.value;\n        poolIDSet.add(Pool.getPoolId(pool.currency0, pool.currency1, pool.fee, pool.tickSpacing, pool.hooks));\n      }\n    }\n    !(numPools === poolIDSet.size) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'POOLS_DUPLICATED') : 0 : void 0;\n    this.swaps = routes;\n    this.tradeType = tradeType;\n  }\n  /**\r\n   * @deprecated Deprecated in favor of 'swaps' property. If the trade consists of multiple routes\r\n   * this will return an error.\r\n   *\r\n   * When the trade consists of just a single route, this returns the route of the trade,\r\n   * i.e. which pools the trade goes through.\r\n   */\n  /**\r\n   * Constructs an exact in trade with the given amount in and route\r\n   * @template TInput The input currency, either Ether or an ERC-20\r\n   * @template TOutput The output currency, either Ether or an ERC-20\r\n   * @param route The route of the exact in trade\r\n   * @param amountIn The amount being passed in\r\n   * @returns The exact in trade\r\n   */\n  Trade.exactIn =\n  /*#__PURE__*/\n  function () {\n    var _exactIn = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(route, amountIn) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", Trade.fromRoute(route, amountIn, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.TradeType.EXACT_INPUT));\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    function exactIn(_x, _x2) {\n      return _exactIn.apply(this, arguments);\n    }\n    return exactIn;\n  }()\n  /**\r\n   * Constructs an exact out trade with the given amount out and route\r\n   * @template TInput The input currency, either Ether or an ERC-20\r\n   * @template TOutput The output currency, either Ether or an ERC-20\r\n   * @param route The route of the exact out trade\r\n   * @param amountOut The amount returned by the trade\r\n   * @returns The exact out trade\r\n   */\n  ;\n  Trade.exactOut =\n  /*#__PURE__*/\n  function () {\n    var _exactOut = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(route, amountOut) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", Trade.fromRoute(route, amountOut, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.TradeType.EXACT_OUTPUT));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    function exactOut(_x3, _x4) {\n      return _exactOut.apply(this, arguments);\n    }\n    return exactOut;\n  }()\n  /**\r\n   * Constructs a trade by simulating swaps through the given route\r\n   * @template TInput The input currency, either Ether or an ERC-20.\r\n   * @template TOutput The output currency, either Ether or an ERC-20.\r\n   * @template TTradeType The type of the trade, either exact in or exact out.\r\n   * @param route route to swap through\r\n   * @param amount the amount specified, either input or output, depending on tradeType\r\n   * @param tradeType whether the trade is an exact input or exact output swap\r\n   * @returns The route\r\n   */\n  ;\n  Trade.fromRoute =\n  /*#__PURE__*/\n  function () {\n    var _fromRoute = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(route, amount, tradeType) {\n      var inputAmount, outputAmount, tokenAmount, i, pool, _yield$pool$getOutput, _tokenAmount, _i, _pool, _yield$_pool$getInput;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.TradeType.EXACT_INPUT)) {\n              _context3.next = 17;\n              break;\n            }\n            !amount.currency.equals(route.input) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'INPUT') : 0 : void 0;\n            // Account for trades that wrap/unwrap as a first step\n            tokenAmount = amountWithPathCurrency(amount, route.pools[0]);\n            i = 0;\n          case 4:\n            if (!(i < route.pools.length)) {\n              _context3.next = 13;\n              break;\n            }\n            pool = route.pools[i];\n            _context3.next = 8;\n            return pool.getOutputAmount(tokenAmount);\n          case 8:\n            _yield$pool$getOutput = _context3.sent;\n            tokenAmount = _yield$pool$getOutput[0];\n          case 10:\n            i++;\n            _context3.next = 4;\n            break;\n          case 13:\n            inputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator);\n            outputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromFractionalAmount(route.output, tokenAmount.numerator, tokenAmount.denominator);\n            _context3.next = 31;\n            break;\n          case 17:\n            !amount.currency.equals(route.output) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'OUTPUT') : 0 : void 0;\n            // Account for trades that wrap/unwrap as a last step\n            _tokenAmount = amountWithPathCurrency(amount, route.pools[route.pools.length - 1]);\n            _i = route.pools.length - 1;\n          case 20:\n            if (!(_i >= 0)) {\n              _context3.next = 29;\n              break;\n            }\n            _pool = route.pools[_i];\n            _context3.next = 24;\n            return _pool.getInputAmount(_tokenAmount);\n          case 24:\n            _yield$_pool$getInput = _context3.sent;\n            _tokenAmount = _yield$_pool$getInput[0];\n          case 26:\n            _i--;\n            _context3.next = 20;\n            break;\n          case 29:\n            inputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromFractionalAmount(route.input, _tokenAmount.numerator, _tokenAmount.denominator);\n            outputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator);\n          case 31:\n            return _context3.abrupt(\"return\", new Trade({\n              routes: [{\n                inputAmount: inputAmount,\n                outputAmount: outputAmount,\n                route: route\n              }],\n              tradeType: tradeType\n            }));\n          case 32:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    function fromRoute(_x5, _x6, _x7) {\n      return _fromRoute.apply(this, arguments);\n    }\n    return fromRoute;\n  }()\n  /**\r\n   * Constructs a trade from routes by simulating swaps\r\n   *\r\n   * @template TInput The input currency, either Ether or an ERC-20.\r\n   * @template TOutput The output currency, either Ether or an ERC-20.\r\n   * @template TTradeType The type of the trade, either exact in or exact out.\r\n   * @param routes the routes to swap through and how much of the amount should be routed through each\r\n   * @param tradeType whether the trade is an exact input or exact output swap\r\n   * @returns The trade\r\n   */\n  ;\n  Trade.fromRoutes =\n  /*#__PURE__*/\n  function () {\n    var _fromRoutes = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(routes, tradeType) {\n      var swaps;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return Promise.all(routes.map(/*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(_ref5) {\n                var amount, route, trade;\n                return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                  while (1) switch (_context4.prev = _context4.next) {\n                    case 0:\n                      amount = _ref5.amount, route = _ref5.route;\n                      _context4.next = 3;\n                      return Trade.fromRoute(route, amount, tradeType);\n                    case 3:\n                      trade = _context4.sent;\n                      return _context4.abrupt(\"return\", trade.swaps[0]);\n                    case 5:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }, _callee4);\n              }));\n              return function (_x10) {\n                return _ref6.apply(this, arguments);\n              };\n            }()));\n          case 2:\n            swaps = _context5.sent;\n            return _context5.abrupt(\"return\", new Trade({\n              routes: swaps,\n              tradeType: tradeType\n            }));\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    function fromRoutes(_x8, _x9) {\n      return _fromRoutes.apply(this, arguments);\n    }\n    return fromRoutes;\n  }()\n  /**\r\n   * Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade\r\n   * elsewhere and do not have any tick data\r\n   * @template TInput The input currency, either Ether or an ERC-20\r\n   * @template TOutput The output currency, either Ether or an ERC-20\r\n   * @template TTradeType The type of the trade, either exact in or exact out\r\n   * @param constructorArguments The arguments passed to the trade constructor\r\n   * @returns The unchecked trade\r\n   */\n  ;\n  Trade.createUncheckedTrade = function createUncheckedTrade(constructorArguments) {\n    return new Trade(_extends({}, constructorArguments, {\n      routes: [{\n        inputAmount: constructorArguments.inputAmount,\n        outputAmount: constructorArguments.outputAmount,\n        route: constructorArguments.route\n      }]\n    }));\n  }\n  /**\r\n   * Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade\r\n   * elsewhere and do not have any tick data\r\n   * @template TInput The input currency, either Ether or an ERC-20\r\n   * @template TOutput The output currency, either Ether or an ERC-20\r\n   * @template TTradeType The type of the trade, either exact in or exact out\r\n   * @param constructorArguments The arguments passed to the trade constructor\r\n   * @returns The unchecked trade\r\n   */;\n  Trade.createUncheckedTradeWithMultipleRoutes = function createUncheckedTradeWithMultipleRoutes(constructorArguments) {\n    return new Trade(constructorArguments);\n  }\n  /**\r\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\r\n   * @param slippageTolerance The tolerance of unfavorable slippage from the execution price of this trade\r\n   * @returns The amount out\r\n   */;\n  var _proto = Trade.prototype;\n  _proto.minimumAmountOut = function minimumAmountOut(slippageTolerance, amountOut) {\n    if (amountOut === void 0) {\n      amountOut = this.outputAmount;\n    }\n    !!slippageTolerance.lessThan(ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'SLIPPAGE_TOLERANCE') : 0 : void 0;\n    if (this.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.TradeType.EXACT_OUTPUT) {\n      return amountOut;\n    } else {\n      var slippageAdjustedAmountOut = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.Fraction(ONE).add(slippageTolerance).invert().multiply(amountOut.quotient).quotient;\n      return _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromRawAmount(amountOut.currency, slippageAdjustedAmountOut);\n    }\n  }\n  /**\r\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\r\n   * @param slippageTolerance The tolerance of unfavorable slippage from the execution price of this trade\r\n   * @returns The amount in\r\n   */;\n  _proto.maximumAmountIn = function maximumAmountIn(slippageTolerance, amountIn) {\n    if (amountIn === void 0) {\n      amountIn = this.inputAmount;\n    }\n    !!slippageTolerance.lessThan(ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'SLIPPAGE_TOLERANCE') : 0 : void 0;\n    if (this.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.TradeType.EXACT_INPUT) {\n      return amountIn;\n    } else {\n      var slippageAdjustedAmountIn = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.Fraction(ONE).add(slippageTolerance).multiply(amountIn.quotient).quotient;\n      return _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromRawAmount(amountIn.currency, slippageAdjustedAmountIn);\n    }\n  }\n  /**\r\n   * Return the execution price after accounting for slippage tolerance\r\n   * @param slippageTolerance the allowed tolerated slippage\r\n   * @returns The execution price\r\n   */;\n  _proto.worstExecutionPrice = function worstExecutionPrice(slippageTolerance) {\n    return new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.Price(this.inputAmount.currency, this.outputAmount.currency, this.maximumAmountIn(slippageTolerance).quotient, this.minimumAmountOut(slippageTolerance).quotient);\n  }\n  /**\r\n   * Given a list of pools, and a fixed amount in, returns the top `maxNumResults` trades that go from an input currency\r\n   * amount to an output currency, making at most `maxHops` hops.\r\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\r\n   * the amount in among multiple routes.\r\n   * @param pools the pools to consider in finding the best trade\r\n   * @param nextAmountIn exact amount of input currency to spend\r\n   * @param currencyOut the desired currency out\r\n   * @param maxNumResults maximum number of results to return\r\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pool\r\n   * @param currentPools used in recursion; the current list of pools\r\n   * @param currencyAmountIn used in recursion; the original value of the currencyAmountIn parameter\r\n   * @param bestTrades used in recursion; the current list of best trades\r\n   * @returns The exact in trade\r\n   */;\n  Trade.bestTradeExactIn =\n  /*#__PURE__*/\n  function () {\n    var _bestTradeExactIn = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(pools, currencyAmountIn, currencyOut, _temp,\n    // used in recursion.\n    currentPools, nextAmountIn, bestTrades) {\n      var _ref7, _ref7$maxNumResults, maxNumResults, _ref7$maxHops, maxHops, amountIn, i, pool, amountOut, _yield$pool$getOutput2, poolsExcludingThisPool;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            _ref7 = _temp === void 0 ? {} : _temp, _ref7$maxNumResults = _ref7.maxNumResults, maxNumResults = _ref7$maxNumResults === void 0 ? 3 : _ref7$maxNumResults, _ref7$maxHops = _ref7.maxHops, maxHops = _ref7$maxHops === void 0 ? 3 : _ref7$maxHops;\n            if (currentPools === void 0) {\n              currentPools = [];\n            }\n            if (nextAmountIn === void 0) {\n              nextAmountIn = currencyAmountIn;\n            }\n            if (bestTrades === void 0) {\n              bestTrades = [];\n            }\n            !(pools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'POOLS') : 0 : void 0;\n            !(maxHops > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'MAX_HOPS') : 0 : void 0;\n            !(currencyAmountIn === nextAmountIn || currentPools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'INVALID_RECURSION') : 0 : void 0;\n            amountIn = nextAmountIn;\n            i = 0;\n          case 9:\n            if (!(i < pools.length)) {\n              _context6.next = 45;\n              break;\n            }\n            pool = pools[i]; // pool irrelevant\n            if (!(!pool.currency0.equals(amountIn.currency) && !pool.currency1.equals(amountIn.currency))) {\n              _context6.next = 13;\n              break;\n            }\n            return _context6.abrupt(\"continue\", 42);\n          case 13:\n            amountOut = void 0;\n            _context6.prev = 14;\n            _context6.next = 18;\n            return pool.getOutputAmount(amountIn);\n          case 18:\n            _yield$pool$getOutput2 = _context6.sent;\n            amountOut = _yield$pool$getOutput2[0];\n            _context6.next = 27;\n            break;\n          case 22:\n            _context6.prev = 22;\n            _context6.t0 = _context6[\"catch\"](14);\n            if (!_context6.t0.isInsufficientInputAmountError) {\n              _context6.next = 26;\n              break;\n            }\n            return _context6.abrupt(\"continue\", 42);\n          case 26:\n            throw _context6.t0;\n          case 27:\n            if (!amountOut.currency.equals(currencyOut)) {\n              _context6.next = 38;\n              break;\n            }\n            _context6.t1 = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.sortedInsert;\n            _context6.t2 = bestTrades;\n            _context6.next = 32;\n            return Trade.fromRoute(new Route([].concat(currentPools, [pool]), currencyAmountIn.currency, currencyOut), currencyAmountIn, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.TradeType.EXACT_INPUT);\n          case 32:\n            _context6.t3 = _context6.sent;\n            _context6.t4 = maxNumResults;\n            _context6.t5 = tradeComparator;\n            (0, _context6.t1)(_context6.t2, _context6.t3, _context6.t4, _context6.t5);\n            _context6.next = 42;\n            break;\n          case 38:\n            if (!(maxHops > 1 && pools.length > 1)) {\n              _context6.next = 42;\n              break;\n            }\n            poolsExcludingThisPool = pools.slice(0, i).concat(pools.slice(i + 1, pools.length)); // otherwise, consider all the other paths that lead from this currency as long as we have not exceeded maxHops\n            _context6.next = 42;\n            return Trade.bestTradeExactIn(poolsExcludingThisPool, currencyAmountIn, currencyOut, {\n              maxNumResults: maxNumResults,\n              maxHops: maxHops - 1\n            }, [].concat(currentPools, [pool]), amountOut, bestTrades);\n          case 42:\n            i++;\n            _context6.next = 9;\n            break;\n          case 45:\n            return _context6.abrupt(\"return\", bestTrades);\n          case 46:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[14, 22]]);\n    }));\n    function bestTradeExactIn(_x11, _x12, _x13, _x14, _x15, _x16, _x17) {\n      return _bestTradeExactIn.apply(this, arguments);\n    }\n    return bestTradeExactIn;\n  }()\n  /**\r\n   * similar to the above method but instead targets a fixed output amount\r\n   * given a list of pools, and a fixed amount out, returns the top `maxNumResults` trades that go from an input currency\r\n   * to an output currency amount, making at most `maxHops` hops\r\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\r\n   * the amount in among multiple routes.\r\n   * @param pools the pools to consider in finding the best trade\r\n   * @param currencyIn the currency to spend\r\n   * @param currencyAmountOut the desired currency amount out\r\n   * @param nextAmountOut the exact amount of currency out\r\n   * @param maxNumResults maximum number of results to return\r\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pool\r\n   * @param currentPools used in recursion; the current list of pools\r\n   * @param bestTrades used in recursion; the current list of best trades\r\n   * @returns The exact out trade\r\n   */\n  ;\n  Trade.bestTradeExactOut =\n  /*#__PURE__*/\n  function () {\n    var _bestTradeExactOut = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(pools, currencyIn, currencyAmountOut, _temp2,\n    // used in recursion.\n    currentPools, nextAmountOut, bestTrades) {\n      var _ref8, _ref8$maxNumResults, maxNumResults, _ref8$maxHops, maxHops, amountOut, i, pool, amountIn, _yield$pool$getInputA, poolsExcludingThisPool;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            _ref8 = _temp2 === void 0 ? {} : _temp2, _ref8$maxNumResults = _ref8.maxNumResults, maxNumResults = _ref8$maxNumResults === void 0 ? 3 : _ref8$maxNumResults, _ref8$maxHops = _ref8.maxHops, maxHops = _ref8$maxHops === void 0 ? 3 : _ref8$maxHops;\n            if (currentPools === void 0) {\n              currentPools = [];\n            }\n            if (nextAmountOut === void 0) {\n              nextAmountOut = currencyAmountOut;\n            }\n            if (bestTrades === void 0) {\n              bestTrades = [];\n            }\n            !(pools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'POOLS') : 0 : void 0;\n            !(maxHops > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'MAX_HOPS') : 0 : void 0;\n            !(currencyAmountOut === nextAmountOut || currentPools.length > 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'INVALID_RECURSION') : 0 : void 0;\n            amountOut = nextAmountOut;\n            i = 0;\n          case 9:\n            if (!(i < pools.length)) {\n              _context7.next = 45;\n              break;\n            }\n            pool = pools[i]; // pool irrelevant\n            if (!(!pool.currency0.equals(amountOut.currency) && !pool.currency1.equals(amountOut.currency))) {\n              _context7.next = 13;\n              break;\n            }\n            return _context7.abrupt(\"continue\", 42);\n          case 13:\n            amountIn = void 0;\n            _context7.prev = 14;\n            _context7.next = 18;\n            return pool.getInputAmount(amountOut);\n          case 18:\n            _yield$pool$getInputA = _context7.sent;\n            amountIn = _yield$pool$getInputA[0];\n            _context7.next = 27;\n            break;\n          case 22:\n            _context7.prev = 22;\n            _context7.t0 = _context7[\"catch\"](14);\n            if (!_context7.t0.isInsufficientReservesError) {\n              _context7.next = 26;\n              break;\n            }\n            return _context7.abrupt(\"continue\", 42);\n          case 26:\n            throw _context7.t0;\n          case 27:\n            if (!amountIn.currency.equals(currencyIn)) {\n              _context7.next = 38;\n              break;\n            }\n            _context7.t1 = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.sortedInsert;\n            _context7.t2 = bestTrades;\n            _context7.next = 32;\n            return Trade.fromRoute(new Route([pool].concat(currentPools), currencyIn, currencyAmountOut.currency), currencyAmountOut, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.TradeType.EXACT_OUTPUT);\n          case 32:\n            _context7.t3 = _context7.sent;\n            _context7.t4 = maxNumResults;\n            _context7.t5 = tradeComparator;\n            (0, _context7.t1)(_context7.t2, _context7.t3, _context7.t4, _context7.t5);\n            _context7.next = 42;\n            break;\n          case 38:\n            if (!(maxHops > 1 && pools.length > 1)) {\n              _context7.next = 42;\n              break;\n            }\n            poolsExcludingThisPool = pools.slice(0, i).concat(pools.slice(i + 1, pools.length)); // otherwise, consider all the other paths that arrive at this currency as long as we have not exceeded maxHops\n            _context7.next = 42;\n            return Trade.bestTradeExactOut(poolsExcludingThisPool, currencyIn, currencyAmountOut, {\n              maxNumResults: maxNumResults,\n              maxHops: maxHops - 1\n            }, [pool].concat(currentPools), amountIn, bestTrades);\n          case 42:\n            i++;\n            _context7.next = 9;\n            break;\n          case 45:\n            return _context7.abrupt(\"return\", bestTrades);\n          case 46:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7, null, [[14, 22]]);\n    }));\n    function bestTradeExactOut(_x18, _x19, _x20, _x21, _x22, _x23, _x24) {\n      return _bestTradeExactOut.apply(this, arguments);\n    }\n    return bestTradeExactOut;\n  }();\n  return _createClass(Trade, [{\n    key: \"route\",\n    get: function get() {\n      !(this.swaps.length === 1) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'MULTIPLE_ROUTES') : 0 : void 0;\n      return this.swaps[0].route;\n    }\n    /**\r\n     * The input amount for the trade assuming no slippage.\r\n     */\n  }, {\n    key: \"inputAmount\",\n    get: function get() {\n      if (this._inputAmount) {\n        return this._inputAmount;\n      }\n      var inputCurrency = this.swaps[0].inputAmount.currency;\n      var totalInputFromRoutes = this.swaps.map(function (_ref9) {\n        var inputAmount = _ref9.inputAmount;\n        return inputAmount;\n      }).reduce(function (total, cur) {\n        return total.add(cur);\n      }, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromRawAmount(inputCurrency, 0));\n      this._inputAmount = totalInputFromRoutes;\n      return this._inputAmount;\n    }\n    /**\r\n     * The output amount for the trade assuming no slippage.\r\n     */\n  }, {\n    key: \"outputAmount\",\n    get: function get() {\n      if (this._outputAmount) {\n        return this._outputAmount;\n      }\n      var outputCurrency = this.swaps[0].outputAmount.currency;\n      var totalOutputFromRoutes = this.swaps.map(function (_ref10) {\n        var outputAmount = _ref10.outputAmount;\n        return outputAmount;\n      }).reduce(function (total, cur) {\n        return total.add(cur);\n      }, _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromRawAmount(outputCurrency, 0));\n      this._outputAmount = totalOutputFromRoutes;\n      return this._outputAmount;\n    }\n    /**\r\n     * The price expressed in terms of output amount/input amount.\r\n     */\n  }, {\n    key: \"executionPrice\",\n    get: function get() {\n      var _this$_executionPrice;\n      return (_this$_executionPrice = this._executionPrice) != null ? _this$_executionPrice : this._executionPrice = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.Price(this.inputAmount.currency, this.outputAmount.currency, this.inputAmount.quotient, this.outputAmount.quotient);\n    }\n    /**\r\n     * Returns the percent difference between the route's mid price and the price impact\r\n     */\n  }, {\n    key: \"priceImpact\",\n    get: function get() {\n      if (this._priceImpact) {\n        return this._priceImpact;\n      }\n      var spotOutputAmount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromRawAmount(this.outputAmount.currency, 0);\n      for (var _iterator3 = _createForOfIteratorHelperLoose(this.swaps), _step3; !(_step3 = _iterator3()).done;) {\n        var _step3$value = _step3.value,\n          route = _step3$value.route,\n          inputAmount = _step3$value.inputAmount;\n        var midPrice = route.midPrice;\n        spotOutputAmount = spotOutputAmount.add(midPrice.quote(inputAmount));\n      }\n      var priceImpact = spotOutputAmount.subtract(this.outputAmount).divide(spotOutputAmount);\n      this._priceImpact = new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.Percent(priceImpact.numerator, priceImpact.denominator);\n      return this._priceImpact;\n    }\n  }]);\n}();\n\n/**\r\n * This library is the almost the same as v3-sdk priceTickConversion except\r\n * that it accepts a Currency type instead of a Token type,\r\n * and thus uses some helper functions defined for the Currency type over the Token type.\r\n */\n/**\r\n * Returns a price object corresponding to the input tick and the base/quote token\r\n * Inputs must be tokens because the address order is used to interpret the price represented by the tick\r\n * @param baseToken the base token of the price\r\n * @param quoteToken the quote token of the price\r\n * @param tick the tick for which to return the price\r\n */\nfunction tickToPrice(baseCurrency, quoteCurrency, tick) {\n  var sqrtRatioX96 = _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(tick);\n  var ratioX192 = jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multiply(sqrtRatioX96, sqrtRatioX96);\n  return sortsBefore(baseCurrency, quoteCurrency) ? new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.Price(baseCurrency, quoteCurrency, Q192, ratioX192) : new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.Price(baseCurrency, quoteCurrency, ratioX192, Q192);\n}\n/**\r\n * Returns the first tick for which the given price is greater than or equal to the tick price\r\n * @param price for which to return the closest tick that represents a price less than or equal to the input price,\r\n * i.e. the price of the returned tick is less than or equal to the input price\r\n */\nfunction priceToClosestTick(price) {\n  var sorted = sortsBefore(price.baseCurrency, price.quoteCurrency);\n  var sqrtRatioX96 = sorted ? (0,_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.encodeSqrtRatioX96)(price.numerator, price.denominator) : (0,_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.encodeSqrtRatioX96)(price.denominator, price.numerator);\n  var tick = _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getTickAtSqrtRatio(sqrtRatioX96);\n  var nextTickPrice = tickToPrice(price.baseCurrency, price.quoteCurrency, tick + 1);\n  if (sorted) {\n    if (!price.lessThan(nextTickPrice)) {\n      tick++;\n    }\n  } else {\n    if (!price.greaterThan(nextTickPrice)) {\n      tick++;\n    }\n  }\n  return tick;\n}\n\n/**\r\n * Represents a position on a Uniswap V4 Pool\r\n * @dev Similar to the V3 implementation\r\n * - using Currency instead of Token\r\n * - keep in mind that Pool and liquidity must be fetched from the pool manager\r\n */\nvar Position = /*#__PURE__*/function () {\n  /**\r\n   * Constructs a position for a given pool with the given liquidity\r\n   * @param pool For which pool the liquidity is assigned\r\n   * @param liquidity The amount of liquidity that is in the position\r\n   * @param tickLower The lower tick of the position\r\n   * @param tickUpper The upper tick of the position\r\n   */\n  function Position(_ref) {\n    var pool = _ref.pool,\n      liquidity = _ref.liquidity,\n      tickLower = _ref.tickLower,\n      tickUpper = _ref.tickUpper;\n    // cached resuts for the getters\n    this._token0Amount = null;\n    this._token1Amount = null;\n    this._mintAmounts = null;\n    !(tickLower < tickUpper) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'TICK_ORDER') : 0 : void 0;\n    !(tickLower >= _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.MIN_TICK && tickLower % pool.tickSpacing === 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'TICK_LOWER') : 0 : void 0;\n    !(tickUpper <= _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.MAX_TICK && tickUpper % pool.tickSpacing === 0) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'TICK_UPPER') : 0 : void 0;\n    this.pool = pool;\n    this.tickLower = tickLower;\n    this.tickUpper = tickUpper;\n    this.liquidity = jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(liquidity);\n  }\n  /**\r\n   * Returns the price of token0 at the lower tick\r\n   */\n  var _proto = Position.prototype;\n  /**\r\n   * Returns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentage\r\n   * @param slippageTolerance The amount by which the price can 'slip' before the transaction will revert\r\n   * @returns The sqrt ratios after slippage\r\n   */\n  _proto.ratiosAfterSlippage = function ratiosAfterSlippage(slippageTolerance) {\n    var priceLower = this.pool.token0Price.asFraction.multiply(new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.Percent(1).subtract(slippageTolerance));\n    var priceUpper = this.pool.token0Price.asFraction.multiply(slippageTolerance.add(1));\n    var sqrtRatioX96Lower = (0,_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.encodeSqrtRatioX96)(priceLower.numerator, priceLower.denominator);\n    if (jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].lessThanOrEqual(sqrtRatioX96Lower, _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.MIN_SQRT_RATIO)) {\n      sqrtRatioX96Lower = jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].add(_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.MIN_SQRT_RATIO, jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(1));\n    }\n    var sqrtRatioX96Upper = (0,_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.encodeSqrtRatioX96)(priceUpper.numerator, priceUpper.denominator);\n    if (jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].greaterThanOrEqual(sqrtRatioX96Upper, _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.MAX_SQRT_RATIO)) {\n      sqrtRatioX96Upper = jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].subtract(_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.MAX_SQRT_RATIO, jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(1));\n    }\n    return {\n      sqrtRatioX96Lower: sqrtRatioX96Lower,\n      sqrtRatioX96Upper: sqrtRatioX96Upper\n    };\n  }\n  /**\r\n   * Returns the maximum amount of token0 and token1 that must be sent in order to safely mint the amount of liquidity held by the position\r\n   * with the given slippage tolerance\r\n   * @param slippageTolerance Tolerance of unfavorable slippage from the current price\r\n   * @returns The amounts, with slippage\r\n   * @dev In v4, minting and increasing is protected by maximum amounts of token0 and token1.\r\n   */;\n  _proto.mintAmountsWithSlippage = function mintAmountsWithSlippage(slippageTolerance) {\n    // get lower/upper prices\n    // these represent the lowest and highest prices that the pool is allowed to \"slip\" to\n    var _this$ratiosAfterSlip = this.ratiosAfterSlippage(slippageTolerance),\n      sqrtRatioX96Upper = _this$ratiosAfterSlip.sqrtRatioX96Upper,\n      sqrtRatioX96Lower = _this$ratiosAfterSlip.sqrtRatioX96Lower;\n    // construct counterfactual pools from the lower bounded price and the upper bounded price\n    var poolLower = new Pool(this.pool.token0, this.pool.token1, this.pool.fee, this.pool.tickSpacing, this.pool.hooks, sqrtRatioX96Lower, 0 /* liquidity doesn't matter */, _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getTickAtSqrtRatio(sqrtRatioX96Lower));\n    var poolUpper = new Pool(this.pool.token0, this.pool.token1, this.pool.fee, this.pool.tickSpacing, this.pool.hooks, sqrtRatioX96Upper, 0 /* liquidity doesn't matter */, _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getTickAtSqrtRatio(sqrtRatioX96Upper));\n    // Note: Slippage derivation in v4 is different from v3.\n    // When creating a position (minting) or adding to a position (increasing) slippage is bounded by the MAXIMUM amount in in token0 and token1.\n    // The largest amount of token1 will happen when the price slips up, so we use the poolUpper to get amount1.\n    // The largest amount of token0 will happen when the price slips down, so we use the poolLower to get amount0.\n    // Ie...We want the larger amounts, which occurs at the upper price for amount1...\n    var amount1 = new Position({\n      pool: poolUpper,\n      liquidity: this.liquidity,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }).mintAmounts.amount1;\n    // ...and the lower for amount0\n    var amount0 = new Position({\n      pool: poolLower,\n      liquidity: this.liquidity,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }).mintAmounts.amount0;\n    return {\n      amount0: amount0,\n      amount1: amount1\n    };\n  }\n  /**\r\n   * Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the\r\n   * position with the given slippage tolerance\r\n   * @param slippageTolerance tolerance of unfavorable slippage from the current price\r\n   * @returns The amounts, with slippage\r\n   */;\n  _proto.burnAmountsWithSlippage = function burnAmountsWithSlippage(slippageTolerance) {\n    // get lower/upper prices\n    var _this$ratiosAfterSlip2 = this.ratiosAfterSlippage(slippageTolerance),\n      sqrtRatioX96Upper = _this$ratiosAfterSlip2.sqrtRatioX96Upper,\n      sqrtRatioX96Lower = _this$ratiosAfterSlip2.sqrtRatioX96Lower;\n    // construct counterfactual pools\n    var poolLower = new Pool(this.pool.currency0, this.pool.currency1, this.pool.fee, this.pool.tickSpacing, this.pool.hooks, sqrtRatioX96Lower, 0 /* liquidity doesn't matter */, _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getTickAtSqrtRatio(sqrtRatioX96Lower));\n    var poolUpper = new Pool(this.pool.currency0, this.pool.currency1, this.pool.fee, this.pool.tickSpacing, this.pool.hooks, sqrtRatioX96Upper, 0 /* liquidity doesn't matter */, _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getTickAtSqrtRatio(sqrtRatioX96Upper));\n    // we want the smaller amounts...\n    // ...which occurs at the upper price for amount0...\n    var amount0 = new Position({\n      pool: poolUpper,\n      liquidity: this.liquidity,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }).amount0;\n    // ...and the lower for amount1\n    var amount1 = new Position({\n      pool: poolLower,\n      liquidity: this.liquidity,\n      tickLower: this.tickLower,\n      tickUpper: this.tickUpper\n    }).amount1;\n    return {\n      amount0: amount0.quotient,\n      amount1: amount1.quotient\n    };\n  }\n  /**\r\n   * Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at\r\n   * the current price for the pool\r\n   */;\n  /**\r\n   * Returns the AllowanceTransferPermitBatch for adding liquidity to a position\r\n   * @param slippageTolerance The amount by which the price can 'slip' before the transaction will revert\r\n   * @param spender The spender of the permit (should usually be the PositionManager)\r\n   * @param nonce A valid permit2 nonce\r\n   * @param deadline The deadline for the permit\r\n   */\n  _proto.permitBatchData = function permitBatchData(slippageTolerance, spender, nonce, deadline) {\n    var _this$mintAmountsWith = this.mintAmountsWithSlippage(slippageTolerance),\n      amount0 = _this$mintAmountsWith.amount0,\n      amount1 = _this$mintAmountsWith.amount1;\n    return {\n      details: [{\n        token: this.pool.currency0.wrapped.address,\n        amount: amount0,\n        expiration: deadline,\n        nonce: nonce\n      }, {\n        token: this.pool.currency1.wrapped.address,\n        amount: amount1,\n        expiration: deadline,\n        nonce: nonce\n      }],\n      spender: spender,\n      sigDeadline: deadline\n    };\n  }\n  /**\r\n   * Computes the maximum amount of liquidity received for a given amount of token0, token1,\r\n   * and the prices at the tick boundaries.\r\n   * @param pool The pool for which the position should be created\r\n   * @param tickLower The lower tick of the position\r\n   * @param tickUpper The upper tick of the position\r\n   * @param amount0 token0 amountzw\r\n   * @param amount1 token1 amount\r\n   * @param useFullPrecision If false, liquidity will be maximized according to what the router can calculate,\r\n   * not what core can theoretically support\r\n   * @returns The amount of liquidity for the position\r\n   */;\n  Position.fromAmounts = function fromAmounts(_ref2) {\n    var pool = _ref2.pool,\n      tickLower = _ref2.tickLower,\n      tickUpper = _ref2.tickUpper,\n      amount0 = _ref2.amount0,\n      amount1 = _ref2.amount1,\n      useFullPrecision = _ref2.useFullPrecision;\n    var sqrtRatioAX96 = _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(tickLower);\n    var sqrtRatioBX96 = _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(tickUpper);\n    return new Position({\n      pool: pool,\n      tickLower: tickLower,\n      tickUpper: tickUpper,\n      liquidity: (0,_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.maxLiquidityForAmounts)(pool.sqrtRatioX96, sqrtRatioAX96, sqrtRatioBX96, amount0, amount1, useFullPrecision)\n    });\n  }\n  /**\r\n   * Computes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1\r\n   * @param pool The pool for which the position is created\r\n   * @param tickLower The lower tick\r\n   * @param tickUpper The upper tick\r\n   * @param amount0 The desired amount of token0\r\n   * @param useFullPrecision If true, liquidity will be maximized according to what the router can calculate,\r\n   * not what core can theoretically support\r\n   * @returns The position\r\n   */;\n  Position.fromAmount0 = function fromAmount0(_ref3) {\n    var pool = _ref3.pool,\n      tickLower = _ref3.tickLower,\n      tickUpper = _ref3.tickUpper,\n      amount0 = _ref3.amount0,\n      useFullPrecision = _ref3.useFullPrecision;\n    return Position.fromAmounts({\n      pool: pool,\n      tickLower: tickLower,\n      tickUpper: tickUpper,\n      amount0: amount0,\n      amount1: _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.MaxUint256,\n      useFullPrecision: useFullPrecision\n    });\n  }\n  /**\r\n   * Computes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0\r\n   * @param pool The pool for which the position is created\r\n   * @param tickLower The lower tick\r\n   * @param tickUpper The upper tick\r\n   * @param amount1 The desired amount of token1\r\n   * @returns The position\r\n   */;\n  Position.fromAmount1 = function fromAmount1(_ref4) {\n    var pool = _ref4.pool,\n      tickLower = _ref4.tickLower,\n      tickUpper = _ref4.tickUpper,\n      amount1 = _ref4.amount1;\n    // this function always uses full precision,\n    return Position.fromAmounts({\n      pool: pool,\n      tickLower: tickLower,\n      tickUpper: tickUpper,\n      amount0: _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.MaxUint256,\n      amount1: amount1,\n      useFullPrecision: true\n    });\n  };\n  return _createClass(Position, [{\n    key: \"token0PriceLower\",\n    get: function get() {\n      return tickToPrice(this.pool.currency0, this.pool.currency1, this.tickLower);\n    }\n    /**\r\n     * Returns the price of token0 at the upper tick\r\n     */\n  }, {\n    key: \"token0PriceUpper\",\n    get: function get() {\n      return tickToPrice(this.pool.currency0, this.pool.currency1, this.tickUpper);\n    }\n    /**\r\n     * Returns the amount of token0 that this position's liquidity could be burned for at the current pool price\r\n     */\n  }, {\n    key: \"amount0\",\n    get: function get() {\n      if (!this._token0Amount) {\n        if (this.pool.tickCurrent < this.tickLower) {\n          this._token0Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromRawAmount(this.pool.currency0, _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.SqrtPriceMath.getAmount0Delta(_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(this.tickLower), _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, false));\n        } else if (this.pool.tickCurrent < this.tickUpper) {\n          this._token0Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromRawAmount(this.pool.currency0, _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.SqrtPriceMath.getAmount0Delta(this.pool.sqrtRatioX96, _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, false));\n        } else {\n          this._token0Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromRawAmount(this.pool.currency0, ZERO);\n        }\n      }\n      return this._token0Amount;\n    }\n    /**\r\n     * Returns the amount of token1 that this position's liquidity could be burned for at the current pool price\r\n     */\n  }, {\n    key: \"amount1\",\n    get: function get() {\n      if (!this._token1Amount) {\n        if (this.pool.tickCurrent < this.tickLower) {\n          this._token1Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromRawAmount(this.pool.currency1, ZERO);\n        } else if (this.pool.tickCurrent < this.tickUpper) {\n          this._token1Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromRawAmount(this.pool.currency1, _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.SqrtPriceMath.getAmount1Delta(_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(this.tickLower), this.pool.sqrtRatioX96, this.liquidity, false));\n        } else {\n          this._token1Amount = _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.CurrencyAmount.fromRawAmount(this.pool.currency1, _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.SqrtPriceMath.getAmount1Delta(_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(this.tickLower), _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, false));\n        }\n      }\n      return this._token1Amount;\n    }\n  }, {\n    key: \"mintAmounts\",\n    get: function get() {\n      if (this._mintAmounts === null) {\n        if (this.pool.tickCurrent < this.tickLower) {\n          return {\n            amount0: _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.SqrtPriceMath.getAmount0Delta(_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(this.tickLower), _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, true),\n            amount1: ZERO\n          };\n        } else if (this.pool.tickCurrent < this.tickUpper) {\n          return {\n            amount0: _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.SqrtPriceMath.getAmount0Delta(this.pool.sqrtRatioX96, _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, true),\n            amount1: _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.SqrtPriceMath.getAmount1Delta(_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(this.tickLower), this.pool.sqrtRatioX96, this.liquidity, true)\n          };\n        } else {\n          return {\n            amount0: ZERO,\n            amount1: _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.SqrtPriceMath.getAmount1Delta(_uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(this.tickLower), _uniswap_v3_sdk__WEBPACK_IMPORTED_MODULE_7__.TickMath.getSqrtRatioAtTick(this.tickUpper), this.liquidity, true)\n          };\n        }\n      }\n      return this._mintAmounts;\n    }\n  }]);\n}();\n\nvar encodeRouteToPath = function encodeRouteToPath(route, exactOutput) {\n  // create a deep copy of pools so that we don't tamper with pool array on route\n  var pools = route.pools.map(function (p) {\n    return p;\n  });\n  if (exactOutput) pools = pools.reverse();\n  var startingCurrency = exactOutput ? route.pathOutput : route.pathInput;\n  var pathKeys = [];\n  for (var _iterator = _createForOfIteratorHelperLoose(pools), _step; !(_step = _iterator()).done;) {\n    var pool = _step.value;\n    var nextCurrency = startingCurrency.equals(pool.currency0) ? pool.currency1 : pool.currency0;\n    pathKeys.push({\n      intermediateCurrency: nextCurrency.isNative ? ADDRESS_ZERO : nextCurrency.address,\n      fee: pool.fee,\n      tickSpacing: pool.tickSpacing,\n      hooks: pool.hooks,\n      hookData: '0x'\n    });\n    startingCurrency = nextCurrency;\n  }\n  return exactOutput ? pathKeys.reverse() : pathKeys;\n};\n\nvar _V4_BASE_ACTIONS_ABI_;\n/**\r\n * Actions\r\n * @description Constants that define what action to perform\r\n * Not all actions are supported yet.\r\n * @enum {number}\r\n */\nvar Actions;\n(function (Actions) {\n  // pool actions\n  // liquidity actions\n  Actions[Actions[\"INCREASE_LIQUIDITY\"] = 0] = \"INCREASE_LIQUIDITY\";\n  Actions[Actions[\"DECREASE_LIQUIDITY\"] = 1] = \"DECREASE_LIQUIDITY\";\n  Actions[Actions[\"MINT_POSITION\"] = 2] = \"MINT_POSITION\";\n  Actions[Actions[\"BURN_POSITION\"] = 3] = \"BURN_POSITION\";\n  // for fee on transfer tokens\n  // INCREASE_LIQUIDITY_FROM_DELTAS = 0x04,\n  // MINT_POSITION_FROM_DELTAS = 0x05,\n  // swapping\n  Actions[Actions[\"SWAP_EXACT_IN_SINGLE\"] = 6] = \"SWAP_EXACT_IN_SINGLE\";\n  Actions[Actions[\"SWAP_EXACT_IN\"] = 7] = \"SWAP_EXACT_IN\";\n  Actions[Actions[\"SWAP_EXACT_OUT_SINGLE\"] = 8] = \"SWAP_EXACT_OUT_SINGLE\";\n  Actions[Actions[\"SWAP_EXACT_OUT\"] = 9] = \"SWAP_EXACT_OUT\";\n  // closing deltas on the pool manager\n  // settling\n  Actions[Actions[\"SETTLE\"] = 11] = \"SETTLE\";\n  Actions[Actions[\"SETTLE_ALL\"] = 12] = \"SETTLE_ALL\";\n  Actions[Actions[\"SETTLE_PAIR\"] = 13] = \"SETTLE_PAIR\";\n  // taking\n  Actions[Actions[\"TAKE\"] = 14] = \"TAKE\";\n  Actions[Actions[\"TAKE_ALL\"] = 15] = \"TAKE_ALL\";\n  Actions[Actions[\"TAKE_PORTION\"] = 16] = \"TAKE_PORTION\";\n  Actions[Actions[\"TAKE_PAIR\"] = 17] = \"TAKE_PAIR\";\n  Actions[Actions[\"CLOSE_CURRENCY\"] = 18] = \"CLOSE_CURRENCY\";\n  // CLEAR_OR_TAKE = 0x13,\n  Actions[Actions[\"SWEEP\"] = 20] = \"SWEEP\";\n  // for wrapping/unwrapping native\n  // WRAP = 0x15,\n  Actions[Actions[\"UNWRAP\"] = 22] = \"UNWRAP\";\n})(Actions || (Actions = {}));\nvar Subparser;\n(function (Subparser) {\n  Subparser[Subparser[\"V4SwapExactInSingle\"] = 0] = \"V4SwapExactInSingle\";\n  Subparser[Subparser[\"V4SwapExactIn\"] = 1] = \"V4SwapExactIn\";\n  Subparser[Subparser[\"V4SwapExactOutSingle\"] = 2] = \"V4SwapExactOutSingle\";\n  Subparser[Subparser[\"V4SwapExactOut\"] = 3] = \"V4SwapExactOut\";\n  Subparser[Subparser[\"PoolKey\"] = 4] = \"PoolKey\";\n})(Subparser || (Subparser = {}));\nvar POOL_KEY_STRUCT = '(address currency0,address currency1,uint24 fee,int24 tickSpacing,address hooks)';\nvar PATH_KEY_STRUCT = '(address intermediateCurrency,uint256 fee,int24 tickSpacing,address hooks,bytes hookData)';\nvar SWAP_EXACT_IN_SINGLE_STRUCT = '(' + POOL_KEY_STRUCT + ' poolKey,bool zeroForOne,uint128 amountIn,uint128 amountOutMinimum,bytes hookData)';\nvar SWAP_EXACT_IN_STRUCT = '(address currencyIn,' + PATH_KEY_STRUCT + '[] path,uint128 amountIn,uint128 amountOutMinimum)';\nvar SWAP_EXACT_OUT_SINGLE_STRUCT = '(' + POOL_KEY_STRUCT + ' poolKey,bool zeroForOne,uint128 amountOut,uint128 amountInMaximum,bytes hookData)';\nvar SWAP_EXACT_OUT_STRUCT = '(address currencyOut,' + PATH_KEY_STRUCT + '[] path,uint128 amountOut,uint128 amountInMaximum)';\nvar V4_BASE_ACTIONS_ABI_DEFINITION = (_V4_BASE_ACTIONS_ABI_ = {}, _V4_BASE_ACTIONS_ABI_[Actions.INCREASE_LIQUIDITY] = [{\n  name: 'tokenId',\n  type: 'uint256'\n}, {\n  name: 'liquidity',\n  type: 'uint256'\n}, {\n  name: 'amount0Max',\n  type: 'uint128'\n}, {\n  name: 'amount1Max',\n  type: 'uint128'\n}, {\n  name: 'hookData',\n  type: 'bytes'\n}], _V4_BASE_ACTIONS_ABI_[Actions.DECREASE_LIQUIDITY] = [{\n  name: 'tokenId',\n  type: 'uint256'\n}, {\n  name: 'liquidity',\n  type: 'uint256'\n}, {\n  name: 'amount0Min',\n  type: 'uint128'\n}, {\n  name: 'amount1Min',\n  type: 'uint128'\n}, {\n  name: 'hookData',\n  type: 'bytes'\n}], _V4_BASE_ACTIONS_ABI_[Actions.MINT_POSITION] = [{\n  name: 'poolKey',\n  type: POOL_KEY_STRUCT,\n  subparser: Subparser.PoolKey\n}, {\n  name: 'tickLower',\n  type: 'int24'\n}, {\n  name: 'tickUpper',\n  type: 'int24'\n}, {\n  name: 'liquidity',\n  type: 'uint256'\n}, {\n  name: 'amount0Max',\n  type: 'uint128'\n}, {\n  name: 'amount1Max',\n  type: 'uint128'\n}, {\n  name: 'owner',\n  type: 'address'\n}, {\n  name: 'hookData',\n  type: 'bytes'\n}], _V4_BASE_ACTIONS_ABI_[Actions.BURN_POSITION] = [{\n  name: 'tokenId',\n  type: 'uint256'\n}, {\n  name: 'amount0Min',\n  type: 'uint128'\n}, {\n  name: 'amount1Min',\n  type: 'uint128'\n}, {\n  name: 'hookData',\n  type: 'bytes'\n}], _V4_BASE_ACTIONS_ABI_[Actions.SWAP_EXACT_IN_SINGLE] = [{\n  name: 'swap',\n  type: SWAP_EXACT_IN_SINGLE_STRUCT,\n  subparser: Subparser.V4SwapExactInSingle\n}], _V4_BASE_ACTIONS_ABI_[Actions.SWAP_EXACT_IN] = [{\n  name: 'swap',\n  type: SWAP_EXACT_IN_STRUCT,\n  subparser: Subparser.V4SwapExactIn\n}], _V4_BASE_ACTIONS_ABI_[Actions.SWAP_EXACT_OUT_SINGLE] = [{\n  name: 'swap',\n  type: SWAP_EXACT_OUT_SINGLE_STRUCT,\n  subparser: Subparser.V4SwapExactOutSingle\n}], _V4_BASE_ACTIONS_ABI_[Actions.SWAP_EXACT_OUT] = [{\n  name: 'swap',\n  type: SWAP_EXACT_OUT_STRUCT,\n  subparser: Subparser.V4SwapExactOut\n}], _V4_BASE_ACTIONS_ABI_[Actions.SETTLE] = [{\n  name: 'currency',\n  type: 'address'\n}, {\n  name: 'amount',\n  type: 'uint256'\n}, {\n  name: 'payerIsUser',\n  type: 'bool'\n}], _V4_BASE_ACTIONS_ABI_[Actions.SETTLE_ALL] = [{\n  name: 'currency',\n  type: 'address'\n}, {\n  name: 'maxAmount',\n  type: 'uint256'\n}], _V4_BASE_ACTIONS_ABI_[Actions.SETTLE_PAIR] = [{\n  name: 'currency0',\n  type: 'address'\n}, {\n  name: 'currency1',\n  type: 'address'\n}], _V4_BASE_ACTIONS_ABI_[Actions.TAKE] = [{\n  name: 'currency',\n  type: 'address'\n}, {\n  name: 'recipient',\n  type: 'address'\n}, {\n  name: 'amount',\n  type: 'uint256'\n}], _V4_BASE_ACTIONS_ABI_[Actions.TAKE_ALL] = [{\n  name: 'currency',\n  type: 'address'\n}, {\n  name: 'minAmount',\n  type: 'uint256'\n}], _V4_BASE_ACTIONS_ABI_[Actions.TAKE_PORTION] = [{\n  name: 'currency',\n  type: 'address'\n}, {\n  name: 'recipient',\n  type: 'address'\n}, {\n  name: 'bips',\n  type: 'uint256'\n}], _V4_BASE_ACTIONS_ABI_[Actions.TAKE_PAIR] = [{\n  name: 'currency0',\n  type: 'address'\n}, {\n  name: 'currency1',\n  type: 'address'\n}, {\n  name: 'recipient',\n  type: 'address'\n}], _V4_BASE_ACTIONS_ABI_[Actions.CLOSE_CURRENCY] = [{\n  name: 'currency',\n  type: 'address'\n}], _V4_BASE_ACTIONS_ABI_[Actions.SWEEP] = [{\n  name: 'currency',\n  type: 'address'\n}, {\n  name: 'recipient',\n  type: 'address'\n}], _V4_BASE_ACTIONS_ABI_[Actions.UNWRAP] = [{\n  name: 'amount',\n  type: 'uint256'\n}], _V4_BASE_ACTIONS_ABI_);\nvar FULL_DELTA_AMOUNT = 0;\nvar V4Planner = /*#__PURE__*/function () {\n  function V4Planner() {\n    this.actions = EMPTY_BYTES;\n    this.params = [];\n  }\n  var _proto = V4Planner.prototype;\n  _proto.addAction = function addAction(type, parameters) {\n    var command = createAction(type, parameters);\n    this.params.push(command.encodedInput);\n    this.actions = this.actions.concat(command.action.toString(16).padStart(2, '0'));\n    return this;\n  };\n  _proto.addTrade = function addTrade(trade, slippageTolerance) {\n    var exactOutput = trade.tradeType === _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.TradeType.EXACT_OUTPUT;\n    // exactInput we sometimes perform aggregated slippage checks, but not with exactOutput\n    if (exactOutput) !!!slippageTolerance ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'ExactOut requires slippageTolerance') : 0 : void 0;\n    !(trade.swaps.length === 1) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, 'Only accepts Trades with 1 swap (must break swaps into individual trades)') : 0 : void 0;\n    var actionType = exactOutput ? Actions.SWAP_EXACT_OUT : Actions.SWAP_EXACT_IN;\n    var currencyIn = currencyAddress(trade.route.pathInput);\n    var currencyOut = currencyAddress(trade.route.pathOutput);\n    this.addAction(actionType, [exactOutput ? {\n      currencyOut: currencyOut,\n      path: encodeRouteToPath(trade.route, exactOutput),\n      amountInMaximum: trade.maximumAmountIn(slippageTolerance != null ? slippageTolerance : new _uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.Percent(0)).quotient.toString(),\n      amountOut: trade.outputAmount.quotient.toString()\n    } : {\n      currencyIn: currencyIn,\n      path: encodeRouteToPath(trade.route, exactOutput),\n      amountIn: trade.inputAmount.quotient.toString(),\n      amountOutMinimum: slippageTolerance ? trade.minimumAmountOut(slippageTolerance).quotient.toString() : 0\n    }]);\n    return this;\n  };\n  _proto.addSettle = function addSettle(currency, payerIsUser, amount) {\n    this.addAction(Actions.SETTLE, [currencyAddress(currency), amount != null ? amount : FULL_DELTA_AMOUNT, payerIsUser]);\n    return this;\n  };\n  _proto.addTake = function addTake(currency, recipient, amount) {\n    var takeAmount = amount != null ? amount : FULL_DELTA_AMOUNT;\n    this.addAction(Actions.TAKE, [currencyAddress(currency), recipient, takeAmount]);\n    return this;\n  };\n  _proto.addUnwrap = function addUnwrap(amount) {\n    this.addAction(Actions.UNWRAP, [amount]);\n    return this;\n  };\n  _proto.finalize = function finalize() {\n    return ethers_lib_utils__WEBPACK_IMPORTED_MODULE_4__.defaultAbiCoder.encode(['bytes', 'bytes[]'], [this.actions, this.params]);\n  };\n  return V4Planner;\n}();\nfunction currencyAddress(currency) {\n  return currency.isNative ? ADDRESS_ZERO : currency.wrapped.address;\n}\nfunction createAction(action, parameters) {\n  var encodedInput = ethers_lib_utils__WEBPACK_IMPORTED_MODULE_4__.defaultAbiCoder.encode(V4_BASE_ACTIONS_ABI_DEFINITION[action].map(function (v) {\n    return v.type;\n  }), parameters);\n  return {\n    action: action,\n    encodedInput: encodedInput\n  };\n}\n\n// Uniswap v4 supports native pools. Those currencies are represented by the zero address.\n// TODO: Figure out if this is how we should be handling weird edge case tokens like CELO/Polygon/etc..\n// Does interface treat those like ERC20 tokens or NATIVE tokens?\nfunction toAddress(currency) {\n  if (currency.isNative) return ADDRESS_ZERO;else return currency.wrapped.address;\n}\n\n// A wrapper around V4Planner to help handle PositionManager actions\nvar V4PositionPlanner = /*#__PURE__*/function (_V4Planner) {\n  function V4PositionPlanner() {\n    return _V4Planner.apply(this, arguments) || this;\n  }\n  _inheritsLoose(V4PositionPlanner, _V4Planner);\n  var _proto = V4PositionPlanner.prototype;\n  // MINT_POSITION\n  _proto.addMint = function addMint(pool, tickLower, tickUpper, liquidity, amount0Max, amount1Max, owner, hookData) {\n    if (hookData === void 0) {\n      hookData = EMPTY_BYTES;\n    }\n    var inputs = [Pool.getPoolKey(pool.currency0, pool.currency1, pool.fee, pool.tickSpacing, pool.hooks), tickLower, tickUpper, liquidity.toString(), amount0Max.toString(), amount1Max.toString(), owner, hookData];\n    this.addAction(Actions.MINT_POSITION, inputs);\n  }\n  // INCREASE_LIQUIDITY\n  ;\n  _proto.addIncrease = function addIncrease(tokenId, liquidity, amount0Max, amount1Max, hookData) {\n    if (hookData === void 0) {\n      hookData = EMPTY_BYTES;\n    }\n    var inputs = [tokenId.toString(), liquidity.toString(), amount0Max.toString(), amount1Max.toString(), hookData];\n    this.addAction(Actions.INCREASE_LIQUIDITY, inputs);\n  }\n  // DECREASE_LIQUIDITY\n  ;\n  _proto.addDecrease = function addDecrease(tokenId, liquidity, amount0Min, amount1Min, hookData) {\n    if (hookData === void 0) {\n      hookData = EMPTY_BYTES;\n    }\n    var inputs = [tokenId.toString(), liquidity.toString(), amount0Min.toString(), amount1Min.toString(), hookData];\n    this.addAction(Actions.DECREASE_LIQUIDITY, inputs);\n  }\n  // BURN_POSITION\n  ;\n  _proto.addBurn = function addBurn(tokenId, amount0Min, amount1Min, hookData) {\n    if (hookData === void 0) {\n      hookData = EMPTY_BYTES;\n    }\n    var inputs = [tokenId.toString(), amount0Min.toString(), amount1Min.toString(), hookData];\n    this.addAction(Actions.BURN_POSITION, inputs);\n  }\n  // SETTLE_PAIR\n  ;\n  _proto.addSettlePair = function addSettlePair(currency0, currency1) {\n    var inputs = [toAddress(currency0), toAddress(currency1)];\n    this.addAction(Actions.SETTLE_PAIR, inputs);\n  }\n  // TAKE_PAIR\n  ;\n  _proto.addTakePair = function addTakePair(currency0, currency1, recipient) {\n    var inputs = [toAddress(currency0), toAddress(currency1), recipient];\n    this.addAction(Actions.TAKE_PAIR, inputs);\n  }\n  // SWEEP\n  ;\n  _proto.addSweep = function addSweep(currency, to) {\n    var inputs = [toAddress(currency), to];\n    this.addAction(Actions.SWEEP, inputs);\n  };\n  return V4PositionPlanner;\n}(V4Planner);\n\n/**\r\n * Converts a big int to a hex string\r\n * @param bigintIsh\r\n * @returns The hex encoded calldata\r\n */\nfunction toHex(bigintIsh) {\n  var bigInt = jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BigInt(bigintIsh);\n  var hex = bigInt.toString(16);\n  if (hex.length % 2 !== 0) {\n    hex = \"0\" + hex;\n  }\n  return \"0x\" + hex;\n}\n\n// Parses V4Router actions\nvar V4BaseActionsParser = /*#__PURE__*/function () {\n  function V4BaseActionsParser() {}\n  V4BaseActionsParser.parseCalldata = function parseCalldata(calldata) {\n    var _ethers$utils$default = ethers__WEBPACK_IMPORTED_MODULE_9__.defaultAbiCoder.decode(['bytes', 'bytes[]'], calldata),\n      actions = _ethers$utils$default[0],\n      inputs = _ethers$utils$default[1];\n    var actionTypes = V4BaseActionsParser.getActions(actions);\n    return {\n      actions: actionTypes.map(function (actionType, i) {\n        var abiDef = V4_BASE_ACTIONS_ABI_DEFINITION[actionType];\n        var rawParams = ethers__WEBPACK_IMPORTED_MODULE_9__.defaultAbiCoder.decode(abiDef.map(function (command) {\n          return command.type;\n        }), inputs[i]);\n        var params = rawParams.map(function (param, j) {\n          switch (abiDef[j].subparser) {\n            case Subparser.V4SwapExactInSingle:\n              return {\n                name: abiDef[j].name,\n                value: parseV4ExactInSingle(param)\n              };\n            case Subparser.V4SwapExactIn:\n              return {\n                name: abiDef[j].name,\n                value: parseV4ExactIn(param)\n              };\n            case Subparser.V4SwapExactOutSingle:\n              return {\n                name: abiDef[j].name,\n                value: parseV4ExactOutSingle(param)\n              };\n            case Subparser.V4SwapExactOut:\n              return {\n                name: abiDef[j].name,\n                value: parseV4ExactOut(param)\n              };\n            case Subparser.PoolKey:\n              return {\n                name: abiDef[j].name,\n                value: parsePoolKey(param)\n              };\n            default:\n              return {\n                name: abiDef[j].name,\n                value: param\n              };\n          }\n        });\n        return {\n          actionName: Actions[actionType],\n          actionType: actionType,\n          params: params\n        };\n      })\n    };\n  }\n  // parse command types from bytes string\n  ;\n  V4BaseActionsParser.getActions = function getActions(actions) {\n    var actionTypes = [];\n    for (var i = 2; i < actions.length; i += 2) {\n      var _byte = actions.substring(i, i + 2);\n      actionTypes.push(parseInt(_byte, 16));\n    }\n    return actionTypes;\n  };\n  return V4BaseActionsParser;\n}();\nfunction parsePoolKey(data) {\n  var currency0 = data[0],\n    currency1 = data[1],\n    fee = data[2],\n    tickSpacing = data[3],\n    hooks = data[4];\n  return {\n    currency0: currency0,\n    currency1: currency1,\n    fee: parseInt(fee),\n    tickSpacing: parseInt(tickSpacing),\n    hooks: hooks\n  };\n}\nfunction parsePathKey(data) {\n  var intermediateCurrency = data[0],\n    fee = data[1],\n    tickSpacing = data[2],\n    hooks = data[3],\n    hookData = data[4];\n  return {\n    intermediateCurrency: intermediateCurrency,\n    fee: parseInt(fee),\n    tickSpacing: parseInt(tickSpacing),\n    hooks: hooks,\n    hookData: hookData\n  };\n}\nfunction parseV4ExactInSingle(data) {\n  var poolKey = data[0],\n    zeroForOne = data[1],\n    amountIn = data[2],\n    amountOutMinimum = data[3],\n    hookData = data[4];\n  var currency0 = poolKey[0],\n    currency1 = poolKey[1],\n    fee = poolKey[2],\n    tickSpacing = poolKey[3],\n    hooks = poolKey[4];\n  return {\n    poolKey: {\n      currency0: currency0,\n      currency1: currency1,\n      fee: fee,\n      tickSpacing: tickSpacing,\n      hooks: hooks\n    },\n    zeroForOne: zeroForOne,\n    amountIn: amountIn,\n    amountOutMinimum: amountOutMinimum,\n    hookData: hookData\n  };\n}\nfunction parseV4ExactIn(data) {\n  var currencyIn = data[0],\n    path = data[1],\n    amountIn = data[2],\n    amountOutMinimum = data[3];\n  var paths = path.map(function (pathKey) {\n    return parsePathKey(pathKey);\n  });\n  return {\n    path: paths,\n    currencyIn: currencyIn,\n    amountIn: amountIn,\n    amountOutMinimum: amountOutMinimum\n  };\n}\nfunction parseV4ExactOutSingle(data) {\n  var poolKey = data[0],\n    zeroForOne = data[1],\n    amountOut = data[2],\n    amountInMaximum = data[3],\n    hookData = data[4];\n  var currency0 = poolKey.currency0,\n    currency1 = poolKey.currency1,\n    fee = poolKey.fee,\n    tickSpacing = poolKey.tickSpacing,\n    hooks = poolKey.hooks;\n  return {\n    poolKey: {\n      currency0: currency0,\n      currency1: currency1,\n      fee: fee,\n      tickSpacing: tickSpacing,\n      hooks: hooks\n    },\n    zeroForOne: zeroForOne,\n    amountOut: amountOut,\n    amountInMaximum: amountInMaximum,\n    hookData: hookData\n  };\n}\nfunction parseV4ExactOut(data) {\n  var currencyOut = data[0],\n    path = data[1],\n    amountOut = data[2],\n    amountInMaximum = data[3];\n  var paths = path.map(function (pathKey) {\n    return parsePathKey(pathKey);\n  });\n  return {\n    path: paths,\n    currencyOut: currencyOut,\n    amountOut: amountOut,\n    amountInMaximum: amountInMaximum\n  };\n}\n\n// Shared Action Constants used in the v4 Router and v4 position manager\nvar MSG_SENDER = '0x0000000000000000000000000000000000000001';\n\nvar Multicall = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function Multicall() {}\n  Multicall.encodeMulticall = function encodeMulticall(calldataList) {\n    if (!Array.isArray(calldataList)) {\n      calldataList = [calldataList];\n    }\n    return calldataList.length === 1 ? calldataList[0] : Multicall.INTERFACE.encodeFunctionData('multicall', [calldataList]);\n  };\n  Multicall.decodeMulticall = function decodeMulticall(encodedCalldata) {\n    return Multicall.INTERFACE.decodeFunctionData('multicall', encodedCalldata)[0];\n  };\n  return Multicall;\n}();\nMulticall.INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_10__.Interface(_uniswap_v3_periphery_artifacts_contracts_interfaces_IMulticall_sol_IMulticall_json__WEBPACK_IMPORTED_MODULE_3__.abi);\n\n// TODO: import this from npm\nvar positionManagerAbi = [{\n  type: 'constructor',\n  inputs: [{\n    name: '_poolManager',\n    type: 'address',\n    internalType: 'contract IPoolManager'\n  }, {\n    name: '_permit2',\n    type: 'address',\n    internalType: 'contract IAllowanceTransfer'\n  }, {\n    name: '_unsubscribeGasLimit',\n    type: 'uint256',\n    internalType: 'uint256'\n  }, {\n    name: '_tokenDescriptor',\n    type: 'address',\n    internalType: 'contract IPositionDescriptor'\n  }, {\n    name: '_weth9',\n    type: 'address',\n    internalType: 'contract IWETH9'\n  }],\n  stateMutability: 'nonpayable'\n}, {\n  type: 'receive',\n  stateMutability: 'payable'\n}, {\n  type: 'function',\n  name: 'DOMAIN_SEPARATOR',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'bytes32',\n    internalType: 'bytes32'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'WETH9',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'address',\n    internalType: 'contract IWETH9'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'approve',\n  inputs: [{\n    name: 'spender',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'id',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [],\n  stateMutability: 'nonpayable'\n}, {\n  type: 'function',\n  name: 'balanceOf',\n  inputs: [{\n    name: 'owner',\n    type: 'address',\n    internalType: 'address'\n  }],\n  outputs: [{\n    name: '',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'getApproved',\n  inputs: [{\n    name: '',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'address',\n    internalType: 'address'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'getPoolAndPositionInfo',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [{\n    name: 'poolKey',\n    type: 'tuple',\n    internalType: 'struct PoolKey',\n    components: [{\n      name: 'currency0',\n      type: 'address',\n      internalType: 'Currency'\n    }, {\n      name: 'currency1',\n      type: 'address',\n      internalType: 'Currency'\n    }, {\n      name: 'fee',\n      type: 'uint24',\n      internalType: 'uint24'\n    }, {\n      name: 'tickSpacing',\n      type: 'int24',\n      internalType: 'int24'\n    }, {\n      name: 'hooks',\n      type: 'address',\n      internalType: 'contract IHooks'\n    }]\n  }, {\n    name: 'info',\n    type: 'uint256',\n    internalType: 'PositionInfo'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'getPositionLiquidity',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [{\n    name: 'liquidity',\n    type: 'uint128',\n    internalType: 'uint128'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'initializePool',\n  inputs: [{\n    name: 'key',\n    type: 'tuple',\n    internalType: 'struct PoolKey',\n    components: [{\n      name: 'currency0',\n      type: 'address',\n      internalType: 'Currency'\n    }, {\n      name: 'currency1',\n      type: 'address',\n      internalType: 'Currency'\n    }, {\n      name: 'fee',\n      type: 'uint24',\n      internalType: 'uint24'\n    }, {\n      name: 'tickSpacing',\n      type: 'int24',\n      internalType: 'int24'\n    }, {\n      name: 'hooks',\n      type: 'address',\n      internalType: 'contract IHooks'\n    }]\n  }, {\n    name: 'sqrtPriceX96',\n    type: 'uint160',\n    internalType: 'uint160'\n  }],\n  outputs: [{\n    name: '',\n    type: 'int24',\n    internalType: 'int24'\n  }],\n  stateMutability: 'payable'\n}, {\n  type: 'function',\n  name: 'isApprovedForAll',\n  inputs: [{\n    name: '',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: '',\n    type: 'address',\n    internalType: 'address'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool',\n    internalType: 'bool'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'modifyLiquidities',\n  inputs: [{\n    name: 'unlockData',\n    type: 'bytes',\n    internalType: 'bytes'\n  }, {\n    name: 'deadline',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [],\n  stateMutability: 'payable'\n}, {\n  type: 'function',\n  name: 'modifyLiquiditiesWithoutUnlock',\n  inputs: [{\n    name: 'actions',\n    type: 'bytes',\n    internalType: 'bytes'\n  }, {\n    name: 'params',\n    type: 'bytes[]',\n    internalType: 'bytes[]'\n  }],\n  outputs: [],\n  stateMutability: 'payable'\n}, {\n  type: 'function',\n  name: 'msgSender',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'address',\n    internalType: 'address'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'multicall',\n  inputs: [{\n    name: 'data',\n    type: 'bytes[]',\n    internalType: 'bytes[]'\n  }],\n  outputs: [{\n    name: 'results',\n    type: 'bytes[]',\n    internalType: 'bytes[]'\n  }],\n  stateMutability: 'payable'\n}, {\n  type: 'function',\n  name: 'name',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'string',\n    internalType: 'string'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'nextTokenId',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'nonces',\n  inputs: [{\n    name: 'owner',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'word',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [{\n    name: 'bitmap',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'ownerOf',\n  inputs: [{\n    name: 'id',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [{\n    name: 'owner',\n    type: 'address',\n    internalType: 'address'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'permit',\n  inputs: [{\n    name: 'spender',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'tokenId',\n    type: 'uint256',\n    internalType: 'uint256'\n  }, {\n    name: 'deadline',\n    type: 'uint256',\n    internalType: 'uint256'\n  }, {\n    name: 'nonce',\n    type: 'uint256',\n    internalType: 'uint256'\n  }, {\n    name: 'signature',\n    type: 'bytes',\n    internalType: 'bytes'\n  }],\n  outputs: [],\n  stateMutability: 'payable'\n}, {\n  type: 'function',\n  name: 'permit',\n  inputs: [{\n    name: 'owner',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'permitSingle',\n    type: 'tuple',\n    internalType: 'struct IAllowanceTransfer.PermitSingle',\n    components: [{\n      name: 'details',\n      type: 'tuple',\n      internalType: 'struct IAllowanceTransfer.PermitDetails',\n      components: [{\n        name: 'token',\n        type: 'address',\n        internalType: 'address'\n      }, {\n        name: 'amount',\n        type: 'uint160',\n        internalType: 'uint160'\n      }, {\n        name: 'expiration',\n        type: 'uint48',\n        internalType: 'uint48'\n      }, {\n        name: 'nonce',\n        type: 'uint48',\n        internalType: 'uint48'\n      }]\n    }, {\n      name: 'spender',\n      type: 'address',\n      internalType: 'address'\n    }, {\n      name: 'sigDeadline',\n      type: 'uint256',\n      internalType: 'uint256'\n    }]\n  }, {\n    name: 'signature',\n    type: 'bytes',\n    internalType: 'bytes'\n  }],\n  outputs: [{\n    name: 'err',\n    type: 'bytes',\n    internalType: 'bytes'\n  }],\n  stateMutability: 'payable'\n}, {\n  type: 'function',\n  name: 'permit2',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'address',\n    internalType: 'contract IAllowanceTransfer'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'permitBatch',\n  inputs: [{\n    name: 'owner',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: '_permitBatch',\n    type: 'tuple',\n    internalType: 'struct IAllowanceTransfer.PermitBatch',\n    components: [{\n      name: 'details',\n      type: 'tuple[]',\n      internalType: 'struct IAllowanceTransfer.PermitDetails[]',\n      components: [{\n        name: 'token',\n        type: 'address',\n        internalType: 'address'\n      }, {\n        name: 'amount',\n        type: 'uint160',\n        internalType: 'uint160'\n      }, {\n        name: 'expiration',\n        type: 'uint48',\n        internalType: 'uint48'\n      }, {\n        name: 'nonce',\n        type: 'uint48',\n        internalType: 'uint48'\n      }]\n    }, {\n      name: 'spender',\n      type: 'address',\n      internalType: 'address'\n    }, {\n      name: 'sigDeadline',\n      type: 'uint256',\n      internalType: 'uint256'\n    }]\n  }, {\n    name: 'signature',\n    type: 'bytes',\n    internalType: 'bytes'\n  }],\n  outputs: [{\n    name: 'err',\n    type: 'bytes',\n    internalType: 'bytes'\n  }],\n  stateMutability: 'payable'\n}, {\n  type: 'function',\n  name: 'permitForAll',\n  inputs: [{\n    name: 'owner',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'operator',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'approved',\n    type: 'bool',\n    internalType: 'bool'\n  }, {\n    name: 'deadline',\n    type: 'uint256',\n    internalType: 'uint256'\n  }, {\n    name: 'nonce',\n    type: 'uint256',\n    internalType: 'uint256'\n  }, {\n    name: 'signature',\n    type: 'bytes',\n    internalType: 'bytes'\n  }],\n  outputs: [],\n  stateMutability: 'payable'\n}, {\n  type: 'function',\n  name: 'poolKeys',\n  inputs: [{\n    name: 'poolId',\n    type: 'bytes25',\n    internalType: 'bytes25'\n  }],\n  outputs: [{\n    name: 'currency0',\n    type: 'address',\n    internalType: 'Currency'\n  }, {\n    name: 'currency1',\n    type: 'address',\n    internalType: 'Currency'\n  }, {\n    name: 'fee',\n    type: 'uint24',\n    internalType: 'uint24'\n  }, {\n    name: 'tickSpacing',\n    type: 'int24',\n    internalType: 'int24'\n  }, {\n    name: 'hooks',\n    type: 'address',\n    internalType: 'contract IHooks'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'poolManager',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'address',\n    internalType: 'contract IPoolManager'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'positionInfo',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [{\n    name: 'info',\n    type: 'uint256',\n    internalType: 'PositionInfo'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'revokeNonce',\n  inputs: [{\n    name: 'nonce',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [],\n  stateMutability: 'payable'\n}, {\n  type: 'function',\n  name: 'safeTransferFrom',\n  inputs: [{\n    name: 'from',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'to',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'id',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [],\n  stateMutability: 'nonpayable'\n}, {\n  type: 'function',\n  name: 'safeTransferFrom',\n  inputs: [{\n    name: 'from',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'to',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'id',\n    type: 'uint256',\n    internalType: 'uint256'\n  }, {\n    name: 'data',\n    type: 'bytes',\n    internalType: 'bytes'\n  }],\n  outputs: [],\n  stateMutability: 'nonpayable'\n}, {\n  type: 'function',\n  name: 'setApprovalForAll',\n  inputs: [{\n    name: 'operator',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'approved',\n    type: 'bool',\n    internalType: 'bool'\n  }],\n  outputs: [],\n  stateMutability: 'nonpayable'\n}, {\n  type: 'function',\n  name: 'subscribe',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256',\n    internalType: 'uint256'\n  }, {\n    name: 'newSubscriber',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'data',\n    type: 'bytes',\n    internalType: 'bytes'\n  }],\n  outputs: [],\n  stateMutability: 'payable'\n}, {\n  type: 'function',\n  name: 'subscriber',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [{\n    name: 'subscriber',\n    type: 'address',\n    internalType: 'contract ISubscriber'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'supportsInterface',\n  inputs: [{\n    name: 'interfaceId',\n    type: 'bytes4',\n    internalType: 'bytes4'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bool',\n    internalType: 'bool'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'symbol',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'string',\n    internalType: 'string'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'tokenDescriptor',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'address',\n    internalType: 'contract IPositionDescriptor'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'tokenURI',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'string',\n    internalType: 'string'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'function',\n  name: 'transferFrom',\n  inputs: [{\n    name: 'from',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'to',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'id',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [],\n  stateMutability: 'nonpayable'\n}, {\n  type: 'function',\n  name: 'unlockCallback',\n  inputs: [{\n    name: 'data',\n    type: 'bytes',\n    internalType: 'bytes'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bytes',\n    internalType: 'bytes'\n  }],\n  stateMutability: 'nonpayable'\n}, {\n  type: 'function',\n  name: 'unsubscribe',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  outputs: [],\n  stateMutability: 'payable'\n}, {\n  type: 'function',\n  name: 'unsubscribeGasLimit',\n  inputs: [],\n  outputs: [{\n    name: '',\n    type: 'uint256',\n    internalType: 'uint256'\n  }],\n  stateMutability: 'view'\n}, {\n  type: 'event',\n  name: 'Approval',\n  inputs: [{\n    name: 'owner',\n    type: 'address',\n    indexed: true,\n    internalType: 'address'\n  }, {\n    name: 'spender',\n    type: 'address',\n    indexed: true,\n    internalType: 'address'\n  }, {\n    name: 'id',\n    type: 'uint256',\n    indexed: true,\n    internalType: 'uint256'\n  }],\n  anonymous: false\n}, {\n  type: 'event',\n  name: 'ApprovalForAll',\n  inputs: [{\n    name: 'owner',\n    type: 'address',\n    indexed: true,\n    internalType: 'address'\n  }, {\n    name: 'operator',\n    type: 'address',\n    indexed: true,\n    internalType: 'address'\n  }, {\n    name: 'approved',\n    type: 'bool',\n    indexed: false,\n    internalType: 'bool'\n  }],\n  anonymous: false\n}, {\n  type: 'event',\n  name: 'Subscription',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256',\n    indexed: true,\n    internalType: 'uint256'\n  }, {\n    name: 'subscriber',\n    type: 'address',\n    indexed: true,\n    internalType: 'address'\n  }],\n  anonymous: false\n}, {\n  type: 'event',\n  name: 'Transfer',\n  inputs: [{\n    name: 'from',\n    type: 'address',\n    indexed: true,\n    internalType: 'address'\n  }, {\n    name: 'to',\n    type: 'address',\n    indexed: true,\n    internalType: 'address'\n  }, {\n    name: 'id',\n    type: 'uint256',\n    indexed: true,\n    internalType: 'uint256'\n  }],\n  anonymous: false\n}, {\n  type: 'event',\n  name: 'Unsubscription',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256',\n    indexed: true,\n    internalType: 'uint256'\n  }, {\n    name: 'subscriber',\n    type: 'address',\n    indexed: true,\n    internalType: 'address'\n  }],\n  anonymous: false\n}, {\n  type: 'error',\n  name: 'AlreadySubscribed',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256',\n    internalType: 'uint256'\n  }, {\n    name: 'subscriber',\n    type: 'address',\n    internalType: 'address'\n  }]\n}, {\n  type: 'error',\n  name: 'BurnNotificationReverted',\n  inputs: [{\n    name: 'subscriber',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'reason',\n    type: 'bytes',\n    internalType: 'bytes'\n  }]\n}, {\n  type: 'error',\n  name: 'ContractLocked',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'DeadlinePassed',\n  inputs: [{\n    name: 'deadline',\n    type: 'uint256',\n    internalType: 'uint256'\n  }]\n}, {\n  type: 'error',\n  name: 'DeltaNotNegative',\n  inputs: [{\n    name: 'currency',\n    type: 'address',\n    internalType: 'Currency'\n  }]\n}, {\n  type: 'error',\n  name: 'DeltaNotPositive',\n  inputs: [{\n    name: 'currency',\n    type: 'address',\n    internalType: 'Currency'\n  }]\n}, {\n  type: 'error',\n  name: 'GasLimitTooLow',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'InputLengthMismatch',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'InsufficientBalance',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'InvalidContractSignature',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'InvalidEthSender',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'InvalidSignature',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'InvalidSignatureLength',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'InvalidSigner',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'MaximumAmountExceeded',\n  inputs: [{\n    name: 'maximumAmount',\n    type: 'uint128',\n    internalType: 'uint128'\n  }, {\n    name: 'amountRequested',\n    type: 'uint128',\n    internalType: 'uint128'\n  }]\n}, {\n  type: 'error',\n  name: 'MinimumAmountInsufficient',\n  inputs: [{\n    name: 'minimumAmount',\n    type: 'uint128',\n    internalType: 'uint128'\n  }, {\n    name: 'amountReceived',\n    type: 'uint128',\n    internalType: 'uint128'\n  }]\n}, {\n  type: 'error',\n  name: 'ModifyLiquidityNotificationReverted',\n  inputs: [{\n    name: 'subscriber',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'reason',\n    type: 'bytes',\n    internalType: 'bytes'\n  }]\n}, {\n  type: 'error',\n  name: 'NoCodeSubscriber',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'NoSelfPermit',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'NonceAlreadyUsed',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'NotApproved',\n  inputs: [{\n    name: 'caller',\n    type: 'address',\n    internalType: 'address'\n  }]\n}, {\n  type: 'error',\n  name: 'NotPoolManager',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'NotSubscribed',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'PoolManagerMustBeLocked',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'SignatureDeadlineExpired',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'SubscriptionReverted',\n  inputs: [{\n    name: 'subscriber',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'reason',\n    type: 'bytes',\n    internalType: 'bytes'\n  }]\n}, {\n  type: 'error',\n  name: 'TransferNotificationReverted',\n  inputs: [{\n    name: 'subscriber',\n    type: 'address',\n    internalType: 'address'\n  }, {\n    name: 'reason',\n    type: 'bytes',\n    internalType: 'bytes'\n  }]\n}, {\n  type: 'error',\n  name: 'Unauthorized',\n  inputs: []\n}, {\n  type: 'error',\n  name: 'UnsupportedAction',\n  inputs: [{\n    name: 'action',\n    type: 'uint256',\n    internalType: 'uint256'\n  }]\n}];\n\nvar NFT_PERMIT_TYPES = {\n  Permit: [{\n    name: 'spender',\n    type: 'address'\n  }, {\n    name: 'tokenId',\n    type: 'uint256'\n  }, {\n    name: 'nonce',\n    type: 'uint256'\n  }, {\n    name: 'deadline',\n    type: 'uint256'\n  }]\n};\n// type guard\nfunction isMint(options) {\n  return Object.keys(options).some(function (k) {\n    return k === 'recipient';\n  });\n}\nfunction shouldCreatePool(options) {\n  if (options.createPool) {\n    !(options.sqrtPriceX96 !== undefined) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, NO_SQRT_PRICE) : 0 : void 0;\n    return true;\n  }\n  return false;\n}\nvar V4PositionManager = /*#__PURE__*/function () {\n  /**\r\n   * Cannot be constructed.\r\n   */\n  function V4PositionManager() {}\n  /**\r\n   * Public methods to encode method parameters for different actions on the PositionManager contract\r\n   */\n  V4PositionManager.createCallParameters = function createCallParameters(poolKey, sqrtPriceX96) {\n    return {\n      calldata: this.encodeInitializePool(poolKey, sqrtPriceX96),\n      value: toHex(0)\n    };\n  };\n  V4PositionManager.addCallParameters = function addCallParameters(position, options) {\n    /**\r\n     * Cases:\r\n     * - if pool does not exist yet, encode initializePool\r\n     * then,\r\n     * - if is mint, encode MINT_POSITION. If migrating, encode a SETTLE and SWEEP for both currencies. Else, encode a SETTLE_PAIR. If on a NATIVE pool, encode a SWEEP.\r\n     * - else, encode INCREASE_LIQUIDITY and SETTLE_PAIR. If it is on a NATIVE pool, encode a SWEEP.\r\n     */\n    !jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].greaterThan(position.liquidity, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, ZERO_LIQUIDITY) : 0 : void 0;\n    var calldataList = [];\n    var planner = new V4PositionPlanner();\n    // Encode initialize pool.\n    if (isMint(options) && shouldCreatePool(options)) {\n      // No planner used here because initializePool is not supported as an Action\n      calldataList.push(V4PositionManager.encodeInitializePool(position.pool.poolKey, options.sqrtPriceX96));\n    }\n    // position.pool.currency0 is native if and only if options.useNative is set\n    !(position.pool.currency0 === options.useNative || !position.pool.currency0.isNative && options.useNative === undefined) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, NATIVE_NOT_SET) : 0 : void 0;\n    // adjust for slippage\n    var maximumAmounts = position.mintAmountsWithSlippage(options.slippageTolerance);\n    var amount0Max = toHex(maximumAmounts.amount0);\n    var amount1Max = toHex(maximumAmounts.amount1);\n    // We use permit2 to approve tokens to the position manager\n    if (options.batchPermit) {\n      calldataList.push(V4PositionManager.encodePermitBatch(options.batchPermit.owner, options.batchPermit.permitBatch, options.batchPermit.signature));\n    }\n    // mint\n    if (isMint(options)) {\n      var recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.validateAndParseAddress)(options.recipient);\n      planner.addMint(position.pool, position.tickLower, position.tickUpper, position.liquidity, amount0Max, amount1Max, recipient, options.hookData);\n    } else {\n      // increase\n      planner.addIncrease(options.tokenId, position.liquidity, amount0Max, amount1Max, options.hookData);\n    }\n    var value = toHex(0);\n    // If migrating, we need to settle and sweep both currencies individually\n    if (isMint(options) && options.migrate) {\n      if (options.useNative) {\n        // unwrap the exact amount needed to send to the pool manager\n        planner.addUnwrap(OPEN_DELTA);\n        // payer is v4 position manager\n        planner.addSettle(position.pool.currency0, false);\n        planner.addSettle(position.pool.currency1, false);\n        // sweep any leftover wrapped native that was not unwrapped\n        // recipient will be same as the v4 lp token recipient\n        planner.addSweep(position.pool.currency0.wrapped, options.recipient);\n        planner.addSweep(position.pool.currency1, options.recipient);\n      } else {\n        // payer is v4 position manager\n        planner.addSettle(position.pool.currency0, false);\n        planner.addSettle(position.pool.currency1, false);\n        // recipient will be same as the v4 lp token recipient\n        planner.addSweep(position.pool.currency0, options.recipient);\n        planner.addSweep(position.pool.currency1, options.recipient);\n      }\n    } else {\n      // need to settle both currencies when minting / adding liquidity (user is the payer)\n      planner.addSettlePair(position.pool.currency0, position.pool.currency1);\n      // When not migrating and adding native currency, add a final sweep\n      if (options.useNative) {\n        // Any sweeping must happen after the settling.\n        // native currency will always be currency0 in v4\n        value = toHex(amount0Max);\n        planner.addSweep(position.pool.currency0, MSG_SENDER);\n      }\n    }\n    calldataList.push(V4PositionManager.encodeModifyLiquidities(planner.finalize(), options.deadline));\n    return {\n      calldata: Multicall.encodeMulticall(calldataList),\n      value: value\n    };\n  }\n  /**\r\n   * Produces the calldata for completely or partially exiting a position\r\n   * @param position The position to exit\r\n   * @param options Additional information necessary for generating the calldata\r\n   * @returns The call parameters\r\n   */;\n  V4PositionManager.removeCallParameters = function removeCallParameters(position, options) {\n    /**\r\n     * cases:\r\n     * - if liquidityPercentage is 100%, encode BURN_POSITION and then TAKE_PAIR\r\n     * - else, encode DECREASE_LIQUIDITY and then TAKE_PAIR\r\n     */\n    var calldataList = [];\n    var planner = new V4PositionPlanner();\n    var tokenId = toHex(options.tokenId);\n    if (options.burnToken) {\n      // if burnToken is true, the specified liquidity percentage must be 100%\n      !options.liquidityPercentage.equalTo(ONE) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, CANNOT_BURN) : 0 : void 0;\n      // if there is a permit, encode the ERC721Permit permit call\n      if (options.permit) {\n        calldataList.push(V4PositionManager.encodeERC721Permit(options.permit.spender, options.permit.tokenId, options.permit.deadline, options.permit.nonce, options.permit.signature));\n      }\n      // slippage-adjusted amounts derived from current position liquidity\n      var _position$burnAmounts = position.burnAmountsWithSlippage(options.slippageTolerance),\n        amount0Min = _position$burnAmounts.amount0,\n        amount1Min = _position$burnAmounts.amount1;\n      planner.addBurn(tokenId, amount0Min, amount1Min, options.hookData);\n    } else {\n      var _options$hookData;\n      // construct a partial position with a percentage of liquidity\n      var partialPosition = new Position({\n        pool: position.pool,\n        liquidity: options.liquidityPercentage.multiply(position.liquidity).quotient,\n        tickLower: position.tickLower,\n        tickUpper: position.tickUpper\n      });\n      // If the partial position has liquidity=0, this is a collect call and collectCallParameters should be used\n      !jsbi__WEBPACK_IMPORTED_MODULE_2__[\"default\"].greaterThan(partialPosition.liquidity, ZERO) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, ZERO_LIQUIDITY) : 0 : void 0;\n      // slippage-adjusted underlying amounts\n      var _partialPosition$burn = partialPosition.burnAmountsWithSlippage(options.slippageTolerance),\n        _amount0Min = _partialPosition$burn.amount0,\n        _amount1Min = _partialPosition$burn.amount1;\n      planner.addDecrease(tokenId, partialPosition.liquidity.toString(), _amount0Min.toString(), _amount1Min.toString(), (_options$hookData = options.hookData) != null ? _options$hookData : EMPTY_BYTES);\n    }\n    planner.addTakePair(position.pool.currency0, position.pool.currency1, MSG_SENDER);\n    calldataList.push(V4PositionManager.encodeModifyLiquidities(planner.finalize(), options.deadline));\n    return {\n      calldata: Multicall.encodeMulticall(calldataList),\n      value: toHex(0)\n    };\n  }\n  /**\r\n   * Produces the calldata for collecting fees from a position\r\n   * @param position The position to collect fees from\r\n   * @param options Additional information necessary for generating the calldata\r\n   * @returns The call parameters\r\n   */;\n  V4PositionManager.collectCallParameters = function collectCallParameters(position, options) {\n    var calldataList = [];\n    var planner = new V4PositionPlanner();\n    var tokenId = toHex(options.tokenId);\n    var recipient = (0,_uniswap_sdk_core__WEBPACK_IMPORTED_MODULE_1__.validateAndParseAddress)(options.recipient);\n    /**\r\n     * To collect fees in V4, we need to:\r\n     * - encode a decrease liquidity by 0\r\n     * - and encode a TAKE_PAIR\r\n     */\n    planner.addDecrease(tokenId, '0', '0', '0', options.hookData);\n    planner.addTakePair(position.pool.currency0, position.pool.currency1, recipient);\n    calldataList.push(V4PositionManager.encodeModifyLiquidities(planner.finalize(), options.deadline));\n    return {\n      calldata: Multicall.encodeMulticall(calldataList),\n      value: toHex(0)\n    };\n  }\n  // Initialize a pool\n  ;\n  V4PositionManager.encodeInitializePool = function encodeInitializePool(poolKey, sqrtPriceX96) {\n    return V4PositionManager.INTERFACE.encodeFunctionData(PositionFunctions.INITIALIZE_POOL, [poolKey, sqrtPriceX96.toString()]);\n  }\n  // Encode a modify liquidities call\n  ;\n  V4PositionManager.encodeModifyLiquidities = function encodeModifyLiquidities(unlockData, deadline) {\n    return V4PositionManager.INTERFACE.encodeFunctionData(PositionFunctions.MODIFY_LIQUIDITIES, [unlockData, deadline]);\n  }\n  // Encode a permit batch call\n  ;\n  V4PositionManager.encodePermitBatch = function encodePermitBatch(owner, permitBatch, signature) {\n    return V4PositionManager.INTERFACE.encodeFunctionData(PositionFunctions.PERMIT_BATCH, [owner, permitBatch, signature]);\n  }\n  // Encode a ERC721Permit permit call\n  ;\n  V4PositionManager.encodeERC721Permit = function encodeERC721Permit(spender, tokenId, deadline, nonce, signature) {\n    return V4PositionManager.INTERFACE.encodeFunctionData(PositionFunctions.ERC721PERMIT_PERMIT, [spender, tokenId, deadline, nonce, signature]);\n  }\n  // Prepare the params for an EIP712 signTypedData request\n  ;\n  V4PositionManager.getPermitData = function getPermitData(permit, positionManagerAddress, chainId) {\n    return {\n      domain: {\n        name: 'Uniswap V4 Positions NFT',\n        chainId: chainId,\n        verifyingContract: positionManagerAddress\n      },\n      types: NFT_PERMIT_TYPES,\n      values: permit\n    };\n  };\n  return V4PositionManager;\n}();\nV4PositionManager.INTERFACE = /*#__PURE__*/new _ethersproject_abi__WEBPACK_IMPORTED_MODULE_10__.Interface(positionManagerAbi);\n\n\n//# sourceMappingURL=v4-sdk.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@uniswap/v4-sdk/dist/v4-sdk.esm.js\n");

/***/ })

};
;